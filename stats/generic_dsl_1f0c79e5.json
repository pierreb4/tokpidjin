{
  "f_ofcolor": {
    "calls": 10,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3358": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=9), 2)"
          }
        ],
        "code_context": "x1 = f_ofcolor(I, TWO)"
      },
      "solvers.py:3361": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=9), 6)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=9), 3)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=9), 7)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=9), 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=9), 8)"
          }
        ],
        "code_context": "x4 = f_ofcolor(x2, x3)"
      }
    },
    "type_signatures": [
      "f_ofcolor(tuple, int)"
    ],
    "value_signatures": [
      "f_ofcolor(tuple(len=9), 6)",
      "f_ofcolor(tuple(len=9), 3)",
      "f_ofcolor(tuple(len=9), 7)",
      "f_ofcolor(tuple(len=9), 4)",
      "f_ofcolor(tuple(len=9), 2)",
      "f_ofcolor(tuple(len=9), 8)"
    ]
  },
  "replace": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3359": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "replace(tuple, int, int)",
            "value_signature": "replace(tuple(len=9), 2, 0)"
          }
        ],
        "code_context": "x2 = replace(I, TWO, ZERO)"
      }
    },
    "type_signatures": [
      "replace(tuple, int, int)"
    ],
    "value_signatures": [
      "replace(tuple(len=9), 2, 0)"
    ]
  },
  "leastcolor_t": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3360": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(tuple(len=9))"
          }
        ],
        "code_context": "x3 = leastcolor_t(x2)"
      }
    },
    "type_signatures": [
      "leastcolor_t(tuple)"
    ],
    "value_signatures": [
      "leastcolor_t(tuple(len=9))"
    ]
  },
  "combine_f": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3362": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "combine_f(frozenset, frozenset)",
            "value_signature": "combine_f(frozenset({(3, 4), (4, 3)}), frozenset({(4, 4), (3, 3)}))"
          },
          {
            "type_signature": "combine_f(frozenset, frozenset)",
            "value_signature": "combine_f(frozenset({(2, 3)}), frozenset({(1, 2), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "combine_f(frozenset, frozenset)",
            "value_signature": "combine_f(frozenset({(3, 3), (3, 4), (4, 3)}), frozenset({(4, 4)}))"
          },
          {
            "type_signature": "combine_f(frozenset, frozenset)",
            "value_signature": "combine_f(frozenset({(4, 3)}), frozenset({(5, 3), (4, 2), (5, 2)}))"
          },
          {
            "type_signature": "combine_f(frozenset, frozenset)",
            "value_signature": "combine_f(frozenset({(2, 5), (2, 6), (3, 6)}), frozenset({(3, 5)}))"
          }
        ],
        "code_context": "x5 = combine_f(x1, x4)"
      }
    },
    "type_signatures": [
      "combine_f(frozenset, frozenset)"
    ],
    "value_signatures": [
      "combine_f(frozenset({(3, 3), (3, 4), (4, 3)}), frozenset({(4, 4)}))",
      "combine_f(frozenset({(4, 3)}), frozenset({(5, 3), (4, 2), (5, 2)}))",
      "combine_f(frozenset({(2, 5), (2, 6), (3, 6)}), frozenset({(3, 5)}))",
      "combine_f(frozenset({(3, 4), (4, 3)}), frozenset({(4, 4), (3, 3)}))",
      "combine_f(frozenset({(2, 3)}), frozenset({(1, 2), (1, 3), (2, 2)}))"
    ]
  },
  "recolor_i": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3363": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(6, frozenset({(4, 4), (3, 3), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(3, frozenset({(2, 3), (1, 2), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(7, frozenset({(4, 4), (3, 3), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(4, frozenset({(5, 3), (5, 2), (4, 2), (4, 3)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(8, frozenset({(2, 5), (2, 6), (3, 5), (3, 6)}))"
          }
        ],
        "code_context": "x6 = recolor_i(x3, x5)"
      }
    },
    "type_signatures": [
      "recolor_i(int, frozenset)"
    ],
    "value_signatures": [
      "recolor_i(3, frozenset({(2, 3), (1, 2), (1, 3), (2, 2)}))",
      "recolor_i(7, frozenset({(4, 4), (3, 3), (3, 4), (4, 3)}))",
      "recolor_i(6, frozenset({(4, 4), (3, 3), (3, 4), (4, 3)}))",
      "recolor_i(8, frozenset({(2, 5), (2, 6), (3, 5), (3, 6)}))",
      "recolor_i(4, frozenset({(5, 3), (5, 2), (4, 2), (4, 3)}))"
    ]
  },
  "toindices_i": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3363": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(4, 4), (3, 3), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(2, 3), (1, 2), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(5, 3), (5, 2), (4, 2), (4, 3)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(2, 5), (2, 6), (3, 5), (3, 6)}))"
          }
        ],
        "code_context": "x6 = recolor_i(x3, x5)"
      }
    },
    "type_signatures": [
      "toindices_i(frozenset)"
    ],
    "value_signatures": [
      "toindices_i(frozenset({(2, 3), (1, 2), (1, 3), (2, 2)}))",
      "toindices_i(frozenset({(4, 4), (3, 3), (3, 4), (4, 3)}))",
      "toindices_i(frozenset({(2, 5), (2, 6), (3, 5), (3, 6)}))",
      "toindices_i(frozenset({(5, 3), (5, 2), (4, 2), (4, 3)}))"
    ]
  },
  "compose": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3364": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function decrement at 0x103269790>, <function double at 0x103269c10>)"
          }
        ],
        "code_context": "x7 = compose(decrement, double)"
      }
    },
    "type_signatures": [
      "compose(function, function)"
    ],
    "value_signatures": [
      "compose(<function decrement at 0x103269790>, <function double at 0x103269c10>)"
    ]
  },
  "ulcorner": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3365": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset({(4, 4), (3, 3), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset({(2, 3), (1, 2), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset({(5, 3), (5, 2), (4, 2), (4, 3)}))"
          },
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset({(2, 5), (2, 6), (3, 5), (3, 6)}))"
          }
        ],
        "code_context": "x8 = ulcorner(x5)"
      }
    },
    "type_signatures": [
      "ulcorner(frozenset)"
    ],
    "value_signatures": [
      "ulcorner(frozenset({(2, 5), (2, 6), (3, 5), (3, 6)}))",
      "ulcorner(frozenset({(4, 4), (3, 3), (3, 4), (4, 3)}))",
      "ulcorner(frozenset({(5, 3), (5, 2), (4, 2), (4, 3)}))",
      "ulcorner(frozenset({(2, 3), (1, 2), (1, 3), (2, 2)}))"
    ]
  },
  "toindices": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3365": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(4, 4), (3, 3), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, 3), (1, 2), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(5, 3), (5, 2), (4, 2), (4, 3)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, 5), (2, 6), (3, 5), (3, 6)}))"
          }
        ],
        "code_context": "x8 = ulcorner(x5)"
      }
    },
    "type_signatures": [
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset({(2, 3), (1, 2), (1, 3), (2, 2)}))",
      "toindices(frozenset({(4, 4), (3, 3), (3, 4), (4, 3)}))",
      "toindices(frozenset({(5, 3), (5, 2), (4, 2), (4, 3)}))",
      "toindices(frozenset({(2, 5), (2, 6), (3, 5), (3, 6)}))"
    ]
  },
  "invert": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3366": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "invert(tuple)",
            "value_signature": "invert((3, 3))"
          },
          {
            "type_signature": "invert(tuple)",
            "value_signature": "invert((1, 2))"
          },
          {
            "type_signature": "invert(tuple)",
            "value_signature": "invert((4, 2))"
          },
          {
            "type_signature": "invert(tuple)",
            "value_signature": "invert((2, 5))"
          }
        ],
        "code_context": "x9 = invert(x8)"
      }
    },
    "type_signatures": [
      "invert(tuple)"
    ],
    "value_signatures": [
      "invert((3, 3))",
      "invert((4, 2))",
      "invert((1, 2))",
      "invert((2, 5))"
    ]
  },
  "shift": {
    "calls": 90,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3367": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, 4), (4, 3)}), (-3, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(2, 3)}), (-1, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, 3), (3, 4), (4, 3)}), (-3, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, 3)}), (-4, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(2, 5), (2, 6), (3, 6)}), (-2, -5))"
          }
        ],
        "code_context": "x10 = shift(x1, x9)"
      },
      "solvers.py:3372": {
        "count": 85,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (5, -5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-1, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (3, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-7, 7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (1, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (8, -8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-3, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (7, -7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-8, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-5, 5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (8, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (5, 5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (7, 7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (1, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (3, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (5, -5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-3, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-3, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-8, -8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-7, -7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-1, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-1, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (3, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-5, 5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-7, 7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-5, -5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (8, -8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (1, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (7, -7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-8, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-1, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-7, 7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-3, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-8, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-5, 5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-3, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-3, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-8, -8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-7, -7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-1, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (7, 7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-1, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (3, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-5, 5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (8, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-7, 7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-5, -5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (5, 5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (1, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-8, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-2, 2))"
          }
        ],
        "code_context": "x15 = mapply(x14, x13)"
      }
    },
    "type_signatures": [
      "shift(frozenset, tuple)"
    ],
    "value_signatures": [
      "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-8, 8))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-8, 8))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-5, 5))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (4, -4))",
      "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (0, 0))",
      "shift(frozenset({(2, 3)}), (-1, -2))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-3, 3))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (2, 2))",
      "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (0, 0))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (1, 1))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (3, 3))",
      "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-1, 1))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (5, -5))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (6, -6))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-3, 3))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-1, 1))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (2, -2))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (3, -3))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (8, 8))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-2, 2))",
      "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (3, 3))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-1, 1))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (8, -8))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-2, 2))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (1, -1))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-6, -6))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-5, 5))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-1, -1))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (1, -1))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (0, 0))",
      "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (5, 5))",
      "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-5, 5))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-5, 5))",
      "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-3, 3))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-2, -2))",
      "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (7, 7))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-8, 8))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (5, -5))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-3, 3))",
      "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (1, 1))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-3, -3))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (6, -6))",
      "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (8, 8))",
      "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-4, 4))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-7, 7))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-1, -1))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (8, -8))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-6, -6))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (7, -7))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-5, -5))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-5, -5))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-1, 1))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-6, 6))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-8, -8))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-7, 7))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (5, 5))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-6, 6))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (2, -2))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-2, 2))",
      "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (6, 6))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (7, -7))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (0, 0))",
      "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (4, 4))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-6, 6))",
      "shift(frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), , (2, 2))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-4, -4))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (4, 4))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-4, 4))",
      "shift(frozenset({(4, 3)}), (-4, -2))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-8, -8))",
      "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-2, 2))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-8, 8))",
      "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-7, 7))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-7, -7))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-4, -4))",
      "shift(frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), , (-6, 6))",
      "shift(frozenset({(3, 3), (3, 4), (4, 3)}), (-3, -3))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-4, 4))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (6, 6))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-3, -3))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (3, -3))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (4, -4))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-7, -7))",
      "shift(frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), , (-7, 7))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (0, 0))",
      "shift(frozenset({(2, 5), (2, 6), (3, 6)}), (-2, -5))",
      "shift(frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), , (-2, -2))",
      "shift(frozenset({(3, 4), (4, 3)}), (-3, -3))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (-4, 4))",
      "shift(frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), , (7, 7))"
    ]
  },
  "apply": {
    "calls": 10,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3368": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function compose.<locals>.<lambda> at 0x103308ee0, frozenset({(0, 1), (1, 0)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function compose.<locals>.<lambda> at 0x103308ee0, frozenset({(1, 1)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function compose.<locals>.<lambda> at 0x103308ee0, frozenset({(0, 1), (1, 0), (0, 0)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function compose.<locals>.<lambda> at 0x103308ee0, frozenset({(0, 1)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function compose.<locals>.<lambda> at 0x103308ee0, frozenset({(0, 1), (1, 1), (0, 0)}))"
          }
        ],
        "code_context": "x11 = apply(x7, x10)"
      },
      "solvers.py:3372": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=17))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=9))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=25))"
          }
        ],
        "code_context": "x15 = mapply(x14, x13)"
      }
    },
    "type_signatures": [
      "apply(function, frozenset)"
    ],
    "value_signatures": [
      "apply(<function compose.<locals>.<lambda> at 0x103308ee0, frozenset({(1, 1)}))",
      "apply(<function compose.<locals>.<lambda> at 0x103308ee0, frozenset({(0, 1)}))",
      "apply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=25))",
      "apply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=17))",
      "apply(<function compose.<locals>.<lambda> at 0x103308ee0, frozenset({(0, 1), (1, 0)}))",
      "apply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=9))",
      "apply(<function compose.<locals>.<lambda> at 0x103308ee0, frozenset({(0, 1), (1, 1), (0, 0)}))",
      "apply(<function compose.<locals>.<lambda> at 0x103308ee0, frozenset({(0, 1), (1, 0), (0, 0)}))"
    ]
  },
  "double": {
    "calls": 10,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3368": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "double(tuple)",
            "value_signature": "double((0, 1))"
          },
          {
            "type_signature": "double(tuple)",
            "value_signature": "double((1, 0))"
          },
          {
            "type_signature": "double(tuple)",
            "value_signature": "double((1, 1))"
          },
          {
            "type_signature": "double(tuple)",
            "value_signature": "double((0, 0))"
          }
        ],
        "code_context": "x11 = apply(x7, x10)"
      }
    },
    "type_signatures": [
      "double(tuple)"
    ],
    "value_signatures": [
      "double((0, 0))",
      "double((1, 0))",
      "double((0, 1))",
      "double((1, 1))"
    ]
  },
  "decrement": {
    "calls": 10,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3368": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((0, 2))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((2, 0))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((2, 2))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((0, 0))"
          }
        ],
        "code_context": "x11 = apply(x7, x10)"
      }
    },
    "type_signatures": [
      "decrement(tuple)"
    ],
    "value_signatures": [
      "decrement((0, 2))",
      "decrement((0, 0))",
      "decrement((2, 2))",
      "decrement((2, 0))"
    ]
  },
  "interval": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3369": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "interval(int, int, int)",
            "value_signature": "interval(0, 9, 1)"
          }
        ],
        "code_context": "x12 = interval(ZERO, NINE, ONE)"
      }
    },
    "type_signatures": [
      "interval(int, int, int)"
    ],
    "value_signatures": [
      "interval(0, 9, 1)"
    ]
  },
  "prapply": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3370": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "prapply(function, frozenset, tuple)",
            "value_signature": "prapply(<function multiply at 0x10327cc10>, frozenset({(-1, 1), (1, -1)}), tuple(len=9))"
          },
          {
            "type_signature": "prapply(function, frozenset, tuple)",
            "value_signature": "prapply(<function multiply at 0x10327cc10>, frozenset({(1, 1)}), tuple(len=9))"
          },
          {
            "type_signature": "prapply(function, frozenset, tuple)",
            "value_signature": "prapply(<function multiply at 0x10327cc10>, frozenset({(-1, 1), (-1, -1), (1, -1)}), tuple(len=9))"
          },
          {
            "type_signature": "prapply(function, frozenset, tuple)",
            "value_signature": "prapply(<function multiply at 0x10327cc10>, frozenset({(-1, 1)}), tuple(len=9))"
          },
          {
            "type_signature": "prapply(function, frozenset, tuple)",
            "value_signature": "prapply(<function multiply at 0x10327cc10>, frozenset({(-1, 1), (1, 1), (-1, -1)}), tuple(len=9))"
          }
        ],
        "code_context": "x13 = prapply(multiply, x11, x12)"
      }
    },
    "type_signatures": [
      "prapply(function, frozenset, tuple)"
    ],
    "value_signatures": [
      "prapply(<function multiply at 0x10327cc10>, frozenset({(-1, 1)}), tuple(len=9))",
      "prapply(<function multiply at 0x10327cc10>, frozenset({(-1, 1), (-1, -1), (1, -1)}), tuple(len=9))",
      "prapply(<function multiply at 0x10327cc10>, frozenset({(-1, 1), (1, 1), (-1, -1)}), tuple(len=9))",
      "prapply(<function multiply at 0x10327cc10>, frozenset({(-1, 1), (1, -1)}), tuple(len=9))",
      "prapply(<function multiply at 0x10327cc10>, frozenset({(1, 1)}), tuple(len=9))"
    ]
  },
  "multiply": {
    "calls": 90,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3370": {
        "count": 36,
        "signatures": [
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, 1), 0)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, -1), 0)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, 1), 1)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, -1), 1)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, 1), 2)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, -1), 2)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, 1), 3)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, -1), 3)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, 1), 4)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, -1), 4)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, 1), 5)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, -1), 5)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, 1), 6)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, -1), 6)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, 1), 7)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, -1), 7)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, 1), 8)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, -1), 8)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, 1), 0)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, 1), 1)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, 1), 2)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, 1), 3)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, 1), 4)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, 1), 5)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, 1), 6)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, 1), 7)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((1, 1), 8)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, -1), 0)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, -1), 1)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, -1), 2)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, -1), 3)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, -1), 4)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, -1), 5)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, -1), 6)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, -1), 7)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-1, -1), 8)"
          }
        ],
        "code_context": "x13 = prapply(multiply, x11, x12)"
      }
    },
    "type_signatures": [
      "multiply(tuple, int)"
    ],
    "value_signatures": [
      "multiply((-1, -1), 0)",
      "multiply((1, 1), 5)",
      "multiply((-1, -1), 2)",
      "multiply((-1, -1), 8)",
      "multiply((-1, -1), 6)",
      "multiply((1, 1), 1)",
      "multiply((-1, -1), 3)",
      "multiply((-1, 1), 6)",
      "multiply((1, 1), 8)",
      "multiply((-1, -1), 5)",
      "multiply((-1, 1), 3)",
      "multiply((1, 1), 0)",
      "multiply((-1, 1), 8)",
      "multiply((1, 1), 2)",
      "multiply((1, 1), 7)",
      "multiply((1, -1), 2)",
      "multiply((1, 1), 4)",
      "multiply((1, -1), 7)",
      "multiply((-1, 1), 5)",
      "multiply((1, -1), 1)",
      "multiply((-1, 1), 2)",
      "multiply((1, 1), 6)",
      "multiply((-1, -1), 4)",
      "multiply((-1, 1), 7)",
      "multiply((-1, -1), 1)",
      "multiply((1, 1), 3)",
      "multiply((1, -1), 6)",
      "multiply((1, -1), 3)",
      "multiply((1, -1), 5)",
      "multiply((1, -1), 8)",
      "multiply((-1, 1), 1)",
      "multiply((-1, 1), 4)",
      "multiply((1, -1), 0)",
      "multiply((1, -1), 4)",
      "multiply((-1, -1), 7)",
      "multiply((-1, 1), 0)"
    ]
  },
  "lbind": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3371": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x103285940>, frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), )"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x103285940>, frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), )"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x103285940>, frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), )"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x103285940>, frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), )"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x103285940>, frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), )"
          }
        ],
        "code_context": "x14 = lbind(shift, x6)"
      }
    },
    "type_signatures": [
      "lbind(function, frozenset)"
    ],
    "value_signatures": [
      "lbind(<function shift at 0x103285940>, frozenset({(7, (4, 4)), (7, (3, 4)), (7, (3, 3)), )",
      "lbind(<function shift at 0x103285940>, frozenset({(3, (2, 3)), (3, (1, 3)), (3, (2, 2)), )",
      "lbind(<function shift at 0x103285940>, frozenset({(4, (4, 3)), (4, (5, 3)), (4, (4, 2)), )",
      "lbind(<function shift at 0x103285940>, frozenset({(8, (3, 6)), (8, (2, 5)), (8, (3, 5)), )",
      "lbind(<function shift at 0x103285940>, frozenset({(6, (3, 4)), (6, (3, 3)), (6, (4, 3)), )"
    ]
  },
  "mapply": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3372": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=17))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=9))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=25))"
          }
        ],
        "code_context": "x15 = mapply(x14, x13)"
      }
    },
    "type_signatures": [
      "mapply(function, frozenset)"
    ],
    "value_signatures": [
      "mapply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=9))",
      "mapply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=17))",
      "mapply(<function lbind.<locals>.<lambda> at 0x1033b7160>, frozenset(len=25))"
    ]
  },
  "merge": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3372": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=17))"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=9))"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=25))"
          }
        ],
        "code_context": "x15 = mapply(x14, x13)"
      }
    },
    "type_signatures": [
      "merge(frozenset)"
    ],
    "value_signatures": [
      "merge(frozenset(len=17))",
      "merge(frozenset(len=9))",
      "merge(frozenset(len=25))"
    ]
  },
  "paint": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3373": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=9), frozenset(len=52))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=9), frozenset(len=28))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=9), frozenset(len=76))"
          }
        ],
        "code_context": "O = paint(I, x15)"
      }
    },
    "type_signatures": [
      "paint(tuple, frozenset)"
    ],
    "value_signatures": [
      "paint(tuple(len=9), frozenset(len=28))",
      "paint(tuple(len=9), frozenset(len=76))",
      "paint(tuple(len=9), frozenset(len=52))"
    ]
  }
}