{
  "summary": {
    "total_functions": 29,
    "dsl_functions": 29,
    "non_dsl_functions": 0,
    "functions_with_t_variants": 3,
    "functions_with_f_variants": 3,
    "threshold_percent": 100.0
  },
  "specialized_functions": [
    {
      "name": "mapply",
      "total_calls": 20,
      "tuple_percent": 0.0,
      "has_tuple_variant": true,
      "frozenset_percent": 0.0,
      "has_frozenset_variant": true,
      "meets_threshold": false,
      "call_sites": {
        "solvers.py:4071": {
          "count": 5,
          "code_context": "x5 = mapply(x4, x2)",
          "tuple_calls": 0,
          "frozenset_calls": 0
        },
        "solvers.py:4079": {
          "count": 4,
          "code_context": "x13 = mapply(outbox, x3)",
          "tuple_calls": 0,
          "frozenset_calls": 0
        },
        "solvers.py:4082": {
          "count": 5,
          "code_context": "x16 = mapply(x11, x14)",
          "tuple_calls": 0,
          "frozenset_calls": 0
        },
        "solvers.py:4083": {
          "count": 5,
          "code_context": "x17 = mapply(x12, x15)",
          "tuple_calls": 0,
          "frozenset_calls": 0
        }
      }
    },
    {
      "name": "apply",
      "total_calls": 20,
      "tuple_percent": 0.0,
      "has_tuple_variant": true,
      "frozenset_percent": 0.0,
      "has_frozenset_variant": true,
      "meets_threshold": false,
      "call_sites": {
        "solvers.py:4071": {
          "count": 5,
          "code_context": "x5 = mapply(x4, x2)",
          "tuple_calls": 0,
          "frozenset_calls": 0
        },
        "solvers.py:4079": {
          "count": 4,
          "code_context": "x13 = mapply(outbox, x3)",
          "tuple_calls": 0,
          "frozenset_calls": 0
        },
        "solvers.py:4082": {
          "count": 5,
          "code_context": "x16 = mapply(x11, x14)",
          "tuple_calls": 0,
          "frozenset_calls": 0
        },
        "solvers.py:4083": {
          "count": 5,
          "code_context": "x17 = mapply(x12, x15)",
          "tuple_calls": 0,
          "frozenset_calls": 0
        }
      }
    },
    {
      "name": "merge",
      "total_calls": 20,
      "tuple_percent": 0.0,
      "has_tuple_variant": true,
      "frozenset_percent": 100.0,
      "has_frozenset_variant": true,
      "meets_threshold": true,
      "call_sites": {
        "solvers.py:4071": {
          "count": 5,
          "code_context": "x5 = mapply(x4, x2)",
          "tuple_calls": 0,
          "frozenset_calls": 5
        },
        "solvers.py:4079": {
          "count": 5,
          "code_context": "x13 = mapply(outbox, x3)",
          "tuple_calls": 0,
          "frozenset_calls": 5
        },
        "solvers.py:4082": {
          "count": 5,
          "code_context": "x16 = mapply(x11, x14)",
          "tuple_calls": 0,
          "frozenset_calls": 5
        },
        "solvers.py:4083": {
          "count": 4,
          "code_context": "x17 = mapply(x12, x15)",
          "tuple_calls": 0,
          "frozenset_calls": 4
        }
      }
    }
  ],
  "high_impact_opportunities": [],
  "perfect_matches": [
    {
      "name": "merge",
      "variant": "merge_f",
      "type": "frozenset",
      "calls": 20,
      "call_sites": {
        "solvers.py:4071": {
          "count": 5,
          "code_context": "x5 = mapply(x4, x2)"
        },
        "solvers.py:4079": {
          "count": 5,
          "code_context": "x13 = mapply(outbox, x3)"
        },
        "solvers.py:4082": {
          "count": 5,
          "code_context": "x16 = mapply(x11, x14)"
        },
        "solvers.py:4083": {
          "count": 4,
          "code_context": "x17 = mapply(x12, x15)"
        }
      }
    }
  ],
  "analyzed_functions": [
    "objects",
    "mostcolor_t",
    "asindices",
    "neighbors",
    "dneighbors",
    "ineighbors",
    "f_ofcolor",
    "colorfilter",
    "rbind",
    "mapply",
    "apply",
    "shoot",
    "connect",
    "merge",
    "underfill",
    "toindices",
    "compose",
    "matcher",
    "power",
    "outbox",
    "uppermost",
    "leftmost",
    "lowermost",
    "rightmost",
    "sfilter_f",
    "width_f",
    "halve",
    "greater",
    "fill"
  ]
}