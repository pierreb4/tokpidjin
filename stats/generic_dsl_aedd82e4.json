{
  "objects": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:504": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((2, 2, 0, 0), (0, 2, 0, 0), (2, 2, 0, 2), (0, 0, , True, False, False)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((2, 2, 2, 0), (0, 2, 0, 0), (0, 0, 0, 2), (0, 2, , True, False, False)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((2, 2, 0), (2, 0, 2), (0, 2, 0)), True, False, False)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((0, 2, 2), (0, 2, 2), (2, 0, 0)), True, False, False)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((2, 2, 0, 2), (0, 2, 0, 0), (0, 0, 2, 0), (2, 0, , True, False, False)"
          }
        ],
        "code_context": "x1 = objects(I, T, F, F)"
      }
    },
    "type_signatures": [
      "objects(tuple, bool, bool, bool)"
    ],
    "value_signatures": [
      "objects(((0, 2, 2), (0, 2, 2), (2, 0, 0)), True, False, False)",
      "objects(((2, 2, 0), (2, 0, 2), (0, 2, 0)), True, False, False)",
      "objects(((2, 2, 0, 2), (0, 2, 0, 0), (0, 0, 2, 0), (2, 0, , True, False, False)",
      "objects(((2, 2, 0, 0), (0, 2, 0, 0), (2, 2, 0, 2), (0, 0, , True, False, False)",
      "objects(((2, 2, 2, 0), (0, 2, 0, 0), (0, 0, 0, 2), (0, 2, , True, False, False)"
    ]
  },
  "asindices": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:504": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((2, 2, 0, 0), (0, 2, 0, 0), (2, 2, 0, 2), (0, 0, )"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((2, 2, 2, 0), (0, 2, 0, 0), (0, 0, 0, 2), (0, 2, )"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((2, 2, 0), (2, 0, 2), (0, 2, 0)))"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((0, 2, 2), (0, 2, 2), (2, 0, 0)))"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((2, 2, 0, 2), (0, 2, 0, 0), (0, 0, 2, 0), (2, 0, )"
          }
        ],
        "code_context": "x1 = objects(I, T, F, F)"
      }
    },
    "type_signatures": [
      "asindices(tuple)"
    ],
    "value_signatures": [
      "asindices(((2, 2, 0), (2, 0, 2), (0, 2, 0)))",
      "asindices(((2, 2, 2, 0), (0, 2, 0, 0), (0, 0, 0, 2), (0, 2, )",
      "asindices(((2, 2, 0, 0), (0, 2, 0, 0), (2, 2, 0, 2), (0, 0, )",
      "asindices(((0, 2, 2), (0, 2, 2), (2, 0, 0)))",
      "asindices(((2, 2, 0, 2), (0, 2, 0, 0), (0, 0, 2, 0), (2, 0, )"
    ]
  },
  "dneighbors": {
    "calls": 74,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:504": {
        "count": 20,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 3))"
          }
        ],
        "code_context": "x1 = objects(I, T, F, F)"
      }
    },
    "type_signatures": [
      "dneighbors(tuple)"
    ],
    "value_signatures": [
      "dneighbors((1, 1))",
      "dneighbors((2, 3))",
      "dneighbors((1, 3))",
      "dneighbors((3, 0))",
      "dneighbors((0, 2))",
      "dneighbors((4, 1))",
      "dneighbors((1, 0))",
      "dneighbors((3, 2))",
      "dneighbors((3, 1))",
      "dneighbors((0, 0))",
      "dneighbors((2, 1))",
      "dneighbors((3, 3))",
      "dneighbors((0, 1))",
      "dneighbors((2, 2))",
      "dneighbors((4, 2))",
      "dneighbors((0, 3))",
      "dneighbors((4, 0))",
      "dneighbors((1, 2))",
      "dneighbors((4, 3))",
      "dneighbors((2, 0))"
    ]
  },
  "colorfilter": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:505": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset({frozenset({(2, (2, 1)), (2, (2, 0)), (2, 2)"
          },
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset({frozenset({(2, (2, 3))}), frozenset({(0, 2)"
          },
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset(len=7), 2)"
          },
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset({frozenset({(0, (2, 2)), (0, (2, 1))}), , 2)"
          },
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset(len=6), 2)"
          }
        ],
        "code_context": "x2 = colorfilter(x1, TWO)"
      }
    },
    "type_signatures": [
      "colorfilter(frozenset, int)"
    ],
    "value_signatures": [
      "colorfilter(frozenset(len=7), 2)",
      "colorfilter(frozenset({frozenset({(0, (2, 2)), (0, (2, 1))}), , 2)",
      "colorfilter(frozenset(len=6), 2)",
      "colorfilter(frozenset({frozenset({(2, (2, 3))}), frozenset({(0, 2)",
      "colorfilter(frozenset({frozenset({(2, (2, 1)), (2, (2, 0)), (2, 2)"
    ]
  },
  "sizefilter": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:506": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "sizefilter(frozenset, int)",
            "value_signature": "sizefilter(frozenset({frozenset({(2, (2, 1)), (2, (2, 0)), (2, 1)"
          },
          {
            "type_signature": "sizefilter(frozenset, int)",
            "value_signature": "sizefilter(frozenset({frozenset({(2, (3, 1))}), frozenset({(2, 1)"
          },
          {
            "type_signature": "sizefilter(frozenset, int)",
            "value_signature": "sizefilter(frozenset({frozenset({(2, (2, 1))}), frozenset({(2, 1)"
          },
          {
            "type_signature": "sizefilter(frozenset, int)",
            "value_signature": "sizefilter(frozenset({frozenset({(2, (2, 0))}), frozenset({(2, 1)"
          },
          {
            "type_signature": "sizefilter(frozenset, int)",
            "value_signature": "sizefilter(frozenset({frozenset({(2, (4, 2)), (2, (4, 3))}), , 1)"
          }
        ],
        "code_context": "x3 = sizefilter(x2, ONE)"
      }
    },
    "type_signatures": [
      "sizefilter(frozenset, int)"
    ],
    "value_signatures": [
      "sizefilter(frozenset({frozenset({(2, (2, 1))}), frozenset({(2, 1)",
      "sizefilter(frozenset({frozenset({(2, (2, 0))}), frozenset({(2, 1)",
      "sizefilter(frozenset({frozenset({(2, (2, 1)), (2, (2, 0)), (2, 1)",
      "sizefilter(frozenset({frozenset({(2, (3, 1))}), frozenset({(2, 1)",
      "sizefilter(frozenset({frozenset({(2, (4, 2)), (2, (4, 3))}), , 1)"
    ]
  },
  "merge_f": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:507": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(2, (2, 3))})}))"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(2, (3, 1))}), frozenset({(2)"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(2, (2, 1))}), frozenset({(2)"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(2, (2, 0))})}))"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(2, (0, 3))}), frozenset({(2)"
          }
        ],
        "code_context": "x4 = merge_f(x3)"
      }
    },
    "type_signatures": [
      "merge_f(frozenset)"
    ],
    "value_signatures": [
      "merge_f(frozenset({frozenset({(2, (2, 1))}), frozenset({(2)",
      "merge_f(frozenset({frozenset({(2, (3, 1))}), frozenset({(2)",
      "merge_f(frozenset({frozenset({(2, (0, 3))}), frozenset({(2)",
      "merge_f(frozenset({frozenset({(2, (2, 3))})}))",
      "merge_f(frozenset({frozenset({(2, (2, 0))})}))"
    ]
  },
  "fill": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:508": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((2, 2, 0, 0), (0, 2, 0, 0), (2, 2, 0, 2), (0, 0, , 1, frozenset({(2, (2, 3))}))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((2, 2, 2, 0), (0, 2, 0, 0), (0, 0, 0, 2), (0, 2, , 1, frozenset({(2, (2, 3)), (2, (3, 1))}))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((2, 2, 0), (2, 0, 2), (0, 2, 0)), 1, frozenset({(2, (2, 1)), (2, (1, 2))}))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((0, 2, 2), (0, 2, 2), (2, 0, 0)), 1, frozenset({(2, (2, 0))}))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((2, 2, 0, 2), (0, 2, 0, 0), (0, 0, 2, 0), (2, 0, , 1, frozenset({(2, (2, 2)), (2, (3, 0)), (2, (0, 3))}))"
          }
        ],
        "code_context": "O = fill(I, ONE, x4)"
      }
    },
    "type_signatures": [
      "fill(tuple, int, frozenset)"
    ],
    "value_signatures": [
      "fill(((2, 2, 2, 0), (0, 2, 0, 0), (0, 0, 0, 2), (0, 2, , 1, frozenset({(2, (2, 3)), (2, (3, 1))}))",
      "fill(((0, 2, 2), (0, 2, 2), (2, 0, 0)), 1, frozenset({(2, (2, 0))}))",
      "fill(((2, 2, 0, 0), (0, 2, 0, 0), (2, 2, 0, 2), (0, 0, , 1, frozenset({(2, (2, 3))}))",
      "fill(((2, 2, 0), (2, 0, 2), (0, 2, 0)), 1, frozenset({(2, (2, 1)), (2, (1, 2))}))",
      "fill(((2, 2, 0, 2), (0, 2, 0, 0), (0, 0, 2, 0), (2, 0, , 1, frozenset({(2, (2, 2)), (2, (3, 0)), (2, (0, 3))}))"
    ]
  },
  "toindices": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:508": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (2, 3))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (2, 3)), (2, (3, 1))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (2, 1)), (2, (1, 2))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (2, 0))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (2, 2)), (2, (3, 0)), (2, (0, 3))}))"
          }
        ],
        "code_context": "O = fill(I, ONE, x4)"
      }
    },
    "type_signatures": [
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset({(2, (2, 3))}))",
      "toindices(frozenset({(2, (2, 2)), (2, (3, 0)), (2, (0, 3))}))",
      "toindices(frozenset({(2, (2, 3)), (2, (3, 1))}))",
      "toindices(frozenset({(2, (2, 1)), (2, (1, 2))}))",
      "toindices(frozenset({(2, (2, 0))}))"
    ]
  }
}