{
  "compress": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1935": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "compress(tuple)",
            "value_signature": "compress(tuple(len=13))"
          },
          {
            "type_signature": "compress(tuple)",
            "value_signature": "compress(tuple(len=15))"
          }
        ],
        "code_context": "x1 = compress(I)"
      }
    },
    "type_signatures": [
      "compress(tuple)"
    ],
    "value_signatures": [
      "compress(tuple(len=15))",
      "compress(tuple(len=13))"
    ]
  },
  "dmirror_t": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1935": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "dmirror_t(tuple)",
            "value_signature": "dmirror_t(tuple(len=13))"
          },
          {
            "type_signature": "dmirror_t(tuple)",
            "value_signature": "dmirror_t(tuple(len=15))"
          }
        ],
        "code_context": "x1 = compress(I)"
      }
    },
    "type_signatures": [
      "dmirror_t(tuple)"
    ],
    "value_signatures": [
      "dmirror_t(tuple(len=15))",
      "dmirror_t(tuple(len=13))"
    ]
  },
  "astuple": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1936": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(3, 1)"
          }
        ],
        "code_context": "x2 = astuple(THREE, ONE)"
      }
    },
    "type_signatures": [
      "astuple(int, int)"
    ],
    "value_signatures": [
      "astuple(3, 1)"
    ]
  },
  "palette_t": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1937": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(tuple(len=6))"
          },
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(tuple(len=7))"
          }
        ],
        "code_context": "x3 = palette_t(x1)"
      }
    },
    "type_signatures": [
      "palette_t(tuple)"
    ],
    "value_signatures": [
      "palette_t(tuple(len=6))",
      "palette_t(tuple(len=7))"
    ]
  },
  "lbind": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1938": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function colorcount_t at 0x102e22940>, tuple(len=6))"
          },
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function colorcount_t at 0x102e22940>, tuple(len=7))"
          }
        ],
        "code_context": "x4 = lbind(colorcount_t, x1)"
      }
    },
    "type_signatures": [
      "lbind(function, tuple)"
    ],
    "value_signatures": [
      "lbind(<function colorcount_t at 0x102e22940>, tuple(len=6))",
      "lbind(<function colorcount_t at 0x102e22940>, tuple(len=7))"
    ]
  },
  "compose": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1939": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function invert at 0x102e2cca0>, <function lbind.<locals>.<lambda> at 0x103261820>)"
          }
        ],
        "code_context": "x5 = compose(invert, x4)"
      }
    },
    "type_signatures": [
      "compose(function, function)"
    ],
    "value_signatures": [
      "compose(<function invert at 0x102e2cca0>, <function lbind.<locals>.<lambda> at 0x103261820>)"
    ]
  },
  "order": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1940": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "order(frozenset, function)",
            "value_signature": "order(frozenset({8, 1, 2, 3}), <function compose.<locals>.<lambda> at 0x103308040)"
          },
          {
            "type_signature": "order(frozenset, function)",
            "value_signature": "order(frozenset({8, 1, 2, 6}), <function compose.<locals>.<lambda> at 0x1033084c0)"
          },
          {
            "type_signature": "order(frozenset, function)",
            "value_signature": "order(frozenset({8, 1, 2, 4}), <function compose.<locals>.<lambda> at 0x1033084c0)"
          },
          {
            "type_signature": "order(frozenset, function)",
            "value_signature": "order(frozenset({1, 2, 3, 4}), <function compose.<locals>.<lambda> at 0x1033084c0)"
          }
        ],
        "code_context": "x6 = order(x3, x5)"
      }
    },
    "type_signatures": [
      "order(frozenset, function)"
    ],
    "value_signatures": [
      "order(frozenset({8, 1, 2, 3}), <function compose.<locals>.<lambda> at 0x103308040)",
      "order(frozenset({8, 1, 2, 4}), <function compose.<locals>.<lambda> at 0x1033084c0)",
      "order(frozenset({8, 1, 2, 6}), <function compose.<locals>.<lambda> at 0x1033084c0)",
      "order(frozenset({1, 2, 3, 4}), <function compose.<locals>.<lambda> at 0x1033084c0)"
    ]
  },
  "colorcount_t": {
    "calls": 20,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1940": {
        "count": 10,
        "signatures": [
          {
            "type_signature": "colorcount_t(tuple, int)",
            "value_signature": "colorcount_t(tuple(len=6), 8)"
          },
          {
            "type_signature": "colorcount_t(tuple, int)",
            "value_signature": "colorcount_t(tuple(len=6), 1)"
          },
          {
            "type_signature": "colorcount_t(tuple, int)",
            "value_signature": "colorcount_t(tuple(len=6), 2)"
          },
          {
            "type_signature": "colorcount_t(tuple, int)",
            "value_signature": "colorcount_t(tuple(len=6), 3)"
          },
          {
            "type_signature": "colorcount_t(tuple, int)",
            "value_signature": "colorcount_t(tuple(len=6), 6)"
          },
          {
            "type_signature": "colorcount_t(tuple, int)",
            "value_signature": "colorcount_t(tuple(len=6), 4)"
          },
          {
            "type_signature": "colorcount_t(tuple, int)",
            "value_signature": "colorcount_t(tuple(len=7), 8)"
          },
          {
            "type_signature": "colorcount_t(tuple, int)",
            "value_signature": "colorcount_t(tuple(len=7), 1)"
          },
          {
            "type_signature": "colorcount_t(tuple, int)",
            "value_signature": "colorcount_t(tuple(len=7), 2)"
          },
          {
            "type_signature": "colorcount_t(tuple, int)",
            "value_signature": "colorcount_t(tuple(len=7), 4)"
          }
        ],
        "code_context": "x6 = order(x3, x5)"
      }
    },
    "type_signatures": [
      "colorcount_t(tuple, int)"
    ],
    "value_signatures": [
      "colorcount_t(tuple(len=6), 2)",
      "colorcount_t(tuple(len=6), 8)",
      "colorcount_t(tuple(len=7), 1)",
      "colorcount_t(tuple(len=6), 1)",
      "colorcount_t(tuple(len=6), 4)",
      "colorcount_t(tuple(len=6), 3)",
      "colorcount_t(tuple(len=7), 8)",
      "colorcount_t(tuple(len=7), 2)",
      "colorcount_t(tuple(len=6), 6)",
      "colorcount_t(tuple(len=7), 4)"
    ]
  },
  "invert": {
    "calls": 20,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1940": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "invert(int)",
            "value_signature": "invert(4)"
          },
          {
            "type_signature": "invert(int)",
            "value_signature": "invert(2)"
          },
          {
            "type_signature": "invert(int)",
            "value_signature": "invert(6)"
          },
          {
            "type_signature": "invert(int)",
            "value_signature": "invert(24)"
          },
          {
            "type_signature": "invert(int)",
            "value_signature": "invert(44)"
          },
          {
            "type_signature": "invert(int)",
            "value_signature": "invert(8)"
          },
          {
            "type_signature": "invert(int)",
            "value_signature": "invert(32)"
          },
          {
            "type_signature": "invert(int)",
            "value_signature": "invert(36)"
          },
          {
            "type_signature": "invert(int)",
            "value_signature": "invert(10)"
          }
        ],
        "code_context": "x6 = order(x3, x5)"
      }
    },
    "type_signatures": [
      "invert(int)"
    ],
    "value_signatures": [
      "invert(2)",
      "invert(8)",
      "invert(32)",
      "invert(10)",
      "invert(44)",
      "invert(24)",
      "invert(6)",
      "invert(36)",
      "invert(4)"
    ]
  },
  "rbind": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1941": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "rbind(function, tuple)",
            "value_signature": "rbind(<function canvas at 0x102e22430>, (1, 1))"
          }
        ],
        "code_context": "x7 = rbind(canvas, UNITY)"
      }
    },
    "type_signatures": [
      "rbind(function, tuple)"
    ],
    "value_signatures": [
      "rbind(<function canvas at 0x102e22430>, (1, 1))"
    ]
  },
  "apply": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1942": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x1033081f0>, (3, 2, 8, 1))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x1033085e0>, (8, 6, 1, 2))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x103308700>, (1, 8, 2, 4))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x103308820>, (1, 4, 2, 3))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x1033088b0>, (2, 4, 1, 8))"
          }
        ],
        "code_context": "x8 = apply(x7, x6)"
      }
    },
    "type_signatures": [
      "apply(function, tuple)"
    ],
    "value_signatures": [
      "apply(<function rbind.<locals>.<lambda> at 0x103308700>, (1, 8, 2, 4))",
      "apply(<function rbind.<locals>.<lambda> at 0x1033081f0>, (3, 2, 8, 1))",
      "apply(<function rbind.<locals>.<lambda> at 0x1033088b0>, (2, 4, 1, 8))",
      "apply(<function rbind.<locals>.<lambda> at 0x103308820>, (1, 4, 2, 3))",
      "apply(<function rbind.<locals>.<lambda> at 0x1033085e0>, (8, 6, 1, 2))"
    ]
  },
  "canvas": {
    "calls": 20,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1942": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(3, (1, 1))"
          },
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(2, (1, 1))"
          },
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(8, (1, 1))"
          },
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(1, (1, 1))"
          },
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(6, (1, 1))"
          },
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(4, (1, 1))"
          }
        ],
        "code_context": "x8 = apply(x7, x6)"
      }
    },
    "type_signatures": [
      "canvas(int, tuple)"
    ],
    "value_signatures": [
      "canvas(2, (1, 1))",
      "canvas(3, (1, 1))",
      "canvas(8, (1, 1))",
      "canvas(4, (1, 1))",
      "canvas(1, (1, 1))",
      "canvas(6, (1, 1))"
    ]
  },
  "merge_t": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1943": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "merge_t(tuple)",
            "value_signature": "merge_t((((3,),), ((2,),), ((8,),), ((1,),)))"
          },
          {
            "type_signature": "merge_t(tuple)",
            "value_signature": "merge_t((((8,),), ((6,),), ((1,),), ((2,),)))"
          },
          {
            "type_signature": "merge_t(tuple)",
            "value_signature": "merge_t((((1,),), ((8,),), ((2,),), ((4,),)))"
          },
          {
            "type_signature": "merge_t(tuple)",
            "value_signature": "merge_t((((1,),), ((4,),), ((2,),), ((3,),)))"
          },
          {
            "type_signature": "merge_t(tuple)",
            "value_signature": "merge_t((((2,),), ((4,),), ((1,),), ((8,),)))"
          }
        ],
        "code_context": "x9 = merge_t(x8)"
      }
    },
    "type_signatures": [
      "merge_t(tuple)"
    ],
    "value_signatures": [
      "merge_t((((1,),), ((4,),), ((2,),), ((3,),)))",
      "merge_t((((3,),), ((2,),), ((8,),), ((1,),)))",
      "merge_t((((8,),), ((6,),), ((1,),), ((2,),)))",
      "merge_t((((1,),), ((8,),), ((2,),), ((4,),)))",
      "merge_t((((2,),), ((4,),), ((1,),), ((8,),)))"
    ]
  },
  "crop": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1944": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((3,), (2,), (8,), (1,)), (1, 0), (3, 1))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((8,), (6,), (1,), (2,)), (1, 0), (3, 1))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((1,), (8,), (2,), (4,)), (1, 0), (3, 1))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((1,), (4,), (2,), (3,)), (1, 0), (3, 1))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((2,), (4,), (1,), (8,)), (1, 0), (3, 1))"
          }
        ],
        "code_context": "O = crop(x9, DOWN, x2)"
      }
    },
    "type_signatures": [
      "crop(tuple, tuple, tuple)"
    ],
    "value_signatures": [
      "crop(((2,), (4,), (1,), (8,)), (1, 0), (3, 1))",
      "crop(((3,), (2,), (8,), (1,)), (1, 0), (3, 1))",
      "crop(((8,), (6,), (1,), (2,)), (1, 0), (3, 1))",
      "crop(((1,), (4,), (2,), (3,)), (1, 0), (3, 1))",
      "crop(((1,), (8,), (2,), (4,)), (1, 0), (3, 1))"
    ]
  }
}