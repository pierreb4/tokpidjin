{
  "objects": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4387": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , True, False, False)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), True, False, False)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(tuple(len=7), True, False, False)"
          }
        ],
        "code_context": "x1 = objects(I, T, F, F)"
      }
    },
    "type_signatures": [
      "objects(tuple, bool, bool, bool)"
    ],
    "value_signatures": [
      "objects(tuple(len=7), True, False, False)",
      "objects(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , True, False, False)",
      "objects(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), True, False, False)"
    ]
  },
  "asindices": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4387": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, )"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2))"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(tuple(len=7))"
          }
        ],
        "code_context": "x1 = objects(I, T, F, F)"
      }
    },
    "type_signatures": [
      "asindices(tuple)"
    ],
    "value_signatures": [
      "asindices(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2))",
      "asindices(tuple(len=7))",
      "asindices(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, )"
    ]
  },
  "dneighbors": {
    "calls": 175,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4387": {
        "count": 49,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 3))"
          }
        ],
        "code_context": "x1 = objects(I, T, F, F)"
      },
      "solvers.py:4400": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 0))"
          }
        ],
        "code_context": "x14 = neighbors(ORIGIN)"
      },
      "solvers.py:4401": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-1, -1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, -1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-1, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, -1))"
          }
        ],
        "code_context": "x15 = mapply(neighbors, x14)"
      }
    },
    "type_signatures": [
      "dneighbors(tuple)"
    ],
    "value_signatures": [
      "dneighbors((2, 4))",
      "dneighbors((6, 1))",
      "dneighbors((2, 5))",
      "dneighbors((5, 5))",
      "dneighbors((3, 3))",
      "dneighbors((1, 1))",
      "dneighbors((4, 4))",
      "dneighbors((3, 6))",
      "dneighbors((6, 6))",
      "dneighbors((1, 2))",
      "dneighbors((4, 0))",
      "dneighbors((1, -1))",
      "dneighbors((1, 3))",
      "dneighbors((2, 0))",
      "dneighbors((0, 4))",
      "dneighbors((4, 1))",
      "dneighbors((5, 4))",
      "dneighbors((3, 5))",
      "dneighbors((0, 6))",
      "dneighbors((3, 1))",
      "dneighbors((4, 6))",
      "dneighbors((6, 5))",
      "dneighbors((5, 2))",
      "dneighbors((1, 5))",
      "dneighbors((6, 4))",
      "dneighbors((6, 0))",
      "dneighbors((0, 0))",
      "dneighbors((5, 1))",
      "dneighbors((2, 1))",
      "dneighbors((6, 3))",
      "dneighbors((4, 3))",
      "dneighbors((2, 2))",
      "dneighbors((3, 2))",
      "dneighbors((4, 2))",
      "dneighbors((1, 4))",
      "dneighbors((-1, -1))",
      "dneighbors((-1, 0))",
      "dneighbors((0, -1))",
      "dneighbors((2, 6))",
      "dneighbors((0, 3))",
      "dneighbors((4, 5))",
      "dneighbors((-1, 1))",
      "dneighbors((2, 3))",
      "dneighbors((0, 5))",
      "dneighbors((0, 1))",
      "dneighbors((3, 0))",
      "dneighbors((6, 2))",
      "dneighbors((5, 3))",
      "dneighbors((1, 0))",
      "dneighbors((1, 6))",
      "dneighbors((0, 2))",
      "dneighbors((3, 4))",
      "dneighbors((5, 6))",
      "dneighbors((5, 0))"
    ]
  },
  "f_ofcolor": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4388": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , 0)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), 0)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=7), 0)"
          }
        ],
        "code_context": "x2 = f_ofcolor(I, ZERO)"
      }
    },
    "type_signatures": [
      "f_ofcolor(tuple, int)"
    ],
    "value_signatures": [
      "f_ofcolor(tuple(len=7), 0)",
      "f_ofcolor(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , 0)",
      "f_ofcolor(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), 0)"
    ]
  },
  "lbind": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4389": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "lbind(function, int)",
            "value_signature": "lbind(<function contained at 0x1012ea4c0>, 0)"
          }
        ],
        "code_context": "x3 = lbind(contained, ZERO)"
      },
      "solvers.py:4405": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x101301940>, frozenset(len=15))"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x101301940>, frozenset(len=21))"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x101301940>, frozenset(len=45))"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x101301940>, frozenset(len=40))"
          }
        ],
        "code_context": "x19 = lbind(shift, x5)"
      }
    },
    "type_signatures": [
      "lbind(function, int)",
      "lbind(function, frozenset)"
    ],
    "value_signatures": [
      "lbind(<function shift at 0x101301940>, frozenset(len=40))",
      "lbind(<function shift at 0x101301940>, frozenset(len=45))",
      "lbind(<function shift at 0x101301940>, frozenset(len=15))",
      "lbind(<function contained at 0x1012ea4c0>, 0)",
      "lbind(<function shift at 0x101301940>, frozenset(len=21))"
    ]
  },
  "chain": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4390": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function flip at 0x1012ed310>, <function lbind.<locals>.<lambda> at 0x10141df70>, <function palette_t at 0x1012fc670>)"
          }
        ],
        "code_context": "x4 = chain(flip, x3, palette_t)"
      }
    },
    "type_signatures": [
      "chain(function, function, function)"
    ],
    "value_signatures": [
      "chain(<function flip at 0x1012ed310>, <function lbind.<locals>.<lambda> at 0x10141df70>, <function palette_t at 0x1012fc670>)"
    ]
  },
  "mfilter_f": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4391": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset(len=16), <function chain.<locals>.<lambda> at 0x101435040>)"
          },
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset(len=10), <function chain.<locals>.<lambda> at 0x101435160>)"
          },
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset(len=10), <function chain.<locals>.<lambda> at 0x101435040>)"
          },
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset(len=19), <function chain.<locals>.<lambda> at 0x101435160>)"
          }
        ],
        "code_context": "x5 = mfilter_f(x1, x4)"
      }
    },
    "type_signatures": [
      "mfilter_f(frozenset, function)"
    ],
    "value_signatures": [
      "mfilter_f(frozenset(len=16), <function chain.<locals>.<lambda> at 0x101435040>)",
      "mfilter_f(frozenset(len=10), <function chain.<locals>.<lambda> at 0x101435160>)",
      "mfilter_f(frozenset(len=10), <function chain.<locals>.<lambda> at 0x101435040>)",
      "mfilter_f(frozenset(len=19), <function chain.<locals>.<lambda> at 0x101435160>)"
    ]
  },
  "sfilter": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4391": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(len=16), <function chain.<locals>.<lambda> at 0x101435040>)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(len=10), <function chain.<locals>.<lambda> at 0x101435160>)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(len=10), <function chain.<locals>.<lambda> at 0x101435040>)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(len=19), <function chain.<locals>.<lambda> at 0x101435160>)"
          }
        ],
        "code_context": "x5 = mfilter_f(x1, x4)"
      }
    },
    "type_signatures": [
      "sfilter(frozenset, function)"
    ],
    "value_signatures": [
      "sfilter(frozenset(len=10), <function chain.<locals>.<lambda> at 0x101435160>)",
      "sfilter(frozenset(len=19), <function chain.<locals>.<lambda> at 0x101435160>)",
      "sfilter(frozenset(len=16), <function chain.<locals>.<lambda> at 0x101435040>)",
      "sfilter(frozenset(len=10), <function chain.<locals>.<lambda> at 0x101435040>)"
    ]
  },
  "palette_t": {
    "calls": 66,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4391": {
        "count": 53,
        "signatures": [
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(6, (3, 2))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(8, (1, 3))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(6, (3, 0))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(8, (2, 0))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(6, (1, 2))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(8, (2, 2))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(8, (0, 0))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(6, (2, 3))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(6, (2, 1))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(0, (0, 2))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(8, (1, 1))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(6, (0, 1))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(8, (3, 3))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(8, (3, 1))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(6, (1, 0))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(6, (0, 3))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (0, 0))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (0, 4))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(0, (4, 0)), (0, (3, 0)), (0, (3, 1)), )"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (2, 2))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (4, 2))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (2, 4))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (4, 4))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset(len=13))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (2, 0))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (0, 2))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (3, 0)), (2, (3, 1)), (2, (4, 1)), )"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (0, 3)), (2, (0, 4)), (2, (1, 4)), )"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (1, 6)), (2, (0, 6))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(0, (5, 6)), (0, (5, 5)), (0, (6, 6)), )"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (1, 0)), (2, (0, 0)), (2, (0, 1)), )"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (6, 3)), (2, (6, 4))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (3, 6)), (2, (4, 6))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset(len=21))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (4, 3)), (2, (4, 4)), (2, (3, 4)), )"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(2, (6, 0)), (2, (6, 1))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (3, 1))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (5, 5))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (1, 0))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset(len=8))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (4, 6))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(8, (6, 6)), (8, (6, 5)), (8, (5, 6))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (6, 4))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (1, 3))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset(len=9))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (0, 1))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (6, 1))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (5, 2))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (2, 2))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (4, 3))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (3, 4))}))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset(len=7))"
          },
          {
            "type_signature": "palette_t(frozenset)",
            "value_signature": "palette_t(frozenset({(1, (4, 0))}))"
          }
        ],
        "code_context": "x5 = mfilter_f(x1, x4)"
      },
      "solvers.py:4394": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(((8, 6, 0, 6), (6, 8, 6, 8)))"
          },
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(((8, 6, 8, 6), (6, 8, 6, 8)))"
          },
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1)))"
          },
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(((2, 2, 5, 2, 2, 5, 2), (2, 2, 5, 2, 2, 5, 2), (5,)"
          },
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(((8, 1, 8, 8, 0, 0, 0), (1, 8, 8, 1, 0, 0, 0), (8,)"
          },
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(((1, 8, 8, 1, 8, 8, 1), (8, 8, 1, 8, 8, 1, 8), (8,)"
          }
        ],
        "code_context": "x8 = extract(x6, x4)"
      },
      "solvers.py:4395": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(((8, 6), (6, 8), (8, 6), (6, 8)))"
          },
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(((2, 1), (1, 1), (2, 1), (0, 0), (0, 0)))"
          },
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(((1, 2), (1, 1), (1, 2), (1, 1), (1, 2)))"
          },
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(tuple(len=7))"
          }
        ],
        "code_context": "x9 = extract(x7, x4)"
      }
    },
    "type_signatures": [
      "palette_t(tuple)",
      "palette_t(frozenset)"
    ],
    "value_signatures": [
      "palette_t(((2, 2, 5, 2, 2, 5, 2), (2, 2, 5, 2, 2, 5, 2), (5,)",
      "palette_t(((1, 8, 8, 1, 8, 8, 1), (8, 8, 1, 8, 8, 1, 8), (8,)",
      "palette_t(frozenset({(2, (0, 4))}))",
      "palette_t(frozenset({(8, (1, 3))}))",
      "palette_t(frozenset({(6, (0, 3))}))",
      "palette_t(frozenset({(1, (4, 0))}))",
      "palette_t(frozenset({(1, (5, 2))}))",
      "palette_t(((2, 1), (1, 1), (2, 1), (0, 0), (0, 0)))",
      "palette_t(frozenset({(6, (1, 0))}))",
      "palette_t(frozenset({(6, (0, 1))}))",
      "palette_t(frozenset(len=21))",
      "palette_t(frozenset({(1, (1, 0))}))",
      "palette_t(((8, 6, 8, 6), (6, 8, 6, 8)))",
      "palette_t(frozenset({(2, (0, 0))}))",
      "palette_t(frozenset({(1, (1, 3))}))",
      "palette_t(frozenset(len=13))",
      "palette_t(frozenset({(2, (2, 4))}))",
      "palette_t(frozenset({(1, (5, 5))}))",
      "palette_t(frozenset({(6, (2, 3))}))",
      "palette_t(frozenset({(1, (0, 1))}))",
      "palette_t(((8, 6), (6, 8), (8, 6), (6, 8)))",
      "palette_t(frozenset({(8, (0, 0))}))",
      "palette_t(frozenset({(2, (2, 0))}))",
      "palette_t(frozenset({(6, (3, 0))}))",
      "palette_t(frozenset({(1, (4, 6))}))",
      "palette_t(((1, 2), (1, 1), (1, 2), (1, 1), (1, 2)))",
      "palette_t(frozenset({(1, (2, 2))}))",
      "palette_t(frozenset({(2, (3, 0)), (2, (3, 1)), (2, (4, 1)), )",
      "palette_t(((8, 6, 0, 6), (6, 8, 6, 8)))",
      "palette_t(((8, 1, 8, 8, 0, 0, 0), (1, 8, 8, 1, 0, 0, 0), (8,)",
      "palette_t(frozenset({(2, (1, 6)), (2, (0, 6))}))",
      "palette_t(frozenset({(6, (1, 2))}))",
      "palette_t(frozenset({(6, (2, 1))}))",
      "palette_t(frozenset({(1, (6, 1))}))",
      "palette_t(frozenset({(2, (3, 6)), (2, (4, 6))}))",
      "palette_t(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1)))",
      "palette_t(frozenset({(8, (2, 2))}))",
      "palette_t(frozenset({(1, (6, 4))}))",
      "palette_t(frozenset({(8, (1, 1))}))",
      "palette_t(frozenset({(8, (3, 1))}))",
      "palette_t(frozenset({(1, (3, 4))}))",
      "palette_t(frozenset({(0, (4, 0)), (0, (3, 0)), (0, (3, 1)), )",
      "palette_t(frozenset({(2, (0, 2))}))",
      "palette_t(frozenset({(1, (4, 3))}))",
      "palette_t(frozenset({(2, (4, 3)), (2, (4, 4)), (2, (3, 4)), )",
      "palette_t(tuple(len=7))",
      "palette_t(frozenset({(2, (1, 0)), (2, (0, 0)), (2, (0, 1)), )",
      "palette_t(frozenset({(2, (2, 2))}))",
      "palette_t(frozenset({(2, (4, 4))}))",
      "palette_t(frozenset({(6, (3, 2))}))",
      "palette_t(frozenset({(0, (5, 6)), (0, (5, 5)), (0, (6, 6)), )",
      "palette_t(frozenset({(0, (0, 2))}))",
      "palette_t(frozenset({(8, (2, 0))}))",
      "palette_t(frozenset(len=8))",
      "palette_t(frozenset(len=9))",
      "palette_t(frozenset(len=7))",
      "palette_t(frozenset({(8, (6, 6)), (8, (6, 5)), (8, (5, 6))}))",
      "palette_t(frozenset({(2, (6, 3)), (2, (6, 4))}))",
      "palette_t(frozenset({(2, (6, 0)), (2, (6, 1))}))",
      "palette_t(frozenset({(8, (3, 3))}))",
      "palette_t(frozenset({(2, (4, 2))}))",
      "palette_t(frozenset({(2, (0, 3)), (2, (0, 4)), (2, (1, 4)), )",
      "palette_t(frozenset({(1, (3, 1))}))"
    ]
  },
  "contained": {
    "calls": 66,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4391": {
        "count": 53,
        "signatures": [
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(3, 2), 6}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, (1, 3)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({6, (3, 0)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, (2, 0)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(1, 2), 6}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, (2, 2)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, (0, 0)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(2, 3), 6}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(2, 1), 6}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({0, (0, 2)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, (1, 1)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(0, 1), 6}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, (3, 3)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, (3, 1)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(1, 0), 6}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(0, 3), 6}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, (0, 0)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, (0, 4)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({0, (4, 0), (3, 1), (3, 0), (4, 1)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, (2, 2)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, (4, 2)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, (2, 4)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(4, 4), 2}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset(len=14))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, (2, 0)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, (0, 2)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, (4, 0), (3, 1), (3, 0), (4, 1)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, (0, 4), (0, 3), (1, 4), (1, 3)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(1, 6), 2, (0, 6)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({0, (5, 5), (6, 5), (5, 6), (6, 6)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(0, 1), 2, (0, 0), (1, 1), (1, 0)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, (6, 3), (6, 4)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, (4, 6), (3, 6)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset(len=22))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(4, 4), 2, (3, 4), (4, 3), (3, 3)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(6, 1), 2, (6, 0)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(3, 1), 1}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, (5, 5)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(1, 0), 1}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset(len=9))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, (4, 6)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, (6, 6), (5, 6), (6, 5)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, (6, 4)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, (1, 3)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset(len=10))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({(0, 1), 1}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, (6, 1)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, (5, 2)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, (2, 2)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, (4, 3)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, (3, 4)}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset(len=8))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, (4, 0)}))"
          }
        ],
        "code_context": "x5 = mfilter_f(x1, x4)"
      },
      "solvers.py:4394": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, 0, 6}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, 6}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, 2}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, 5}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, 1, 0}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, 1}))"
          }
        ],
        "code_context": "x8 = extract(x6, x4)"
      },
      "solvers.py:4395": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, 6}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({0, 1, 2}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({1, 2}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({2, 5}))"
          },
          {
            "type_signature": "contained(int, frozenset)",
            "value_signature": "contained(0, frozenset({8, 1}))"
          }
        ],
        "code_context": "x9 = extract(x7, x4)"
      }
    },
    "type_signatures": [
      "contained(int, frozenset)"
    ],
    "value_signatures": [
      "contained(0, frozenset({(3, 2), 6}))",
      "contained(0, frozenset({6, (3, 0)}))",
      "contained(0, frozenset(len=22))",
      "contained(0, frozenset({2, (0, 4), (0, 3), (1, 4), (1, 3)}))",
      "contained(0, frozenset({(6, 1), 2, (6, 0)}))",
      "contained(0, frozenset({8, 6}))",
      "contained(0, frozenset(len=9))",
      "contained(0, frozenset({(4, 4), 2, (3, 4), (4, 3), (3, 3)}))",
      "contained(0, frozenset({(1, 0), 6}))",
      "contained(0, frozenset({2, (2, 2)}))",
      "contained(0, frozenset({2, (0, 0)}))",
      "contained(0, frozenset({2, (4, 0), (3, 1), (3, 0), (4, 1)}))",
      "contained(0, frozenset({(1, 2), 6}))",
      "contained(0, frozenset({8, (3, 3)}))",
      "contained(0, frozenset({(3, 1), 1}))",
      "contained(0, frozenset(len=8))",
      "contained(0, frozenset({1, 2}))",
      "contained(0, frozenset({1, (4, 6)}))",
      "contained(0, frozenset({2, (2, 0)}))",
      "contained(0, frozenset({2, (0, 2)}))",
      "contained(0, frozenset({1, (4, 0)}))",
      "contained(0, frozenset(len=10))",
      "contained(0, frozenset({(1, 6), 2, (0, 6)}))",
      "contained(0, frozenset({1, (2, 2)}))",
      "contained(0, frozenset({1, (1, 3)}))",
      "contained(0, frozenset({(4, 4), 2}))",
      "contained(0, frozenset({(1, 0), 1}))",
      "contained(0, frozenset({2, 5}))",
      "contained(0, frozenset({8, (2, 2)}))",
      "contained(0, frozenset({8, (0, 0)}))",
      "contained(0, frozenset({(2, 1), 6}))",
      "contained(0, frozenset({1, (5, 5)}))",
      "contained(0, frozenset({2, (4, 6), (3, 6)}))",
      "contained(0, frozenset({(2, 3), 6}))",
      "contained(0, frozenset({8, (1, 3)}))",
      "contained(0, frozenset({1, (6, 4)}))",
      "contained(0, frozenset({(0, 1), 2, (0, 0), (1, 1), (1, 0)}))",
      "contained(0, frozenset({8, (3, 1)}))",
      "contained(0, frozenset({0, (4, 0), (3, 1), (3, 0), (4, 1)}))",
      "contained(0, frozenset({1, (4, 3)}))",
      "contained(0, frozenset({8, (1, 1)}))",
      "contained(0, frozenset({(0, 1), 6}))",
      "contained(0, frozenset({1, (6, 1)}))",
      "contained(0, frozenset({2, (0, 4)}))",
      "contained(0, frozenset({8, (2, 0)}))",
      "contained(0, frozenset({0, 1, 2}))",
      "contained(0, frozenset({0, (5, 5), (6, 5), (5, 6), (6, 6)}))",
      "contained(0, frozenset({8, 0, 6}))",
      "contained(0, frozenset({8, 1}))",
      "contained(0, frozenset({(0, 1), 1}))",
      "contained(0, frozenset({0, (0, 2)}))",
      "contained(0, frozenset({1, (3, 4)}))",
      "contained(0, frozenset({2, (2, 4)}))",
      "contained(0, frozenset({8, 1, 0}))",
      "contained(0, frozenset({2, (4, 2)}))",
      "contained(0, frozenset({8, (6, 6), (5, 6), (6, 5)}))",
      "contained(0, frozenset(len=14))",
      "contained(0, frozenset({1, (5, 2)}))",
      "contained(0, frozenset({(0, 3), 6}))",
      "contained(0, frozenset({2, (6, 3), (6, 4)}))"
    ]
  },
  "flip": {
    "calls": 66,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4391": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "flip(bool)",
            "value_signature": "flip(False)"
          },
          {
            "type_signature": "flip(bool)",
            "value_signature": "flip(True)"
          }
        ],
        "code_context": "x5 = mfilter_f(x1, x4)"
      },
      "solvers.py:4394": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "flip(bool)",
            "value_signature": "flip(True)"
          },
          {
            "type_signature": "flip(bool)",
            "value_signature": "flip(False)"
          }
        ],
        "code_context": "x8 = extract(x6, x4)"
      },
      "solvers.py:4395": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "flip(bool)",
            "value_signature": "flip(False)"
          },
          {
            "type_signature": "flip(bool)",
            "value_signature": "flip(True)"
          }
        ],
        "code_context": "x9 = extract(x7, x4)"
      }
    },
    "type_signatures": [
      "flip(bool)"
    ],
    "value_signatures": [
      "flip(True)",
      "flip(False)"
    ]
  },
  "merge_f": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4391": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset(len=15))"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset(len=9))"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset(len=18))"
          }
        ],
        "code_context": "x5 = mfilter_f(x1, x4)"
      }
    },
    "type_signatures": [
      "merge_f(frozenset)"
    ],
    "value_signatures": [
      "merge_f(frozenset(len=15))",
      "merge_f(frozenset(len=18))",
      "merge_f(frozenset(len=9))"
    ]
  },
  "vsplit": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4392": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "vsplit(tuple, int)",
            "value_signature": "vsplit(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , 2)"
          },
          {
            "type_signature": "vsplit(tuple, int)",
            "value_signature": "vsplit(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), 2)"
          },
          {
            "type_signature": "vsplit(tuple, int)",
            "value_signature": "vsplit(tuple(len=7), 2)"
          }
        ],
        "code_context": "x6 = vsplit(I, TWO)"
      }
    },
    "type_signatures": [
      "vsplit(tuple, int)"
    ],
    "value_signatures": [
      "vsplit(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , 2)",
      "vsplit(tuple(len=7), 2)",
      "vsplit(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), 2)"
    ]
  },
  "crop": {
    "calls": 20,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4392": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , (0, 0), (2, 4))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , (2, 0), (2, 4))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), (0, 0), (2, 5))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), (3, 0), (2, 5))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=7), (0, 0), (3, 7))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=7), (4, 0), (3, 7))"
          }
        ],
        "code_context": "x6 = vsplit(I, TWO)"
      },
      "solvers.py:4393": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , (0, 0), (4, 2))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , (0, 2), (4, 2))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), (0, 0), (5, 2))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), (0, 3), (5, 2))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=7), (0, 0), (7, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=7), (0, 4), (7, 3))"
          }
        ],
        "code_context": "x7 = hsplit(I, TWO)"
      },
      "solvers.py:4408": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((8, 6, 8, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , (0, 2), (1, 1))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), (3, 0), (2, 2))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=7), (5, 5), (2, 2))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=7), (0, 4), (3, 3))"
          }
        ],
        "code_context": "O = subgrid(x2, x21)"
      }
    },
    "type_signatures": [
      "crop(tuple, tuple, tuple)"
    ],
    "value_signatures": [
      "crop(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), (0, 3), (5, 2))",
      "crop(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), (3, 0), (2, 5))",
      "crop(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), (0, 0), (5, 2))",
      "crop(tuple(len=7), (5, 5), (2, 2))",
      "crop(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , (0, 0), (4, 2))",
      "crop(((8, 6, 8, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , (0, 2), (1, 1))",
      "crop(tuple(len=7), (0, 0), (3, 7))",
      "crop(tuple(len=7), (4, 0), (3, 7))",
      "crop(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), (3, 0), (2, 2))",
      "crop(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), (0, 0), (2, 5))",
      "crop(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , (2, 0), (2, 4))",
      "crop(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , (0, 0), (2, 4))",
      "crop(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , (0, 2), (4, 2))",
      "crop(tuple(len=7), (0, 4), (3, 3))",
      "crop(tuple(len=7), (0, 0), (7, 3))",
      "crop(tuple(len=7), (0, 4), (7, 3))"
    ]
  },
  "hsplit": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4393": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "hsplit(tuple, int)",
            "value_signature": "hsplit(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , 2)"
          },
          {
            "type_signature": "hsplit(tuple, int)",
            "value_signature": "hsplit(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), 2)"
          },
          {
            "type_signature": "hsplit(tuple, int)",
            "value_signature": "hsplit(tuple(len=7), 2)"
          }
        ],
        "code_context": "x7 = hsplit(I, TWO)"
      }
    },
    "type_signatures": [
      "hsplit(tuple, int)"
    ],
    "value_signatures": [
      "hsplit(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), 2)",
      "hsplit(tuple(len=7), 2)",
      "hsplit(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , 2)"
    ]
  },
  "extract": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4394": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "extract(tuple, function)",
            "value_signature": "extract((((8, 6, 0, 6), (6, 8, 6, 8)), ((8, 6, 8, 6), (6, , <function chain.<locals>.<lambda> at 0x101435040>)"
          },
          {
            "type_signature": "extract(tuple, function)",
            "value_signature": "extract((((2, 1, 2, 1, 2), (1, 1, 1, 1, 1)), ((0, 0, 1, 1,, <function chain.<locals>.<lambda> at 0x101435160>)"
          },
          {
            "type_signature": "extract(tuple, function)",
            "value_signature": "extract((((2, 2, 5, 2, 2, 5, 2), (2, 2, 5, 2, 2, 5, 2), (5, <function chain.<locals>.<lambda> at 0x101435040>)"
          },
          {
            "type_signature": "extract(tuple, function)",
            "value_signature": "extract((((8, 1, 8, 8, 0, 0, 0), (1, 8, 8, 1, 0, 0, 0), (8, <function chain.<locals>.<lambda> at 0x101435160>)"
          }
        ],
        "code_context": "x8 = extract(x6, x4)"
      },
      "solvers.py:4395": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "extract(tuple, function)",
            "value_signature": "extract((((8, 6), (6, 8), (8, 6), (6, 8)), ((0, 6), (6, 8), <function chain.<locals>.<lambda> at 0x101435040>)"
          },
          {
            "type_signature": "extract(tuple, function)",
            "value_signature": "extract((((2, 1), (1, 1), (2, 1), (0, 0), (0, 0)), ((1, 2), <function chain.<locals>.<lambda> at 0x101435160>)"
          },
          {
            "type_signature": "extract(tuple, function)",
            "value_signature": "extract((((2, 2, 5), (2, 2, 5), (5, 5, 5), (2, 2, 5), (2, , <function chain.<locals>.<lambda> at 0x101435040>)"
          },
          {
            "type_signature": "extract(tuple, function)",
            "value_signature": "extract((((8, 1, 8), (1, 8, 8), (8, 8, 1), (8, 1, 8), (1, , <function chain.<locals>.<lambda> at 0x101435160>)"
          }
        ],
        "code_context": "x9 = extract(x7, x4)"
      }
    },
    "type_signatures": [
      "extract(tuple, function)"
    ],
    "value_signatures": [
      "extract((((2, 2, 5), (2, 2, 5), (5, 5, 5), (2, 2, 5), (2, , <function chain.<locals>.<lambda> at 0x101435040>)",
      "extract((((8, 1, 8, 8, 0, 0, 0), (1, 8, 8, 1, 0, 0, 0), (8, <function chain.<locals>.<lambda> at 0x101435160>)",
      "extract((((2, 1, 2, 1, 2), (1, 1, 1, 1, 1)), ((0, 0, 1, 1,, <function chain.<locals>.<lambda> at 0x101435160>)",
      "extract((((2, 1), (1, 1), (2, 1), (0, 0), (0, 0)), ((1, 2), <function chain.<locals>.<lambda> at 0x101435160>)",
      "extract((((8, 6), (6, 8), (8, 6), (6, 8)), ((0, 6), (6, 8), <function chain.<locals>.<lambda> at 0x101435040>)",
      "extract((((8, 6, 0, 6), (6, 8, 6, 8)), ((8, 6, 8, 6), (6, , <function chain.<locals>.<lambda> at 0x101435040>)",
      "extract((((8, 1, 8), (1, 8, 8), (8, 8, 1), (8, 1, 8), (1, , <function chain.<locals>.<lambda> at 0x101435160>)",
      "extract((((2, 2, 5, 2, 2, 5, 2), (2, 2, 5, 2, 2, 5, 2), (5, <function chain.<locals>.<lambda> at 0x101435040>)"
    ]
  },
  "asobject": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4396": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((8, 6, 8, 6), (6, 8, 6, 8)))"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1)))"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((2, 2, 5, 2, 2, 5, 2), (2, 2, 5, 2, 2, 5, 2), (5,)"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((1, 8, 8, 1, 8, 8, 1), (8, 8, 1, 8, 8, 1, 8), (8,)"
          }
        ],
        "code_context": "x10 = asobject(x8)"
      },
      "solvers.py:4397": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((8, 6), (6, 8), (8, 6), (6, 8)))"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((1, 2), (1, 1), (1, 2), (1, 1), (1, 2)))"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(tuple(len=7))"
          }
        ],
        "code_context": "x11 = asobject(x9)"
      }
    },
    "type_signatures": [
      "asobject(tuple)"
    ],
    "value_signatures": [
      "asobject(((8, 6), (6, 8), (8, 6), (6, 8)))",
      "asobject(((2, 2, 5, 2, 2, 5, 2), (2, 2, 5, 2, 2, 5, 2), (5,)",
      "asobject(tuple(len=7))",
      "asobject(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1)))",
      "asobject(((8, 6, 8, 6), (6, 8, 6, 8)))",
      "asobject(((1, 8, 8, 1, 8, 8, 1), (8, 8, 1, 8, 8, 1, 8), (8,)",
      "asobject(((1, 2), (1, 1), (1, 2), (1, 1), (1, 2)))"
    ]
  },
  "vperiod": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4398": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "vperiod(frozenset)",
            "value_signature": "vperiod(frozenset(len=8))"
          },
          {
            "type_signature": "vperiod(frozenset)",
            "value_signature": "vperiod(frozenset(len=10))"
          },
          {
            "type_signature": "vperiod(frozenset)",
            "value_signature": "vperiod(frozenset(len=21))"
          }
        ],
        "code_context": "x12 = vperiod(x10)"
      }
    },
    "type_signatures": [
      "vperiod(frozenset)"
    ],
    "value_signatures": [
      "vperiod(frozenset(len=10))",
      "vperiod(frozenset(len=8))",
      "vperiod(frozenset(len=21))"
    ]
  },
  "normalize": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4398": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=8))"
          },
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=10))"
          },
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=21))"
          }
        ],
        "code_context": "x12 = vperiod(x10)"
      },
      "solvers.py:4399": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=8))"
          },
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=10))"
          },
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=21))"
          }
        ],
        "code_context": "x13 = hperiod(x11)"
      }
    },
    "type_signatures": [
      "normalize(frozenset)"
    ],
    "value_signatures": [
      "normalize(frozenset(len=21))",
      "normalize(frozenset(len=10))",
      "normalize(frozenset(len=8))"
    ]
  },
  "uppermost": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4398": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=8))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=10))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=21))"
          }
        ],
        "code_context": "x12 = vperiod(x10)"
      },
      "solvers.py:4399": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=8))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=10))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=21))"
          }
        ],
        "code_context": "x13 = hperiod(x11)"
      },
      "solvers.py:4408": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(0, 2)}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=9))"
          }
        ],
        "code_context": "O = subgrid(x2, x21)"
      }
    },
    "type_signatures": [
      "uppermost(frozenset)"
    ],
    "value_signatures": [
      "uppermost(frozenset({(0, 2)}))",
      "uppermost(frozenset(len=8))",
      "uppermost(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))",
      "uppermost(frozenset(len=10))",
      "uppermost(frozenset(len=9))",
      "uppermost(frozenset(len=21))",
      "uppermost(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
    ]
  },
  "toindices": {
    "calls": 52,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4398": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=8))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=10))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=21))"
          }
        ],
        "code_context": "x12 = vperiod(x10)"
      },
      "solvers.py:4399": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=8))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=10))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=21))"
          }
        ],
        "code_context": "x13 = hperiod(x11)"
      },
      "solvers.py:4408": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(0, 2)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=9))"
          }
        ],
        "code_context": "O = subgrid(x2, x21)"
      }
    },
    "type_signatures": [
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset(len=21))",
      "toindices(frozenset({(0, 2)}))",
      "toindices(frozenset(len=9))",
      "toindices(frozenset(len=8))",
      "toindices(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))",
      "toindices(frozenset(len=10))",
      "toindices(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
    ]
  },
  "leftmost": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4398": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=8))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=10))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=21))"
          }
        ],
        "code_context": "x12 = vperiod(x10)"
      },
      "solvers.py:4399": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=8))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=10))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=21))"
          }
        ],
        "code_context": "x13 = hperiod(x11)"
      },
      "solvers.py:4408": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(0, 2)}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=9))"
          }
        ],
        "code_context": "O = subgrid(x2, x21)"
      }
    },
    "type_signatures": [
      "leftmost(frozenset)"
    ],
    "value_signatures": [
      "leftmost(frozenset(len=8))",
      "leftmost(frozenset(len=10))",
      "leftmost(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))",
      "leftmost(frozenset(len=9))",
      "leftmost(frozenset(len=21))",
      "leftmost(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))",
      "leftmost(frozenset({(0, 2)}))"
    ]
  },
  "shift": {
    "calls": 120,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4398": {
        "count": 7,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=8), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=8), (-1, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=10), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=10), (-1, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-1, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-2, 0))"
          }
        ],
        "code_context": "x12 = vperiod(x10)"
      },
      "solvers.py:4399": {
        "count": 7,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=8), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=8), (0, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=10), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=10), (0, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (0, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (0, -2))"
          }
        ],
        "code_context": "x13 = hperiod(x11)"
      },
      "solvers.py:4406": {
        "count": 100,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (4, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (0, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (0, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (2, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (-4, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (-4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (-2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (-2, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (4, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (0, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (2, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (0, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (-4, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (-2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (4, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (-4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (-4, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (-2, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=15), (-2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (4, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (0, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (0, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (2, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-4, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-2, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (4, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (0, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (2, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (0, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-4, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (4, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-4, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-2, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=21), (-2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (-3, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (-3, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (-3, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (-3, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (-3, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (3, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (3, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (3, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (-6, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (-6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (-6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (-6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (3, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (3, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (-6, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (0, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (0, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (0, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (0, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (6, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=45), (6, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (-3, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (-3, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (-3, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (-3, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (-3, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (3, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (3, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (3, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (-6, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (-6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (-6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (-6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (3, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (3, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (-6, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (0, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (0, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (0, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (0, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (6, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=40), (6, 3))"
          }
        ],
        "code_context": "x20 = mapply(x19, x18)"
      }
    },
    "type_signatures": [
      "shift(frozenset, tuple)"
    ],
    "value_signatures": [
      "shift(frozenset(len=40), (6, 6))",
      "shift(frozenset(len=40), (-6, 6))",
      "shift(frozenset(len=45), (-6, 0))",
      "shift(frozenset(len=21), (2, -4))",
      "shift(frozenset(len=21), (-4, -2))",
      "shift(frozenset(len=45), (6, 6))",
      "shift(frozenset(len=45), (0, 6))",
      "shift(frozenset(len=45), (-6, -3))",
      "shift(frozenset(len=10), (0, 0))",
      "shift(frozenset(len=45), (3, -3))",
      "shift(frozenset(len=21), (-2, 4))",
      "shift(frozenset(len=15), (2, -4))",
      "shift(frozenset(len=21), (0, -2))",
      "shift(frozenset(len=21), (-4, 0))",
      "shift(frozenset(len=45), (-6, 6))",
      "shift(frozenset(len=21), (-2, -2))",
      "shift(frozenset(len=45), (-3, -6))",
      "shift(frozenset(len=40), (-3, 6))",
      "shift(frozenset(len=8), (0, -1))",
      "shift(frozenset(len=15), (-4, -2))",
      "shift(frozenset(len=45), (3, -6))",
      "shift(frozenset(len=45), (6, 0))",
      "shift(frozenset(len=15), (-4, 4))",
      "shift(frozenset(len=45), (3, 3))",
      "shift(frozenset(len=40), (0, -3))",
      "shift(frozenset(len=40), (0, 3))",
      "shift(frozenset(len=21), (-4, 2))",
      "shift(frozenset(len=40), (-3, 3))",
      "shift(frozenset(len=15), (0, -4))",
      "shift(frozenset(len=15), (-4, 0))",
      "shift(frozenset(len=15), (-2, -4))",
      "shift(frozenset(len=45), (-3, 3))",
      "shift(frozenset(len=45), (3, 6))",
      "shift(frozenset(len=21), (0, -1))",
      "shift(frozenset(len=21), (-4, -4))",
      "shift(frozenset(len=10), (-1, 0))",
      "shift(frozenset(len=45), (6, -3))",
      "shift(frozenset(len=21), (-1, 0))",
      "shift(frozenset(len=21), (4, 0))",
      "shift(frozenset(len=40), (-3, 0))",
      "shift(frozenset(len=45), (-3, -3))",
      "shift(frozenset(len=15), (-2, 0))",
      "shift(frozenset(len=15), (2, 4))",
      "shift(frozenset(len=40), (6, -3))",
      "shift(frozenset(len=45), (3, 0))",
      "shift(frozenset(len=15), (4, 4))",
      "shift(frozenset(len=21), (0, 2))",
      "shift(frozenset(len=15), (-2, -2))",
      "shift(frozenset(len=15), (2, -2))",
      "shift(frozenset(len=21), (4, -2))",
      "shift(frozenset(len=21), (0, 0))",
      "shift(frozenset(len=15), (2, 2))",
      "shift(frozenset(len=21), (4, 4))",
      "shift(frozenset(len=21), (4, 2))",
      "shift(frozenset(len=15), (-2, 4))",
      "shift(frozenset(len=10), (0, -1))",
      "shift(frozenset(len=40), (3, 0))",
      "shift(frozenset(len=15), (4, -2))",
      "shift(frozenset(len=21), (-2, 0))",
      "shift(frozenset(len=15), (4, 0))",
      "shift(frozenset(len=45), (0, -3))",
      "shift(frozenset(len=45), (0, 3))",
      "shift(frozenset(len=15), (-4, -4))",
      "shift(frozenset(len=40), (-6, -3))",
      "shift(frozenset(len=21), (-2, 2))",
      "shift(frozenset(len=15), (-2, 2))",
      "shift(frozenset(len=15), (0, 0))",
      "shift(frozenset(len=40), (0, -6))",
      "shift(frozenset(len=40), (0, 6))",
      "shift(frozenset(len=21), (0, -4))",
      "shift(frozenset(len=21), (0, 4))",
      "shift(frozenset(len=45), (6, -6))",
      "shift(frozenset(len=40), (6, 0))",
      "shift(frozenset(len=40), (0, 0))",
      "shift(frozenset(len=21), (2, 4))",
      "shift(frozenset(len=45), (0, 0))",
      "shift(frozenset(len=15), (2, 0))",
      "shift(frozenset(len=40), (3, 6))",
      "shift(frozenset(len=21), (2, -2))",
      "shift(frozenset(len=40), (3, -6))",
      "shift(frozenset(len=40), (-6, -6))",
      "shift(frozenset(len=40), (6, 3))",
      "shift(frozenset(len=45), (0, -6))",
      "shift(frozenset(len=8), (-1, 0))",
      "shift(frozenset(len=40), (3, 3))",
      "shift(frozenset(len=45), (-6, -6))",
      "shift(frozenset(len=40), (6, -6))",
      "shift(frozenset(len=45), (6, 3))",
      "shift(frozenset(len=21), (4, -4))",
      "shift(frozenset(len=40), (-6, 3))",
      "shift(frozenset(len=15), (0, -2))",
      "shift(frozenset(len=21), (-2, -4))",
      "shift(frozenset(len=40), (-3, -3))",
      "shift(frozenset(len=40), (-3, -6))",
      "shift(frozenset(len=21), (-4, 4))",
      "shift(frozenset(len=45), (-6, 3))",
      "shift(frozenset(len=15), (4, -4))",
      "shift(frozenset(len=21), (2, 0))",
      "shift(frozenset(len=45), (-3, 6))",
      "shift(frozenset(len=15), (0, 2))",
      "shift(frozenset(len=21), (2, 2))",
      "shift(frozenset(len=15), (0, 4))",
      "shift(frozenset(len=45), (-3, 0))",
      "shift(frozenset(len=8), (0, 0))",
      "shift(frozenset(len=15), (-4, 2))",
      "shift(frozenset(len=15), (4, 2))",
      "shift(frozenset(len=40), (-6, 0))",
      "shift(frozenset(len=40), (3, -3))"
    ]
  },
  "height_f": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4398": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset(len=8))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset(len=10))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset(len=21))"
          }
        ],
        "code_context": "x12 = vperiod(x10)"
      },
      "solvers.py:4408": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(0, 2)}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset(len=9))"
          }
        ],
        "code_context": "O = subgrid(x2, x21)"
      }
    },
    "type_signatures": [
      "height_f(frozenset)"
    ],
    "value_signatures": [
      "height_f(frozenset(len=8))",
      "height_f(frozenset(len=21))",
      "height_f(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))",
      "height_f(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))",
      "height_f(frozenset(len=9))",
      "height_f(frozenset(len=10))",
      "height_f(frozenset({(0, 2)}))"
    ]
  },
  "lowermost": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4398": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset(len=8))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset(len=10))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset(len=21))"
          }
        ],
        "code_context": "x12 = vperiod(x10)"
      },
      "solvers.py:4408": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(0, 2)}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset(len=9))"
          }
        ],
        "code_context": "O = subgrid(x2, x21)"
      }
    },
    "type_signatures": [
      "lowermost(frozenset)"
    ],
    "value_signatures": [
      "lowermost(frozenset(len=10))",
      "lowermost(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))",
      "lowermost(frozenset(len=21))",
      "lowermost(frozenset({(0, 2)}))",
      "lowermost(frozenset(len=9))",
      "lowermost(frozenset(len=8))",
      "lowermost(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))"
    ]
  },
  "hperiod": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4399": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "hperiod(frozenset)",
            "value_signature": "hperiod(frozenset(len=8))"
          },
          {
            "type_signature": "hperiod(frozenset)",
            "value_signature": "hperiod(frozenset(len=10))"
          },
          {
            "type_signature": "hperiod(frozenset)",
            "value_signature": "hperiod(frozenset(len=21))"
          }
        ],
        "code_context": "x13 = hperiod(x11)"
      }
    },
    "type_signatures": [
      "hperiod(frozenset)"
    ],
    "value_signatures": [
      "hperiod(frozenset(len=8))",
      "hperiod(frozenset(len=10))",
      "hperiod(frozenset(len=21))"
    ]
  },
  "width_f": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4399": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=8))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=10))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=21))"
          }
        ],
        "code_context": "x13 = hperiod(x11)"
      },
      "solvers.py:4408": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(0, 2)}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=9))"
          }
        ],
        "code_context": "O = subgrid(x2, x21)"
      }
    },
    "type_signatures": [
      "width_f(frozenset)"
    ],
    "value_signatures": [
      "width_f(frozenset(len=9))",
      "width_f(frozenset(len=8))",
      "width_f(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))",
      "width_f(frozenset(len=21))",
      "width_f(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))",
      "width_f(frozenset(len=10))",
      "width_f(frozenset({(0, 2)}))"
    ]
  },
  "rightmost": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4399": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=8))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=10))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=21))"
          }
        ],
        "code_context": "x13 = hperiod(x11)"
      },
      "solvers.py:4408": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(0, 2)}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=9))"
          }
        ],
        "code_context": "O = subgrid(x2, x21)"
      }
    },
    "type_signatures": [
      "rightmost(frozenset)"
    ],
    "value_signatures": [
      "rightmost(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))",
      "rightmost(frozenset(len=21))",
      "rightmost(frozenset(len=8))",
      "rightmost(frozenset({(0, 2)}))",
      "rightmost(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))",
      "rightmost(frozenset(len=10))",
      "rightmost(frozenset(len=9))"
    ]
  },
  "neighbors": {
    "calls": 36,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4400": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, 0))"
          }
        ],
        "code_context": "x14 = neighbors(ORIGIN)"
      },
      "solvers.py:4401": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-1, -1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-1, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, -1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-1, 0))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, 0))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, -1))"
          }
        ],
        "code_context": "x15 = mapply(neighbors, x14)"
      }
    },
    "type_signatures": [
      "neighbors(tuple)"
    ],
    "value_signatures": [
      "neighbors((0, 0))",
      "neighbors((0, -1))",
      "neighbors((-1, -1))",
      "neighbors((0, 1))",
      "neighbors((1, -1))",
      "neighbors((1, 1))",
      "neighbors((1, 0))",
      "neighbors((-1, 1))",
      "neighbors((-1, 0))"
    ]
  },
  "ineighbors": {
    "calls": 36,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4400": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 0))"
          }
        ],
        "code_context": "x14 = neighbors(ORIGIN)"
      },
      "solvers.py:4401": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-1, -1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-1, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, -1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-1, 0))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, 0))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, -1))"
          }
        ],
        "code_context": "x15 = mapply(neighbors, x14)"
      }
    },
    "type_signatures": [
      "ineighbors(tuple)"
    ],
    "value_signatures": [
      "ineighbors((1, 0))",
      "ineighbors((0, 1))",
      "ineighbors((1, 1))",
      "ineighbors((0, -1))",
      "ineighbors((1, -1))",
      "ineighbors((-1, 1))",
      "ineighbors((0, 0))",
      "ineighbors((-1, -1))",
      "ineighbors((-1, 0))"
    ]
  },
  "mapply": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4401": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1012f8ca0>, frozenset(len=8))"
          }
        ],
        "code_context": "x15 = mapply(neighbors, x14)"
      },
      "solvers.py:4406": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x101435160>, frozenset(len=25))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x101435040>, frozenset(len=25))"
          }
        ],
        "code_context": "x20 = mapply(x19, x18)"
      }
    },
    "type_signatures": [
      "mapply(function, frozenset)"
    ],
    "value_signatures": [
      "mapply(<function neighbors at 0x1012f8ca0>, frozenset(len=8))",
      "mapply(<function lbind.<locals>.<lambda> at 0x101435040>, frozenset(len=25))",
      "mapply(<function lbind.<locals>.<lambda> at 0x101435160>, frozenset(len=25))"
    ]
  },
  "apply": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4401": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1012f8ca0>, frozenset(len=8))"
          }
        ],
        "code_context": "x15 = mapply(neighbors, x14)"
      },
      "solvers.py:4404": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x1014350d0>, frozenset(len=25))"
          }
        ],
        "code_context": "x18 = apply(x17, x15)"
      },
      "solvers.py:4406": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x101435160>, frozenset(len=25))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x101435040>, frozenset(len=25))"
          }
        ],
        "code_context": "x20 = mapply(x19, x18)"
      }
    },
    "type_signatures": [
      "apply(function, frozenset)"
    ],
    "value_signatures": [
      "apply(<function rbind.<locals>.<lambda> at 0x1014350d0>, frozenset(len=25))",
      "apply(<function lbind.<locals>.<lambda> at 0x101435040>, frozenset(len=25))",
      "apply(<function neighbors at 0x1012f8ca0>, frozenset(len=8))",
      "apply(<function lbind.<locals>.<lambda> at 0x101435160>, frozenset(len=25))"
    ]
  },
  "merge": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4401": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=8))"
          }
        ],
        "code_context": "x15 = mapply(neighbors, x14)"
      },
      "solvers.py:4406": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=25))"
          }
        ],
        "code_context": "x20 = mapply(x19, x18)"
      }
    },
    "type_signatures": [
      "merge(frozenset)"
    ],
    "value_signatures": [
      "merge(frozenset(len=25))",
      "merge(frozenset(len=8))"
    ]
  },
  "astuple": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4402": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(2, 2)"
          },
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(3, 3)"
          }
        ],
        "code_context": "x16 = astuple(x12, x13)"
      }
    },
    "type_signatures": [
      "astuple(int, int)"
    ],
    "value_signatures": [
      "astuple(3, 3)",
      "astuple(2, 2)"
    ]
  },
  "rbind": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4403": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "rbind(function, tuple)",
            "value_signature": "rbind(<function multiply at 0x1012f8c10>, (2, 2))"
          },
          {
            "type_signature": "rbind(function, tuple)",
            "value_signature": "rbind(<function multiply at 0x1012f8c10>, (3, 3))"
          }
        ],
        "code_context": "x17 = rbind(multiply, x16)"
      }
    },
    "type_signatures": [
      "rbind(function, tuple)"
    ],
    "value_signatures": [
      "rbind(<function multiply at 0x1012f8c10>, (2, 2))",
      "rbind(<function multiply at 0x1012f8c10>, (3, 3))"
    ]
  },
  "multiply": {
    "calls": 100,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4404": {
        "count": 50,
        "signatures": [
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((0, 2), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((1, 0), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-1, -1), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-2, -1), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-1, -2), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-2, -2), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-1, 1), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-2, 1), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((0, -1), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((0, -2), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((0, 1), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, -1), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, -2), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((1, 2), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 1), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-2, 0), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-1, 0), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-2, 2), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((0, 0), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((1, 1), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 0), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((1, -2), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((1, -1), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-1, 2), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((0, 2), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((1, 0), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-1, -1), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-2, -1), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-1, -2), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-2, -2), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-1, 1), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-2, 1), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((0, -1), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((0, -2), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((0, 1), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, -1), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, -2), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((1, 2), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 1), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-2, 0), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-1, 0), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-2, 2), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((0, 0), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((1, 1), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 0), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((1, -2), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((1, -1), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((-1, 2), (3, 3))"
          }
        ],
        "code_context": "x18 = apply(x17, x15)"
      }
    },
    "type_signatures": [
      "multiply(tuple, tuple)"
    ],
    "value_signatures": [
      "multiply((2, -2), (2, 2))",
      "multiply((0, -1), (3, 3))",
      "multiply((1, -1), (3, 3))",
      "multiply((2, -2), (3, 3))",
      "multiply((0, -1), (2, 2))",
      "multiply((0, 0), (2, 2))",
      "multiply((-2, 1), (2, 2))",
      "multiply((2, 1), (2, 2))",
      "multiply((2, 1), (3, 3))",
      "multiply((0, -2), (3, 3))",
      "multiply((0, 0), (3, 3))",
      "multiply((-2, -2), (3, 3))",
      "multiply((-1, -1), (3, 3))",
      "multiply((0, 2), (2, 2))",
      "multiply((2, 2), (3, 3))",
      "multiply((-1, -1), (2, 2))",
      "multiply((-2, 0), (3, 3))",
      "multiply((-2, 2), (2, 2))",
      "multiply((1, 2), (3, 3))",
      "multiply((1, 1), (3, 3))",
      "multiply((2, 0), (2, 2))",
      "multiply((1, 2), (2, 2))",
      "multiply((-1, 1), (2, 2))",
      "multiply((1, 1), (2, 2))",
      "multiply((-1, -2), (2, 2))",
      "multiply((-1, 0), (2, 2))",
      "multiply((2, 2), (2, 2))",
      "multiply((2, -1), (2, 2))",
      "multiply((1, -2), (2, 2))",
      "multiply((-1, 2), (3, 3))",
      "multiply((-1, 0), (3, 3))",
      "multiply((-2, 2), (3, 3))",
      "multiply((0, 1), (3, 3))",
      "multiply((1, 0), (2, 2))",
      "multiply((2, -1), (3, 3))",
      "multiply((-2, -1), (3, 3))",
      "multiply((1, 0), (3, 3))",
      "multiply((-2, -1), (2, 2))",
      "multiply((-1, -2), (3, 3))",
      "multiply((0, 2), (3, 3))",
      "multiply((-2, 0), (2, 2))",
      "multiply((0, 1), (2, 2))",
      "multiply((2, 0), (3, 3))",
      "multiply((-1, 2), (2, 2))",
      "multiply((-1, 1), (3, 3))",
      "multiply((1, -2), (3, 3))",
      "multiply((1, -1), (2, 2))",
      "multiply((0, -2), (2, 2))",
      "multiply((-2, -2), (2, 2))",
      "multiply((-2, 1), (3, 3))"
    ]
  },
  "paint": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4407": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , frozenset(len=143))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), frozenset(len=165))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=7), frozenset(len=357))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=7), frozenset(len=352))"
          }
        ],
        "code_context": "x21 = paint(I, x20)"
      }
    },
    "type_signatures": [
      "paint(tuple, frozenset)"
    ],
    "value_signatures": [
      "paint(tuple(len=7), frozenset(len=352))",
      "paint(tuple(len=7), frozenset(len=357))",
      "paint(((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2), frozenset(len=165))",
      "paint(((8, 6, 0, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, , frozenset(len=143))"
    ]
  },
  "subgrid": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4408": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "subgrid(frozenset, tuple)",
            "value_signature": "subgrid(frozenset({(0, 2)}), ((8, 6, 8, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, )"
          },
          {
            "type_signature": "subgrid(frozenset, tuple)",
            "value_signature": "subgrid(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}), ((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2))"
          },
          {
            "type_signature": "subgrid(frozenset, tuple)",
            "value_signature": "subgrid(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}), tuple(len=7))"
          },
          {
            "type_signature": "subgrid(frozenset, tuple)",
            "value_signature": "subgrid(frozenset(len=9), tuple(len=7))"
          }
        ],
        "code_context": "O = subgrid(x2, x21)"
      }
    },
    "type_signatures": [
      "subgrid(frozenset, tuple)"
    ],
    "value_signatures": [
      "subgrid(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}), ((2, 1, 2, 1, 2), (1, 1, 1, 1, 1), (2, 1, 2, 1, 2))",
      "subgrid(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}), tuple(len=7))",
      "subgrid(frozenset(len=9), tuple(len=7))",
      "subgrid(frozenset({(0, 2)}), ((8, 6, 8, 6), (6, 8, 6, 8), (8, 6, 8, 6), (6, 8, )"
    ]
  },
  "ulcorner": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4408": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset({(0, 2)}))"
          },
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
          },
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))"
          },
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset(len=9))"
          }
        ],
        "code_context": "O = subgrid(x2, x21)"
      }
    },
    "type_signatures": [
      "ulcorner(frozenset)"
    ],
    "value_signatures": [
      "ulcorner(frozenset({(0, 2)}))",
      "ulcorner(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))",
      "ulcorner(frozenset(len=9))",
      "ulcorner(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
    ]
  },
  "shape_f": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4408": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "shape_f(frozenset)",
            "value_signature": "shape_f(frozenset({(0, 2)}))"
          },
          {
            "type_signature": "shape_f(frozenset)",
            "value_signature": "shape_f(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))"
          },
          {
            "type_signature": "shape_f(frozenset)",
            "value_signature": "shape_f(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))"
          },
          {
            "type_signature": "shape_f(frozenset)",
            "value_signature": "shape_f(frozenset(len=9))"
          }
        ],
        "code_context": "O = subgrid(x2, x21)"
      }
    },
    "type_signatures": [
      "shape_f(frozenset)"
    ],
    "value_signatures": [
      "shape_f(frozenset({(6, 6), (5, 5), (5, 6), (6, 5)}))",
      "shape_f(frozenset({(3, 1), (4, 0), (4, 1), (3, 0)}))",
      "shape_f(frozenset({(0, 2)}))",
      "shape_f(frozenset(len=9))"
    ]
  }
}