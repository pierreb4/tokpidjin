{
  "f_ofcolor": {
    "calls": 15,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2657": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=16), 3)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=6), 3)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=12), 3)"
          }
        ],
        "code_context": "x1 = f_ofcolor(I, THREE)"
      },
      "solvers.py:2658": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=16), 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=6), 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=12), 8)"
          }
        ],
        "code_context": "x2 = f_ofcolor(I, EIGHT)"
      },
      "solvers.py:2659": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=16), 2)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=6), 2)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=12), 2)"
          }
        ],
        "code_context": "x3 = f_ofcolor(I, TWO)"
      }
    },
    "type_signatures": [
      "f_ofcolor(tuple, int)"
    ],
    "value_signatures": [
      "f_ofcolor(tuple(len=6), 8)",
      "f_ofcolor(tuple(len=12), 8)",
      "f_ofcolor(tuple(len=12), 2)",
      "f_ofcolor(tuple(len=16), 8)",
      "f_ofcolor(tuple(len=6), 3)",
      "f_ofcolor(tuple(len=16), 2)",
      "f_ofcolor(tuple(len=12), 3)",
      "f_ofcolor(tuple(len=6), 2)",
      "f_ofcolor(tuple(len=16), 3)"
    ]
  },
  "mapply": {
    "calls": 15,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2660": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset({(3, 12)}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset({(1, 3)}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset())"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset({(5, 1)}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset({(1, 1)}))"
          }
        ],
        "code_context": "x4 = mapply(neighbors, x1)"
      },
      "solvers.py:2661": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset())"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset({(2, 2)}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset({(4, 5)}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset({(14, 2)}))"
          }
        ],
        "code_context": "x5 = mapply(neighbors, x2)"
      },
      "solvers.py:2662": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset({(10, 3)}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset())"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset({(6, 8)}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x1050c9b80>, frozenset({(10, 13)}))"
          }
        ],
        "code_context": "x6 = mapply(neighbors, x3)"
      }
    },
    "type_signatures": [
      "mapply(function, frozenset)"
    ],
    "value_signatures": [
      "mapply(<function neighbors at 0x1050c9b80>, frozenset({(1, 1)}))",
      "mapply(<function neighbors at 0x1050c9b80>, frozenset({(14, 2)}))",
      "mapply(<function neighbors at 0x1050c9b80>, frozenset({(3, 12)}))",
      "mapply(<function neighbors at 0x1050c9b80>, frozenset({(2, 2)}))",
      "mapply(<function neighbors at 0x1050c9b80>, frozenset())",
      "mapply(<function neighbors at 0x1050c9b80>, frozenset({(6, 8)}))",
      "mapply(<function neighbors at 0x1050c9b80>, frozenset({(4, 5)}))",
      "mapply(<function neighbors at 0x1050c9b80>, frozenset({(5, 1)}))",
      "mapply(<function neighbors at 0x1050c9b80>, frozenset({(10, 13)}))",
      "mapply(<function neighbors at 0x1050c9b80>, frozenset({(1, 3)}))",
      "mapply(<function neighbors at 0x1050c9b80>, frozenset({(10, 3)}))"
    ]
  },
  "apply": {
    "calls": 15,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2660": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset({(3, 12)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset({(1, 3)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset())"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset({(5, 1)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset({(1, 1)}))"
          }
        ],
        "code_context": "x4 = mapply(neighbors, x1)"
      },
      "solvers.py:2661": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset())"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset({(2, 2)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset({(4, 5)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset({(14, 2)}))"
          }
        ],
        "code_context": "x5 = mapply(neighbors, x2)"
      },
      "solvers.py:2662": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset({(10, 3)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset())"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset({(6, 8)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x1050c9b80>, frozenset({(10, 13)}))"
          }
        ],
        "code_context": "x6 = mapply(neighbors, x3)"
      }
    },
    "type_signatures": [
      "apply(function, frozenset)"
    ],
    "value_signatures": [
      "apply(<function neighbors at 0x1050c9b80>, frozenset())",
      "apply(<function neighbors at 0x1050c9b80>, frozenset({(10, 13)}))",
      "apply(<function neighbors at 0x1050c9b80>, frozenset({(4, 5)}))",
      "apply(<function neighbors at 0x1050c9b80>, frozenset({(1, 1)}))",
      "apply(<function neighbors at 0x1050c9b80>, frozenset({(2, 2)}))",
      "apply(<function neighbors at 0x1050c9b80>, frozenset({(5, 1)}))",
      "apply(<function neighbors at 0x1050c9b80>, frozenset({(10, 3)}))",
      "apply(<function neighbors at 0x1050c9b80>, frozenset({(3, 12)}))",
      "apply(<function neighbors at 0x1050c9b80>, frozenset({(6, 8)}))",
      "apply(<function neighbors at 0x1050c9b80>, frozenset({(14, 2)}))",
      "apply(<function neighbors at 0x1050c9b80>, frozenset({(1, 3)}))"
    ]
  },
  "neighbors": {
    "calls": 10,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2660": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((3, 12))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, 3))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((5, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, 1))"
          }
        ],
        "code_context": "x4 = mapply(neighbors, x1)"
      },
      "solvers.py:2662": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((10, 3))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((6, 8))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((10, 13))"
          }
        ],
        "code_context": "x6 = mapply(neighbors, x3)"
      },
      "solvers.py:2661": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((2, 2))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((4, 5))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((14, 2))"
          }
        ],
        "code_context": "x5 = mapply(neighbors, x2)"
      }
    },
    "type_signatures": [
      "neighbors(tuple)"
    ],
    "value_signatures": [
      "neighbors((3, 12))",
      "neighbors((6, 8))",
      "neighbors((4, 5))",
      "neighbors((1, 3))",
      "neighbors((10, 13))",
      "neighbors((14, 2))",
      "neighbors((10, 3))",
      "neighbors((5, 1))",
      "neighbors((1, 1))",
      "neighbors((2, 2))"
    ]
  },
  "dneighbors": {
    "calls": 10,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2660": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 12))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 1))"
          }
        ],
        "code_context": "x4 = mapply(neighbors, x1)"
      },
      "solvers.py:2662": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 13))"
          }
        ],
        "code_context": "x6 = mapply(neighbors, x3)"
      },
      "solvers.py:2661": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((14, 2))"
          }
        ],
        "code_context": "x5 = mapply(neighbors, x2)"
      }
    },
    "type_signatures": [
      "dneighbors(tuple)"
    ],
    "value_signatures": [
      "dneighbors((10, 13))",
      "dneighbors((14, 2))",
      "dneighbors((2, 2))",
      "dneighbors((6, 8))",
      "dneighbors((4, 5))",
      "dneighbors((1, 1))",
      "dneighbors((10, 3))",
      "dneighbors((3, 12))",
      "dneighbors((5, 1))",
      "dneighbors((1, 3))"
    ]
  },
  "ineighbors": {
    "calls": 10,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2660": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((3, 12))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, 3))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((5, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, 1))"
          }
        ],
        "code_context": "x4 = mapply(neighbors, x1)"
      },
      "solvers.py:2662": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((10, 3))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((6, 8))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((10, 13))"
          }
        ],
        "code_context": "x6 = mapply(neighbors, x3)"
      },
      "solvers.py:2661": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((2, 2))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((4, 5))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((14, 2))"
          }
        ],
        "code_context": "x5 = mapply(neighbors, x2)"
      }
    },
    "type_signatures": [
      "ineighbors(tuple)"
    ],
    "value_signatures": [
      "ineighbors((1, 1))",
      "ineighbors((5, 1))",
      "ineighbors((6, 8))",
      "ineighbors((14, 2))",
      "ineighbors((10, 13))",
      "ineighbors((4, 5))",
      "ineighbors((2, 2))",
      "ineighbors((10, 3))",
      "ineighbors((1, 3))",
      "ineighbors((3, 12))"
    ]
  },
  "merge": {
    "calls": 15,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2660": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(4, 13), (4, 12), (2, 13), ()"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(2, 4), (1, 2), (0, 4), (0, )"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset())"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(6, 2), (4, 0), (6, 1), (4, )"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(0, 1), (1, 2), (2, 1), (0, )"
          }
        ],
        "code_context": "x4 = mapply(neighbors, x1)"
      },
      "solvers.py:2661": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset())"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(1, 2), (2, 1), (3, 1), (1, )"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(4, 4), (5, 5), (3, 4), (5, )"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(13, 1), (14, 1), (15, 1), ()"
          }
        ],
        "code_context": "x5 = mapply(neighbors, x2)"
      },
      "solvers.py:2662": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(9, 3), (10, 4), (11, 3), (9)"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset())"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(7, 7), (5, 8), (5, 7), (7, )"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(9, 13), (10, 14), (11, 13),)"
          }
        ],
        "code_context": "x6 = mapply(neighbors, x3)"
      }
    },
    "type_signatures": [
      "merge(frozenset)"
    ],
    "value_signatures": [
      "merge(frozenset({frozenset({(1, 2), (2, 1), (3, 1), (1, )",
      "merge(frozenset({frozenset({(0, 1), (1, 2), (2, 1), (0, )",
      "merge(frozenset({frozenset({(2, 4), (1, 2), (0, 4), (0, )",
      "merge(frozenset())",
      "merge(frozenset({frozenset({(6, 2), (4, 0), (6, 1), (4, )",
      "merge(frozenset({frozenset({(7, 7), (5, 8), (5, 7), (7, )",
      "merge(frozenset({frozenset({(4, 13), (4, 12), (2, 13), ()",
      "merge(frozenset({frozenset({(9, 3), (10, 4), (11, 3), (9)",
      "merge(frozenset({frozenset({(13, 1), (14, 1), (15, 1), ()",
      "merge(frozenset({frozenset({(9, 13), (10, 14), (11, 13),)",
      "merge(frozenset({frozenset({(4, 4), (5, 5), (3, 4), (5, )"
    ]
  },
  "fill": {
    "calls": 15,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2663": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=16), 6, frozenset(len=8))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=6), 6, frozenset(len=8))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=6), 6, frozenset())"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=12), 6, frozenset(len=8))"
          }
        ],
        "code_context": "x7 = fill(I, SIX, x4)"
      },
      "solvers.py:2664": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=16), 4, frozenset())"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=6), 4, frozenset())"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=6), 4, frozenset(len=8))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=12), 4, frozenset(len=8))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=16), 4, frozenset(len=8))"
          }
        ],
        "code_context": "x8 = fill(x7, FOUR, x5)"
      },
      "solvers.py:2665": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=16), 1, frozenset(len=8))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=6), 1, frozenset())"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=12), 1, frozenset(len=8))"
          }
        ],
        "code_context": "O = fill(x8, ONE, x6)"
      }
    },
    "type_signatures": [
      "fill(tuple, int, frozenset)"
    ],
    "value_signatures": [
      "fill(tuple(len=6), 6, frozenset(len=8))",
      "fill(tuple(len=16), 4, frozenset(len=8))",
      "fill(tuple(len=12), 4, frozenset(len=8))",
      "fill(tuple(len=6), 6, frozenset())",
      "fill(tuple(len=12), 6, frozenset(len=8))",
      "fill(tuple(len=6), 1, frozenset())",
      "fill(tuple(len=12), 1, frozenset(len=8))",
      "fill(tuple(len=6), 4, frozenset(len=8))",
      "fill(tuple(len=6), 4, frozenset())",
      "fill(tuple(len=16), 4, frozenset())",
      "fill(tuple(len=16), 1, frozenset(len=8))",
      "fill(tuple(len=16), 6, frozenset(len=8))"
    ]
  },
  "toindices": {
    "calls": 15,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2663": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=8))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset())"
          }
        ],
        "code_context": "x7 = fill(I, SIX, x4)"
      },
      "solvers.py:2664": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset())"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=8))"
          }
        ],
        "code_context": "x8 = fill(x7, FOUR, x5)"
      },
      "solvers.py:2665": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=8))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset())"
          }
        ],
        "code_context": "O = fill(x8, ONE, x6)"
      }
    },
    "type_signatures": [
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset())",
      "toindices(frozenset(len=8))"
    ]
  }
}