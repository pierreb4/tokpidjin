{
  "asobject": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4263": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(tuple(len=8))"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(tuple(len=11))"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(tuple(len=6))"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(tuple(len=18))"
          }
        ],
        "code_context": "x1 = asobject(I)"
      }
    },
    "type_signatures": [
      "asobject(tuple)"
    ],
    "value_signatures": [
      "asobject(tuple(len=11))",
      "asobject(tuple(len=18))",
      "asobject(tuple(len=8))",
      "asobject(tuple(len=6))"
    ]
  },
  "shape_t": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4264": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "shape_t(tuple)",
            "value_signature": "shape_t(tuple(len=8))"
          },
          {
            "type_signature": "shape_t(tuple)",
            "value_signature": "shape_t(tuple(len=11))"
          },
          {
            "type_signature": "shape_t(tuple)",
            "value_signature": "shape_t(tuple(len=6))"
          },
          {
            "type_signature": "shape_t(tuple)",
            "value_signature": "shape_t(tuple(len=18))"
          }
        ],
        "code_context": "x2 = shape_t(I)"
      }
    },
    "type_signatures": [
      "shape_t(tuple)"
    ],
    "value_signatures": [
      "shape_t(tuple(len=8))",
      "shape_t(tuple(len=11))",
      "shape_t(tuple(len=6))",
      "shape_t(tuple(len=18))"
    ]
  },
  "height_t": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4264": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "height_t(tuple)",
            "value_signature": "height_t(tuple(len=8))"
          },
          {
            "type_signature": "height_t(tuple)",
            "value_signature": "height_t(tuple(len=11))"
          },
          {
            "type_signature": "height_t(tuple)",
            "value_signature": "height_t(tuple(len=6))"
          },
          {
            "type_signature": "height_t(tuple)",
            "value_signature": "height_t(tuple(len=18))"
          }
        ],
        "code_context": "x2 = shape_t(I)"
      }
    },
    "type_signatures": [
      "height_t(tuple)"
    ],
    "value_signatures": [
      "height_t(tuple(len=11))",
      "height_t(tuple(len=18))",
      "height_t(tuple(len=8))",
      "height_t(tuple(len=6))"
    ]
  },
  "width_t": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4264": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "width_t(tuple)",
            "value_signature": "width_t(tuple(len=8))"
          },
          {
            "type_signature": "width_t(tuple)",
            "value_signature": "width_t(tuple(len=11))"
          },
          {
            "type_signature": "width_t(tuple)",
            "value_signature": "width_t(tuple(len=6))"
          },
          {
            "type_signature": "width_t(tuple)",
            "value_signature": "width_t(tuple(len=18))"
          }
        ],
        "code_context": "x2 = shape_t(I)"
      }
    },
    "type_signatures": [
      "width_t(tuple)"
    ],
    "value_signatures": [
      "width_t(tuple(len=8))",
      "width_t(tuple(len=11))",
      "width_t(tuple(len=6))",
      "width_t(tuple(len=18))"
    ]
  },
  "decrement": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4265": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((8, 8))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((11, 11))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((6, 6))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((18, 18))"
          }
        ],
        "code_context": "x3 = decrement(x2)"
      }
    },
    "type_signatures": [
      "decrement(tuple)"
    ],
    "value_signatures": [
      "decrement((8, 8))",
      "decrement((11, 11))",
      "decrement((18, 18))",
      "decrement((6, 6))"
    ]
  },
  "index": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4266": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "index(tuple, tuple)",
            "value_signature": "index(tuple(len=8), (7, 7))"
          },
          {
            "type_signature": "index(tuple, tuple)",
            "value_signature": "index(tuple(len=11), (10, 10))"
          },
          {
            "type_signature": "index(tuple, tuple)",
            "value_signature": "index(tuple(len=6), (5, 5))"
          },
          {
            "type_signature": "index(tuple, tuple)",
            "value_signature": "index(tuple(len=18), (17, 17))"
          }
        ],
        "code_context": "x4 = index(I, x3)"
      }
    },
    "type_signatures": [
      "index(tuple, tuple)"
    ],
    "value_signatures": [
      "index(tuple(len=8), (7, 7))",
      "index(tuple(len=18), (17, 17))",
      "index(tuple(len=6), (5, 5))",
      "index(tuple(len=11), (10, 10))"
    ]
  },
  "double": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4267": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "double(tuple)",
            "value_signature": "double((8, 8))"
          },
          {
            "type_signature": "double(tuple)",
            "value_signature": "double((11, 11))"
          },
          {
            "type_signature": "double(tuple)",
            "value_signature": "double((6, 6))"
          },
          {
            "type_signature": "double(tuple)",
            "value_signature": "double((18, 18))"
          }
        ],
        "code_context": "x5 = double(x2)"
      }
    },
    "type_signatures": [
      "double(tuple)"
    ],
    "value_signatures": [
      "double((11, 11))",
      "double((6, 6))",
      "double((18, 18))",
      "double((8, 8))"
    ]
  },
  "canvas": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4268": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(1, (16, 16))"
          },
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(3, (22, 22))"
          },
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(6, (12, 12))"
          },
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(3, (36, 36))"
          }
        ],
        "code_context": "x6 = canvas(x4, x5)"
      }
    },
    "type_signatures": [
      "canvas(int, tuple)"
    ],
    "value_signatures": [
      "canvas(6, (12, 12))",
      "canvas(1, (16, 16))",
      "canvas(3, (22, 22))",
      "canvas(3, (36, 36))"
    ]
  },
  "paint": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4269": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=16), frozenset(len=64))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=22), frozenset(len=121))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=12), frozenset(len=36))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=36), frozenset(len=324))"
          }
        ],
        "code_context": "x7 = paint(x6, x1)"
      },
      "solvers.py:4284": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=8), frozenset(len=361))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=11), frozenset(len=361))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=6), frozenset(len=289))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=18), frozenset(len=720))"
          }
        ],
        "code_context": "O = paint(I, x21)"
      }
    },
    "type_signatures": [
      "paint(tuple, frozenset)"
    ],
    "value_signatures": [
      "paint(tuple(len=16), frozenset(len=64))",
      "paint(tuple(len=6), frozenset(len=289))",
      "paint(tuple(len=22), frozenset(len=121))",
      "paint(tuple(len=18), frozenset(len=720))",
      "paint(tuple(len=36), frozenset(len=324))",
      "paint(tuple(len=8), frozenset(len=361))",
      "paint(tuple(len=12), frozenset(len=36))",
      "paint(tuple(len=11), frozenset(len=361))"
    ]
  },
  "objects": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4270": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(tuple(len=16), False, False, True)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(tuple(len=22), False, False, True)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(tuple(len=12), False, False, True)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(tuple(len=36), False, False, True)"
          }
        ],
        "code_context": "x8 = objects(x7, F, F, T)"
      }
    },
    "type_signatures": [
      "objects(tuple, bool, bool, bool)"
    ],
    "value_signatures": [
      "objects(tuple(len=22), False, False, True)",
      "objects(tuple(len=12), False, False, True)",
      "objects(tuple(len=36), False, False, True)",
      "objects(tuple(len=16), False, False, True)"
    ]
  },
  "mostcolor_t": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4270": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(tuple(len=16))"
          },
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(tuple(len=22))"
          },
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(tuple(len=12))"
          },
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(tuple(len=36))"
          }
        ],
        "code_context": "x8 = objects(x7, F, F, T)"
      }
    },
    "type_signatures": [
      "mostcolor_t(tuple)"
    ],
    "value_signatures": [
      "mostcolor_t(tuple(len=36))",
      "mostcolor_t(tuple(len=12))",
      "mostcolor_t(tuple(len=22))",
      "mostcolor_t(tuple(len=16))"
    ]
  },
  "asindices": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4270": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(tuple(len=16))"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(tuple(len=22))"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(tuple(len=12))"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(tuple(len=36))"
          }
        ],
        "code_context": "x8 = objects(x7, F, F, T)"
      }
    },
    "type_signatures": [
      "asindices(tuple)"
    ],
    "value_signatures": [
      "asindices(tuple(len=22))",
      "asindices(tuple(len=16))",
      "asindices(tuple(len=36))",
      "asindices(tuple(len=12))"
    ]
  },
  "dneighbors": {
    "calls": 403,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4270": {
        "count": 144,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 11))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((10, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((11, 0))"
          }
        ],
        "code_context": "x8 = objects(x7, F, F, T)"
      },
      "solvers.py:4275": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 0))"
          }
        ],
        "code_context": "x13 = neighbors(ORIGIN)"
      },
      "solvers.py:4278": {
        "count": 25,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-1, -1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, -1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-1, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, -1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-2, -1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-1, -2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-2, -2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-2, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, -2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, -1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, -2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-2, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-2, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, -2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-1, 2))"
          }
        ],
        "code_context": "x16 = x15(x13)"
      }
    },
    "type_signatures": [
      "dneighbors(tuple)"
    ],
    "value_signatures": [
      "dneighbors((2, 1))",
      "dneighbors((1, 0))",
      "dneighbors((8, 6))",
      "dneighbors((5, 6))",
      "dneighbors((1, 6))",
      "dneighbors((11, 5))",
      "dneighbors((5, 4))",
      "dneighbors((3, 7))",
      "dneighbors((8, 5))",
      "dneighbors((7, 6))",
      "dneighbors((8, 2))",
      "dneighbors((6, 7))",
      "dneighbors((10, 10))",
      "dneighbors((11, 10))",
      "dneighbors((3, 5))",
      "dneighbors((5, 5))",
      "dneighbors((-2, 0))",
      "dneighbors((4, 3))",
      "dneighbors((11, 6))",
      "dneighbors((1, -1))",
      "dneighbors((1, 9))",
      "dneighbors((3, 3))",
      "dneighbors((1, 3))",
      "dneighbors((1, 10))",
      "dneighbors((6, 8))",
      "dneighbors((9, 5))",
      "dneighbors((7, 3))",
      "dneighbors((-1, -1))",
      "dneighbors((-1, 2))",
      "dneighbors((5, 0))",
      "dneighbors((2, 9))",
      "dneighbors((6, 4))",
      "dneighbors((4, 4))",
      "dneighbors((0, 6))",
      "dneighbors((2, 8))",
      "dneighbors((-2, -2))",
      "dneighbors((8, 9))",
      "dneighbors((6, 5))",
      "dneighbors((7, 9))",
      "dneighbors((5, 9))",
      "dneighbors((9, 1))",
      "dneighbors((8, 10))",
      "dneighbors((9, 7))",
      "dneighbors((5, 10))",
      "dneighbors((3, 10))",
      "dneighbors((3, 6))",
      "dneighbors((9, 3))",
      "dneighbors((10, 11))",
      "dneighbors((11, 3))",
      "dneighbors((11, 11))",
      "dneighbors((6, 0))",
      "dneighbors((4, 2))",
      "dneighbors((0, -1))",
      "dneighbors((2, -1))",
      "dneighbors((1, 4))",
      "dneighbors((5, 7))",
      "dneighbors((0, 10))",
      "dneighbors((11, 0))",
      "dneighbors((6, 9))",
      "dneighbors((8, 8))",
      "dneighbors((10, 1))",
      "dneighbors((9, 11))",
      "dneighbors((5, 8))",
      "dneighbors((3, 9))",
      "dneighbors((8, 4))",
      "dneighbors((10, 4))",
      "dneighbors((7, 4))",
      "dneighbors((8, 3))",
      "dneighbors((-2, 2))",
      "dneighbors((9, 9))",
      "dneighbors((2, 7))",
      "dneighbors((4, 7))",
      "dneighbors((11, 9))",
      "dneighbors((0, 2))",
      "dneighbors((2, 10))",
      "dneighbors((6, 10))",
      "dneighbors((8, 0))",
      "dneighbors((5, 11))",
      "dneighbors((7, 7))",
      "dneighbors((7, 5))",
      "dneighbors((8, 1))",
      "dneighbors((10, 0))",
      "dneighbors((6, 11))",
      "dneighbors((-1, 0))",
      "dneighbors((6, 2))",
      "dneighbors((0, 5))",
      "dneighbors((0, 1))",
      "dneighbors((9, 4))",
      "dneighbors((-1, -2))",
      "dneighbors((0, 4))",
      "dneighbors((0, 11))",
      "dneighbors((6, 6))",
      "dneighbors((11, 4))",
      "dneighbors((4, 8))",
      "dneighbors((5, 3))",
      "dneighbors((-2, -1))",
      "dneighbors((10, 2))",
      "dneighbors((10, 7))",
      "dneighbors((1, -2))",
      "dneighbors((2, 11))",
      "dneighbors((2, 0))",
      "dneighbors((4, 6))",
      "dneighbors((7, 2))",
      "dneighbors((4, 5))",
      "dneighbors((7, 0))",
      "dneighbors((0, -2))",
      "dneighbors((9, 6))",
      "dneighbors((0, 7))",
      "dneighbors((2, 4))",
      "dneighbors((10, 8))",
      "dneighbors((11, 1))",
      "dneighbors((3, 11))",
      "dneighbors((10, 5))",
      "dneighbors((7, 1))",
      "dneighbors((8, 7))",
      "dneighbors((1, 2))",
      "dneighbors((3, 8))",
      "dneighbors((6, 3))",
      "dneighbors((2, 5))",
      "dneighbors((0, 8))",
      "dneighbors((1, 1))",
      "dneighbors((4, 0))",
      "dneighbors((2, 2))",
      "dneighbors((2, 3))",
      "dneighbors((0, 3))",
      "dneighbors((1, 11))",
      "dneighbors((3, 1))",
      "dneighbors((8, 11))",
      "dneighbors((0, 9))",
      "dneighbors((9, 10))",
      "dneighbors((2, 6))",
      "dneighbors((4, 11))",
      "dneighbors((4, 10))",
      "dneighbors((9, 0))",
      "dneighbors((1, 7))",
      "dneighbors((6, 1))",
      "dneighbors((3, 4))",
      "dneighbors((7, 10))",
      "dneighbors((4, 1))",
      "dneighbors((-2, 1))",
      "dneighbors((3, 0))",
      "dneighbors((3, 2))",
      "dneighbors((1, 8))",
      "dneighbors((7, 11))",
      "dneighbors((7, 8))",
      "dneighbors((11, 2))",
      "dneighbors((11, 7))",
      "dneighbors((11, 8))",
      "dneighbors((5, 2))",
      "dneighbors((2, -2))",
      "dneighbors((9, 8))",
      "dneighbors((10, 3))",
      "dneighbors((10, 9))",
      "dneighbors((-1, 1))",
      "dneighbors((0, 0))",
      "dneighbors((9, 2))",
      "dneighbors((1, 5))",
      "dneighbors((5, 1))",
      "dneighbors((10, 6))",
      "dneighbors((4, 9))"
    ]
  },
  "first_f": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4271": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "first_f(frozenset)",
            "value_signature": "first_f(frozenset({frozenset({(3, (3, 4)), (6, (0, 6)), (6)"
          },
          {
            "type_signature": "first_f(frozenset)",
            "value_signature": "first_f(frozenset({frozenset({(6, (0, 6)), (6, (2, 0)), (6)"
          },
          {
            "type_signature": "first_f(frozenset)",
            "value_signature": "first_f(frozenset({frozenset({(4, (1, 0)), (5, (2, 2)), (4)"
          },
          {
            "type_signature": "first_f(frozenset)",
            "value_signature": "first_f(frozenset({frozenset({(5, (5, 6)), (7, (11, 1)), ()"
          }
        ],
        "code_context": "x9 = first_f(x8)"
      }
    },
    "type_signatures": [
      "first_f(frozenset)"
    ],
    "value_signatures": [
      "first_f(frozenset({frozenset({(5, (5, 6)), (7, (11, 1)), ()",
      "first_f(frozenset({frozenset({(6, (0, 6)), (6, (2, 0)), (6)",
      "first_f(frozenset({frozenset({(4, (1, 0)), (5, (2, 2)), (4)",
      "first_f(frozenset({frozenset({(3, (3, 4)), (6, (0, 6)), (6)"
    ]
  },
  "shift": {
    "calls": 225,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4272": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, -1))"
          }
        ],
        "code_context": "x10 = shift(x9, LEFT)"
      },
      "solvers.py:4273": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-1, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-1, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-1, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-2, 0))"
          }
        ],
        "code_context": "x11 = vperiod(x10)"
      },
      "solvers.py:4274": {
        "count": 10,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, 1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, -3))"
          }
        ],
        "code_context": "x12 = hperiod(x10)"
      },
      "solvers.py:4283": {
        "count": 147,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (4, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (4, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-6, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-6, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (4, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (2, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-4, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (6, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (6, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-2, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (4, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (2, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-4, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-4, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (6, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (6, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-2, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-4, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (4, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-2, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-6, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-6, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (2, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (0, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (2, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-4, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-2, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=49), (-2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (4, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (4, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-6, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-6, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (4, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (2, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-4, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (6, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (6, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-2, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (4, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (2, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-4, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-4, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (6, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (6, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-2, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-4, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (4, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-2, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-6, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-6, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (2, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (0, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (2, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-4, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-2, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=25), (-2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (4, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (4, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (4, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (4, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (4, 9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (4, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-6, -9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-6, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-6, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-6, 9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-4, -9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-4, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-4, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-2, -9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-2, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-4, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-2, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-4, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-4, 9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-4, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-2, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-2, 9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (-2, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, -9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (2, -9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (2, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, 9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (2, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (0, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (2, 9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (6, -9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (6, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (2, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (2, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (6, 3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (6, 9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=144), (4, -9))"
          }
        ],
        "code_context": "x21 = mapply(x20, x19)"
      }
    },
    "type_signatures": [
      "shift(frozenset, tuple)"
    ],
    "value_signatures": [
      "shift(frozenset(len=144), (-4, 3))",
      "shift(frozenset(len=25), (0, 6))",
      "shift(frozenset(len=144), (-2, 9))",
      "shift(frozenset(len=25), (6, 4))",
      "shift(frozenset(len=144), (0, -6))",
      "shift(frozenset(len=49), (-6, -2))",
      "shift(frozenset(len=25), (-4, 2))",
      "shift(frozenset(len=25), (-1, 0))",
      "shift(frozenset(len=144), (0, -1))",
      "shift(frozenset(len=49), (-6, -4))",
      "shift(frozenset(len=144), (-4, -9))",
      "shift(frozenset(len=25), (-6, 0))",
      "shift(frozenset(len=144), (0, 1))",
      "shift(frozenset(len=144), (-6, 9))",
      "shift(frozenset(len=144), (6, -9))",
      "shift(frozenset(len=49), (-1, 0))",
      "shift(frozenset(len=144), (0, 3))",
      "shift(frozenset(len=144), (-1, 0))",
      "shift(frozenset(len=144), (2, -9))",
      "shift(frozenset(len=25), (0, 2))",
      "shift(frozenset(len=49), (0, 2))",
      "shift(frozenset(len=144), (2, -6))",
      "shift(frozenset(len=25), (4, 0))",
      "shift(frozenset(len=144), (0, -2))",
      "shift(frozenset(len=49), (-2, 2))",
      "shift(frozenset(len=25), (2, 4))",
      "shift(frozenset(len=25), (4, 4))",
      "shift(frozenset(len=144), (2, -3))",
      "shift(frozenset(len=25), (-4, 0))",
      "shift(frozenset(len=49), (2, -4))",
      "shift(frozenset(len=49), (4, 6))",
      "shift(frozenset(len=49), (-4, 4))",
      "shift(frozenset(len=49), (2, -2))",
      "shift(frozenset(len=49), (-2, -4))",
      "shift(frozenset(len=144), (0, 0))",
      "shift(frozenset(len=49), (0, 6))",
      "shift(frozenset(len=25), (6, 0))",
      "shift(frozenset(len=49), (6, 4))",
      "shift(frozenset(len=144), (-2, -6))",
      "shift(frozenset(len=49), (6, 2))",
      "shift(frozenset(len=49), (0, -4))",
      "shift(frozenset(len=25), (-2, -6))",
      "shift(frozenset(len=25), (-4, 4))",
      "shift(frozenset(len=25), (-2, 6))",
      "shift(frozenset(len=25), (0, -1))",
      "shift(frozenset(len=144), (-2, -3))",
      "shift(frozenset(len=144), (-6, 6))",
      "shift(frozenset(len=49), (2, 6))",
      "shift(frozenset(len=49), (2, -6))",
      "shift(frozenset(len=25), (-6, 2))",
      "shift(frozenset(len=144), (6, -3))",
      "shift(frozenset(len=49), (0, -6))",
      "shift(frozenset(len=49), (2, 4))",
      "shift(frozenset(len=25), (-6, 4))",
      "shift(frozenset(len=49), (-4, -4))",
      "shift(frozenset(len=49), (-4, 2))",
      "shift(frozenset(len=25), (0, 0))",
      "shift(frozenset(len=144), (-4, 9))",
      "shift(frozenset(len=25), (0, -2))",
      "shift(frozenset(len=49), (0, -1))",
      "shift(frozenset(len=49), (2, 2))",
      "shift(frozenset(len=144), (4, -9))",
      "shift(frozenset(len=144), (6, 3))",
      "shift(frozenset(len=49), (-6, -6))",
      "shift(frozenset(len=49), (0, 1))",
      "shift(frozenset(len=144), (0, 9))",
      "shift(frozenset(len=49), (-2, -6))",
      "shift(frozenset(len=144), (0, 6))",
      "shift(frozenset(len=49), (0, 4))",
      "shift(frozenset(len=25), (2, 6))",
      "shift(frozenset(len=25), (-2, 2))",
      "shift(frozenset(len=144), (-4, 0))",
      "shift(frozenset(len=144), (4, 3))",
      "shift(frozenset(len=25), (-6, 6))",
      "shift(frozenset(len=25), (6, 2))",
      "shift(frozenset(len=144), (6, 9))",
      "shift(frozenset(len=49), (6, -4))",
      "shift(frozenset(len=25), (-4, 6))",
      "shift(frozenset(len=144), (4, 9))",
      "shift(frozenset(len=49), (-6, 0))",
      "shift(frozenset(len=49), (-2, 6))",
      "shift(frozenset(len=49), (-4, -6))",
      "shift(frozenset(len=25), (4, -2))",
      "shift(frozenset(len=144), (-2, -9))",
      "shift(frozenset(len=25), (2, 2))",
      "shift(frozenset(len=49), (4, -6))",
      "shift(frozenset(len=144), (6, 6))",
      "shift(frozenset(len=25), (0, -4))",
      "shift(frozenset(len=49), (4, 2))",
      "shift(frozenset(len=25), (-6, -4))",
      "shift(frozenset(len=144), (-6, 0))",
      "shift(frozenset(len=49), (6, 6))",
      "shift(frozenset(len=144), (6, -6))",
      "shift(frozenset(len=25), (4, -6))",
      "shift(frozenset(len=49), (4, 4))",
      "shift(frozenset(len=49), (4, -2))",
      "shift(frozenset(len=49), (6, -6))",
      "shift(frozenset(len=25), (2, -6))",
      "shift(frozenset(len=144), (2, 0))",
      "shift(frozenset(len=144), (0, -3))",
      "shift(frozenset(len=25), (6, -4))",
      "shift(frozenset(len=144), (-6, -9))",
      "shift(frozenset(len=144), (4, 0))",
      "shift(frozenset(len=49), (-2, -2))",
      "shift(frozenset(len=25), (6, -6))",
      "shift(frozenset(len=144), (-2, 0))",
      "shift(frozenset(len=49), (6, -2))",
      "shift(frozenset(len=25), (0, -6))",
      "shift(frozenset(len=25), (4, -4))",
      "shift(frozenset(len=144), (4, -3))",
      "shift(frozenset(len=144), (-6, 3))",
      "shift(frozenset(len=25), (6, -2))",
      "shift(frozenset(len=49), (-4, -2))",
      "shift(frozenset(len=49), (4, 0))",
      "shift(frozenset(len=49), (-4, 0))",
      "shift(frozenset(len=144), (4, -6))",
      "shift(frozenset(len=25), (4, 6))",
      "shift(frozenset(len=49), (-2, 4))",
      "shift(frozenset(len=49), (-4, 6))",
      "shift(frozenset(len=25), (-6, -6))",
      "shift(frozenset(len=144), (-4, 6))",
      "shift(frozenset(len=144), (0, -9))",
      "shift(frozenset(len=144), (-2, 3))",
      "shift(frozenset(len=49), (-2, 0))",
      "shift(frozenset(len=49), (0, -2))",
      "shift(frozenset(len=144), (-6, -6))",
      "shift(frozenset(len=25), (-6, -2))",
      "shift(frozenset(len=25), (6, 6))",
      "shift(frozenset(len=49), (4, -4))",
      "shift(frozenset(len=49), (6, 0))",
      "shift(frozenset(len=25), (-4, -4))",
      "shift(frozenset(len=144), (-4, -3))",
      "shift(frozenset(len=144), (2, 9))",
      "shift(frozenset(len=25), (-4, -6))",
      "shift(frozenset(len=25), (2, 0))",
      "shift(frozenset(len=49), (-6, 6))",
      "shift(frozenset(len=25), (-4, -2))",
      "shift(frozenset(len=144), (2, 6))",
      "shift(frozenset(len=144), (-4, -6))",
      "shift(frozenset(len=25), (-2, 0))",
      "shift(frozenset(len=25), (-2, 4))",
      "shift(frozenset(len=25), (2, -4))",
      "shift(frozenset(len=144), (-6, -3))",
      "shift(frozenset(len=25), (-2, -2))",
      "shift(frozenset(len=49), (2, 0))",
      "shift(frozenset(len=144), (-2, 6))",
      "shift(frozenset(len=49), (-6, 2))",
      "shift(frozenset(len=25), (0, 4))",
      "shift(frozenset(len=25), (0, 1))",
      "shift(frozenset(len=25), (-2, -4))",
      "shift(frozenset(len=49), (-6, 4))",
      "shift(frozenset(len=144), (6, 0))",
      "shift(frozenset(len=144), (2, 3))",
      "shift(frozenset(len=25), (4, 2))",
      "shift(frozenset(len=25), (2, -2))",
      "shift(frozenset(len=144), (4, 6))",
      "shift(frozenset(len=49), (0, 0))"
    ]
  },
  "vperiod": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4273": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "vperiod(frozenset)",
            "value_signature": "vperiod(frozenset(len=49))"
          },
          {
            "type_signature": "vperiod(frozenset)",
            "value_signature": "vperiod(frozenset(len=25))"
          },
          {
            "type_signature": "vperiod(frozenset)",
            "value_signature": "vperiod(frozenset(len=144))"
          }
        ],
        "code_context": "x11 = vperiod(x10)"
      }
    },
    "type_signatures": [
      "vperiod(frozenset)"
    ],
    "value_signatures": [
      "vperiod(frozenset(len=25))",
      "vperiod(frozenset(len=144))",
      "vperiod(frozenset(len=49))"
    ]
  },
  "normalize": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4273": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=49))"
          },
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=25))"
          },
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=144))"
          }
        ],
        "code_context": "x11 = vperiod(x10)"
      },
      "solvers.py:4274": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=49))"
          },
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=25))"
          },
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=144))"
          }
        ],
        "code_context": "x12 = hperiod(x10)"
      }
    },
    "type_signatures": [
      "normalize(frozenset)"
    ],
    "value_signatures": [
      "normalize(frozenset(len=49))",
      "normalize(frozenset(len=25))",
      "normalize(frozenset(len=144))"
    ]
  },
  "uppermost": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4273": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=49))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=25))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=144))"
          }
        ],
        "code_context": "x11 = vperiod(x10)"
      },
      "solvers.py:4274": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=49))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=25))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=144))"
          }
        ],
        "code_context": "x12 = hperiod(x10)"
      }
    },
    "type_signatures": [
      "uppermost(frozenset)"
    ],
    "value_signatures": [
      "uppermost(frozenset(len=144))",
      "uppermost(frozenset(len=25))",
      "uppermost(frozenset(len=49))"
    ]
  },
  "toindices": {
    "calls": 32,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4273": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=49))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=25))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=144))"
          }
        ],
        "code_context": "x11 = vperiod(x10)"
      },
      "solvers.py:4274": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=49))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=25))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=144))"
          }
        ],
        "code_context": "x12 = hperiod(x10)"
      }
    },
    "type_signatures": [
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset(len=25))",
      "toindices(frozenset(len=49))",
      "toindices(frozenset(len=144))"
    ]
  },
  "leftmost": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4273": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=49))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=25))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=144))"
          }
        ],
        "code_context": "x11 = vperiod(x10)"
      },
      "solvers.py:4274": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=49))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=25))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=144))"
          }
        ],
        "code_context": "x12 = hperiod(x10)"
      }
    },
    "type_signatures": [
      "leftmost(frozenset)"
    ],
    "value_signatures": [
      "leftmost(frozenset(len=25))",
      "leftmost(frozenset(len=144))",
      "leftmost(frozenset(len=49))"
    ]
  },
  "height_f": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4273": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset(len=49))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset(len=25))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset(len=144))"
          }
        ],
        "code_context": "x11 = vperiod(x10)"
      }
    },
    "type_signatures": [
      "height_f(frozenset)"
    ],
    "value_signatures": [
      "height_f(frozenset(len=49))",
      "height_f(frozenset(len=25))",
      "height_f(frozenset(len=144))"
    ]
  },
  "lowermost": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4273": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset(len=49))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset(len=25))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset(len=144))"
          }
        ],
        "code_context": "x11 = vperiod(x10)"
      }
    },
    "type_signatures": [
      "lowermost(frozenset)"
    ],
    "value_signatures": [
      "lowermost(frozenset(len=49))",
      "lowermost(frozenset(len=144))",
      "lowermost(frozenset(len=25))"
    ]
  },
  "hperiod": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4274": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "hperiod(frozenset)",
            "value_signature": "hperiod(frozenset(len=49))"
          },
          {
            "type_signature": "hperiod(frozenset)",
            "value_signature": "hperiod(frozenset(len=25))"
          },
          {
            "type_signature": "hperiod(frozenset)",
            "value_signature": "hperiod(frozenset(len=144))"
          }
        ],
        "code_context": "x12 = hperiod(x10)"
      }
    },
    "type_signatures": [
      "hperiod(frozenset)"
    ],
    "value_signatures": [
      "hperiod(frozenset(len=49))",
      "hperiod(frozenset(len=144))",
      "hperiod(frozenset(len=25))"
    ]
  },
  "width_f": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4274": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=49))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=25))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=144))"
          }
        ],
        "code_context": "x12 = hperiod(x10)"
      }
    },
    "type_signatures": [
      "width_f(frozenset)"
    ],
    "value_signatures": [
      "width_f(frozenset(len=25))",
      "width_f(frozenset(len=144))",
      "width_f(frozenset(len=49))"
    ]
  },
  "rightmost": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4274": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=49))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=25))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=144))"
          }
        ],
        "code_context": "x12 = hperiod(x10)"
      }
    },
    "type_signatures": [
      "rightmost(frozenset)"
    ],
    "value_signatures": [
      "rightmost(frozenset(len=49))",
      "rightmost(frozenset(len=144))",
      "rightmost(frozenset(len=25))"
    ]
  },
  "neighbors": {
    "calls": 136,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4275": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, 0))"
          }
        ],
        "code_context": "x13 = neighbors(ORIGIN)"
      },
      "solvers.py:4278": {
        "count": 25,
        "signatures": [
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-1, -1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-1, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, -1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-1, 0))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, 0))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, -1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, 2))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((2, 2))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-2, -1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-1, -2))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-2, -2))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-2, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, -2))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((2, -1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((2, -2))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, 2))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((2, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-2, 0))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-2, 2))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, 0))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((2, 0))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, -2))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-1, 2))"
          }
        ],
        "code_context": "x16 = x15(x13)"
      }
    },
    "type_signatures": [
      "neighbors(tuple)"
    ],
    "value_signatures": [
      "neighbors((1, -1))",
      "neighbors((2, 2))",
      "neighbors((2, -1))",
      "neighbors((-1, 0))",
      "neighbors((-2, -2))",
      "neighbors((2, 1))",
      "neighbors((0, 2))",
      "neighbors((-2, 0))",
      "neighbors((-2, 2))",
      "neighbors((-1, -2))",
      "neighbors((1, 2))",
      "neighbors((0, -2))",
      "neighbors((1, 1))",
      "neighbors((-2, -1))",
      "neighbors((-2, 1))",
      "neighbors((2, 0))",
      "neighbors((1, -2))",
      "neighbors((0, 0))",
      "neighbors((1, 0))",
      "neighbors((0, -1))",
      "neighbors((2, -2))",
      "neighbors((-1, 1))",
      "neighbors((0, 1))",
      "neighbors((-1, -1))",
      "neighbors((-1, 2))"
    ]
  },
  "ineighbors": {
    "calls": 136,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4275": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 0))"
          }
        ],
        "code_context": "x13 = neighbors(ORIGIN)"
      },
      "solvers.py:4278": {
        "count": 25,
        "signatures": [
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-1, -1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-1, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, -1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-1, 0))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, 0))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, -1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 2))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((2, 2))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-2, -1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-1, -2))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-2, -2))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-2, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, -2))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((2, -1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((2, -2))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, 2))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((2, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-2, 0))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-2, 2))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 0))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((2, 0))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, -2))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-1, 2))"
          }
        ],
        "code_context": "x16 = x15(x13)"
      }
    },
    "type_signatures": [
      "ineighbors(tuple)"
    ],
    "value_signatures": [
      "ineighbors((-1, 0))",
      "ineighbors((0, -1))",
      "ineighbors((2, -2))",
      "ineighbors((1, -1))",
      "ineighbors((-1, 2))",
      "ineighbors((-1, -1))",
      "ineighbors((0, 2))",
      "ineighbors((0, 1))",
      "ineighbors((1, -2))",
      "ineighbors((0, -2))",
      "ineighbors((1, 2))",
      "ineighbors((2, 0))",
      "ineighbors((1, 0))",
      "ineighbors((2, 1))",
      "ineighbors((1, 1))",
      "ineighbors((0, 0))",
      "ineighbors((-2, 1))",
      "ineighbors((2, -1))",
      "ineighbors((-2, 0))",
      "ineighbors((-2, -1))",
      "ineighbors((-2, 2))",
      "ineighbors((-1, -2))",
      "ineighbors((2, 2))",
      "ineighbors((-2, -2))",
      "ineighbors((-1, 1))"
    ]
  },
  "lbind": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4276": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function mapply at 0x100a09160>, <function neighbors at 0x100a09ca0>)"
          }
        ],
        "code_context": "x14 = lbind(mapply, neighbors)"
      },
      "solvers.py:4280": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function multiply at 0x100a09c10>, (2, 2))"
          },
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function multiply at 0x100a09c10>, (2, 3))"
          }
        ],
        "code_context": "x18 = lbind(multiply, x17)"
      },
      "solvers.py:4282": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x100a12940>, frozenset(len=49))"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x100a12940>, frozenset(len=25))"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x100a12940>, frozenset(len=144))"
          }
        ],
        "code_context": "x20 = lbind(shift, x10)"
      }
    },
    "type_signatures": [
      "lbind(function, frozenset)",
      "lbind(function, function)",
      "lbind(function, tuple)"
    ],
    "value_signatures": [
      "lbind(<function multiply at 0x100a09c10>, (2, 2))",
      "lbind(<function shift at 0x100a12940>, frozenset(len=144))",
      "lbind(<function multiply at 0x100a09c10>, (2, 3))",
      "lbind(<function shift at 0x100a12940>, frozenset(len=49))",
      "lbind(<function shift at 0x100a12940>, frozenset(len=25))",
      "lbind(<function mapply at 0x100a09160>, <function neighbors at 0x100a09ca0>)"
    ]
  },
  "power": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4277": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function lbind.<locals>.<lambda> at 0x100ed3f70>, 2)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function lbind.<locals>.<lambda> at 0x100ed3f70>, 1)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function lbind.<locals>.<lambda> at 0x100eede50>, 2)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function lbind.<locals>.<lambda> at 0x100eede50>, 1)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function lbind.<locals>.<lambda> at 0x100eedf70>, 2)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function lbind.<locals>.<lambda> at 0x100eedf70>, 1)"
          }
        ],
        "code_context": "x15 = power(x14, TWO)"
      }
    },
    "type_signatures": [
      "power(function, int)"
    ],
    "value_signatures": [
      "power(<function lbind.<locals>.<lambda> at 0x100eede50>, 2)",
      "power(<function lbind.<locals>.<lambda> at 0x100ed3f70>, 1)",
      "power(<function lbind.<locals>.<lambda> at 0x100eedf70>, 1)",
      "power(<function lbind.<locals>.<lambda> at 0x100eede50>, 1)",
      "power(<function lbind.<locals>.<lambda> at 0x100ed3f70>, 2)",
      "power(<function lbind.<locals>.<lambda> at 0x100eedf70>, 2)"
    ]
  },
  "compose": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4277": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x100ed3f70>, <function lbind.<locals>.<lambda> at 0x100ed3f70>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x100eede50>, <function lbind.<locals>.<lambda> at 0x100eede50>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x100eedf70>, <function lbind.<locals>.<lambda> at 0x100eedf70>)"
          }
        ],
        "code_context": "x15 = power(x14, TWO)"
      }
    },
    "type_signatures": [
      "compose(function, function)"
    ],
    "value_signatures": [
      "compose(<function lbind.<locals>.<lambda> at 0x100ed3f70>, <function lbind.<locals>.<lambda> at 0x100ed3f70>)",
      "compose(<function lbind.<locals>.<lambda> at 0x100eede50>, <function lbind.<locals>.<lambda> at 0x100eede50>)",
      "compose(<function lbind.<locals>.<lambda> at 0x100eedf70>, <function lbind.<locals>.<lambda> at 0x100eedf70>)"
    ]
  },
  "mapply": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4278": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x100a09ca0>, frozenset(len=8))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x100a09ca0>, frozenset(len=25))"
          }
        ],
        "code_context": "x16 = x15(x13)"
      },
      "solvers.py:4283": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x100f03160>, frozenset(len=49))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x100f25160>, frozenset(len=49))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x100f10040>, frozenset(len=49))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x100f89040>, frozenset(len=49))"
          }
        ],
        "code_context": "x21 = mapply(x20, x19)"
      }
    },
    "type_signatures": [
      "mapply(function, frozenset)"
    ],
    "value_signatures": [
      "mapply(<function neighbors at 0x100a09ca0>, frozenset(len=8))",
      "mapply(<function neighbors at 0x100a09ca0>, frozenset(len=25))",
      "mapply(<function lbind.<locals>.<lambda> at 0x100f10040>, frozenset(len=49))",
      "mapply(<function lbind.<locals>.<lambda> at 0x100f03160>, frozenset(len=49))",
      "mapply(<function lbind.<locals>.<lambda> at 0x100f89040>, frozenset(len=49))",
      "mapply(<function lbind.<locals>.<lambda> at 0x100f25160>, frozenset(len=49))"
    ]
  },
  "apply": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4278": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x100a09ca0>, frozenset(len=8))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x100a09ca0>, frozenset(len=25))"
          }
        ],
        "code_context": "x16 = x15(x13)"
      },
      "solvers.py:4281": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100f030d0>, frozenset(len=49))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100f250d0>, frozenset(len=49))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100eedf70>, frozenset(len=49))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100eede50>, frozenset(len=49))"
          }
        ],
        "code_context": "x19 = apply(x18, x16)"
      },
      "solvers.py:4283": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100f03160>, frozenset(len=49))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100f25160>, frozenset(len=49))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100f10040>, frozenset(len=49))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100f89040>, frozenset(len=49))"
          }
        ],
        "code_context": "x21 = mapply(x20, x19)"
      }
    },
    "type_signatures": [
      "apply(function, frozenset)"
    ],
    "value_signatures": [
      "apply(<function neighbors at 0x100a09ca0>, frozenset(len=8))",
      "apply(<function neighbors at 0x100a09ca0>, frozenset(len=25))",
      "apply(<function lbind.<locals>.<lambda> at 0x100f250d0>, frozenset(len=49))",
      "apply(<function lbind.<locals>.<lambda> at 0x100f89040>, frozenset(len=49))",
      "apply(<function lbind.<locals>.<lambda> at 0x100f25160>, frozenset(len=49))",
      "apply(<function lbind.<locals>.<lambda> at 0x100eedf70>, frozenset(len=49))",
      "apply(<function lbind.<locals>.<lambda> at 0x100f03160>, frozenset(len=49))",
      "apply(<function lbind.<locals>.<lambda> at 0x100eede50>, frozenset(len=49))",
      "apply(<function lbind.<locals>.<lambda> at 0x100f10040>, frozenset(len=49))",
      "apply(<function lbind.<locals>.<lambda> at 0x100f030d0>, frozenset(len=49))"
    ]
  },
  "merge": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4278": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=8))"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=25))"
          }
        ],
        "code_context": "x16 = x15(x13)"
      },
      "solvers.py:4283": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=49))"
          }
        ],
        "code_context": "x21 = mapply(x20, x19)"
      }
    },
    "type_signatures": [
      "merge(frozenset)"
    ],
    "value_signatures": [
      "merge(frozenset(len=49))",
      "merge(frozenset(len=8))",
      "merge(frozenset(len=25))"
    ]
  },
  "astuple": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4279": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(2, 2)"
          },
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(2, 3)"
          }
        ],
        "code_context": "x17 = astuple(x11, x12)"
      }
    },
    "type_signatures": [
      "astuple(int, int)"
    ],
    "value_signatures": [
      "astuple(2, 3)",
      "astuple(2, 2)"
    ]
  },
  "multiply": {
    "calls": 196,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:4281": {
        "count": 98,
        "signatures": [
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (3, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (3, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (3, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-3, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-3, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (0, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (1, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (1, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (3, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (3, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-3, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (0, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (0, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (0, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (1, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-1, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-2, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-1, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-2, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (3, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-1, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-3, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (0, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-3, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-3, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (0, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (2, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (0, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (2, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 2), (-2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (3, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (3, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (3, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-3, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-3, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (0, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (1, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (1, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (3, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (3, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (3, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-3, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (0, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (0, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (0, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (1, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-1, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-2, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-1, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-2, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (3, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-1, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-3, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (0, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-3, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-3, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (0, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (2, -3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (0, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (2, 3))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((2, 3), (-2, 2))"
          }
        ],
        "code_context": "x19 = apply(x18, x16)"
      }
    },
    "type_signatures": [
      "multiply(tuple, tuple)"
    ],
    "value_signatures": [
      "multiply((2, 2), (-1, 3))",
      "multiply((2, 2), (-1, 0))",
      "multiply((2, 2), (3, 1))",
      "multiply((2, 2), (-3, 0))",
      "multiply((2, 2), (1, -3))",
      "multiply((2, 3), (0, -1))",
      "multiply((2, 2), (-2, 1))",
      "multiply((2, 3), (2, 3))",
      "multiply((2, 3), (-1, -3))",
      "multiply((2, 2), (-3, 3))",
      "multiply((2, 2), (3, 0))",
      "multiply((2, 2), (0, 0))",
      "multiply((2, 3), (-1, 1))",
      "multiply((2, 3), (1, 2))",
      "multiply((2, 2), (-1, -2))",
      "multiply((2, 2), (0, -3))",
      "multiply((2, 3), (-2, -1))",
      "multiply((2, 2), (2, 3))",
      "multiply((2, 2), (0, 2))",
      "multiply((2, 2), (-2, -2))",
      "multiply((2, 2), (1, -2))",
      "multiply((2, 3), (-3, -2))",
      "multiply((2, 2), (-2, 3))",
      "multiply((2, 3), (2, 2))",
      "multiply((2, 2), (-1, 2))",
      "multiply((2, 3), (0, 1))",
      "multiply((2, 3), (2, 1))",
      "multiply((2, 2), (3, -1))",
      "multiply((2, 2), (-3, 2))",
      "multiply((2, 3), (2, -1))",
      "multiply((2, 2), (-3, -3))",
      "multiply((2, 2), (0, 3))",
      "multiply((2, 2), (-1, -1))",
      "multiply((2, 3), (3, 0))",
      "multiply((2, 3), (3, 2))",
      "multiply((2, 3), (0, 2))",
      "multiply((2, 3), (1, -3))",
      "multiply((2, 2), (3, -3))",
      "multiply((2, 3), (3, -2))",
      "multiply((2, 2), (-3, -1))",
      "multiply((2, 2), (1, 2))",
      "multiply((2, 3), (-3, 3))",
      "multiply((2, 3), (-2, -2))",
      "multiply((2, 2), (-2, 0))",
      "multiply((2, 2), (2, 0))",
      "multiply((2, 3), (3, -1))",
      "multiply((2, 3), (-3, -3))",
      "multiply((2, 2), (0, 1))",
      "multiply((2, 3), (3, 3))",
      "multiply((2, 2), (-3, -2))",
      "multiply((2, 3), (-2, 0))",
      "multiply((2, 3), (-1, -1))",
      "multiply((2, 2), (-1, -3))",
      "multiply((2, 3), (1, -1))",
      "multiply((2, 2), (3, 3))",
      "multiply((2, 3), (3, -3))",
      "multiply((2, 3), (-2, 3))",
      "multiply((2, 2), (3, 2))",
      "multiply((2, 3), (1, 0))",
      "multiply((2, 3), (0, 0))",
      "multiply((2, 2), (1, 0))",
      "multiply((2, 2), (0, -2))",
      "multiply((2, 2), (-2, 2))",
      "multiply((2, 3), (1, -2))",
      "multiply((2, 3), (2, 0))",
      "multiply((2, 3), (-2, 2))",
      "multiply((2, 3), (-2, 1))",
      "multiply((2, 2), (-2, -1))",
      "multiply((2, 3), (-1, 2))",
      "multiply((2, 2), (-2, -3))",
      "multiply((2, 2), (3, -2))",
      "multiply((2, 2), (1, 3))",
      "multiply((2, 3), (-2, -3))",
      "multiply((2, 2), (2, 1))",
      "multiply((2, 2), (1, 1))",
      "multiply((2, 3), (2, -3))",
      "multiply((2, 3), (3, 1))",
      "multiply((2, 3), (-3, 0))",
      "multiply((2, 3), (0, -2))",
      "multiply((2, 3), (-1, -2))",
      "multiply((2, 3), (2, -2))",
      "multiply((2, 3), (-1, 0))",
      "multiply((2, 3), (1, 3))",
      "multiply((2, 3), (-3, -1))",
      "multiply((2, 2), (0, -1))",
      "multiply((2, 2), (2, -2))",
      "multiply((2, 2), (-1, 1))",
      "multiply((2, 3), (-1, 3))",
      "multiply((2, 3), (-3, 2))",
      "multiply((2, 2), (1, -1))",
      "multiply((2, 3), (-3, 1))",
      "multiply((2, 3), (1, 1))",
      "multiply((2, 3), (0, -3))",
      "multiply((2, 3), (0, 3))",
      "multiply((2, 2), (-3, 1))",
      "multiply((2, 2), (2, 2))",
      "multiply((2, 2), (2, -1))",
      "multiply((2, 2), (2, -3))"
    ]
  }
}