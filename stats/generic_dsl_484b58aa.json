{
  "height_t": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5136": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "height_t(tuple)",
            "value_signature": "height_t(tuple(len=29))"
          }
        ],
        "code_context": "x1 = height_t(I)"
      }
    },
    "type_signatures": [
      "height_t(tuple)"
    ],
    "value_signatures": [
      "height_t(tuple(len=29))"
    ]
  },
  "width_t": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5137": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "width_t(tuple)",
            "value_signature": "width_t(tuple(len=29))"
          }
        ],
        "code_context": "x2 = width_t(I)"
      }
    },
    "type_signatures": [
      "width_t(tuple)"
    ],
    "value_signatures": [
      "width_t(tuple(len=29))"
    ]
  },
  "partition": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5138": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "partition(tuple)",
            "value_signature": "partition(tuple(len=29))"
          }
        ],
        "code_context": "x3 = partition(I)"
      }
    },
    "type_signatures": [
      "partition(tuple)"
    ],
    "value_signatures": [
      "partition(tuple(len=29))"
    ]
  },
  "palette_t": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5138": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(tuple(len=29))"
          }
        ],
        "code_context": "x3 = partition(I)"
      }
    },
    "type_signatures": [
      "palette_t(tuple)"
    ],
    "value_signatures": [
      "palette_t(tuple(len=29))"
    ]
  },
  "colorfilter": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5139": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset(len=8), 0)"
          },
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset(len=7), 0)"
          },
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset(len=6), 0)"
          }
        ],
        "code_context": "x4 = colorfilter(x3, ZERO)"
      }
    },
    "type_signatures": [
      "colorfilter(frozenset, int)"
    ],
    "value_signatures": [
      "colorfilter(frozenset(len=8), 0)",
      "colorfilter(frozenset(len=7), 0)",
      "colorfilter(frozenset(len=6), 0)"
    ]
  },
  "difference": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5140": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "difference(frozenset, frozenset)",
            "value_signature": "difference(frozenset(len=8), frozenset({frozenset({(0, (21, 6)), (0, (1, 3)), ()"
          },
          {
            "type_signature": "difference(frozenset, frozenset)",
            "value_signature": "difference(frozenset(len=7), frozenset({frozenset({(0, (23, 14)), (0, (11, 25)))"
          },
          {
            "type_signature": "difference(frozenset, frozenset)",
            "value_signature": "difference(frozenset(len=6), frozenset({frozenset({(0, (21, 27)), (0, (25, 24)))"
          },
          {
            "type_signature": "difference(frozenset, frozenset)",
            "value_signature": "difference(frozenset(len=8), frozenset({frozenset({(0, (1, 9)), (0, (0, 7)), (0)"
          }
        ],
        "code_context": "x5 = difference(x3, x4)"
      }
    },
    "type_signatures": [
      "difference(frozenset, frozenset)"
    ],
    "value_signatures": [
      "difference(frozenset(len=7), frozenset({frozenset({(0, (23, 14)), (0, (11, 25)))",
      "difference(frozenset(len=8), frozenset({frozenset({(0, (1, 9)), (0, (0, 7)), (0)",
      "difference(frozenset(len=6), frozenset({frozenset({(0, (21, 27)), (0, (25, 24)))",
      "difference(frozenset(len=8), frozenset({frozenset({(0, (21, 6)), (0, (1, 3)), ()"
    ]
  },
  "merge": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5141": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=7))"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=6))"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(2, (1, 14)), (2, (2, 15)), )"
          }
        ],
        "code_context": "x6 = merge(x5)"
      },
      "solvers.py:5158": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=8))"
          }
        ],
        "code_context": "x23 = mapply(neighbors, x22)"
      },
      "solvers.py:5161": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=25))"
          }
        ],
        "code_context": "x26 = mapply(x25, x24)"
      }
    },
    "type_signatures": [
      "merge(frozenset)"
    ],
    "value_signatures": [
      "merge(frozenset({frozenset({(2, (1, 14)), (2, (2, 15)), )",
      "merge(frozenset(len=25))",
      "merge(frozenset(len=6))",
      "merge(frozenset(len=8))",
      "merge(frozenset(len=7))"
    ]
  },
  "astuple": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5142": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(29, 2)"
          }
        ],
        "code_context": "x7 = astuple(x1, TWO)"
      },
      "solvers.py:5143": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(2, 29)"
          }
        ],
        "code_context": "x8 = astuple(TWO, x2)"
      },
      "solvers.py:5155": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(7, 29)"
          },
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(6, 6)"
          },
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(29, 8)"
          },
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(9, 18)"
          }
        ],
        "code_context": "x20 = astuple(x18, x19)"
      }
    },
    "type_signatures": [
      "astuple(int, int)"
    ],
    "value_signatures": [
      "astuple(29, 2)",
      "astuple(6, 6)",
      "astuple(2, 29)",
      "astuple(7, 29)",
      "astuple(9, 18)",
      "astuple(29, 8)"
    ]
  },
  "power": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5144": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function decrement at 0x100a6a790>, 2)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function decrement at 0x100a6a790>, 1)"
          }
        ],
        "code_context": "x9 = power(decrement, TWO)"
      }
    },
    "type_signatures": [
      "power(function, int)"
    ],
    "value_signatures": [
      "power(<function decrement at 0x100a6a790>, 2)",
      "power(<function decrement at 0x100a6a790>, 1)"
    ]
  },
  "compose": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5144": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function decrement at 0x100a6a790>, <function decrement at 0x100a6a790>)"
          }
        ],
        "code_context": "x9 = power(decrement, TWO)"
      }
    },
    "type_signatures": [
      "compose(function, function)"
    ],
    "value_signatures": [
      "compose(<function decrement at 0x100a6a790>, <function decrement at 0x100a6a790>)"
    ]
  },
  "decrement": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5145": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "decrement(int)",
            "value_signature": "decrement(29)"
          },
          {
            "type_signature": "decrement(int)",
            "value_signature": "decrement(28)"
          }
        ],
        "code_context": "x10 = x9(x1)"
      },
      "solvers.py:5146": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "decrement(int)",
            "value_signature": "decrement(29)"
          },
          {
            "type_signature": "decrement(int)",
            "value_signature": "decrement(28)"
          }
        ],
        "code_context": "x11 = x9(x2)"
      }
    },
    "type_signatures": [
      "decrement(int)"
    ],
    "value_signatures": [
      "decrement(29)",
      "decrement(28)"
    ]
  },
  "toivec": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5147": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "toivec(int)",
            "value_signature": "toivec(27)"
          }
        ],
        "code_context": "x12 = toivec(x11)"
      }
    },
    "type_signatures": [
      "toivec(int)"
    ],
    "value_signatures": [
      "toivec(27)"
    ]
  },
  "tojvec": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5148": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "tojvec(int)",
            "value_signature": "tojvec(27)"
          }
        ],
        "code_context": "x13 = tojvec(x10)"
      }
    },
    "type_signatures": [
      "tojvec(int)"
    ],
    "value_signatures": [
      "tojvec(27)"
    ]
  },
  "crop": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5149": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=29), (27, 0), (2, 29))"
          }
        ],
        "code_context": "x14 = crop(I, x12, x8)"
      },
      "solvers.py:5150": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=29), (0, 27), (29, 2))"
          }
        ],
        "code_context": "x15 = crop(I, x13, x7)"
      }
    },
    "type_signatures": [
      "crop(tuple, tuple, tuple)"
    ],
    "value_signatures": [
      "crop(tuple(len=29), (27, 0), (2, 29))",
      "crop(tuple(len=29), (0, 27), (29, 2))"
    ]
  },
  "asobject": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5151": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(tuple(len=29))"
          }
        ],
        "code_context": "x16 = asobject(x15)"
      },
      "solvers.py:5152": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((5, 3, 2, 7, 1, 2, 3, 6, 2, 6, 2, 1, 2, 5, 2, 5, )"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((2, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 5, 2, 1, 2, 3, )"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, )"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((8, 1, 2, 6, 1, 2, 2, 1, 2, 3, 1, 2, 5, 1, 2, 9, )"
          }
        ],
        "code_context": "x17 = asobject(x14)"
      }
    },
    "type_signatures": [
      "asobject(tuple)"
    ],
    "value_signatures": [
      "asobject(((8, 1, 2, 6, 1, 2, 2, 1, 2, 3, 1, 2, 5, 1, 2, 9, )",
      "asobject(((2, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 5, 2, 1, 2, 3, )",
      "asobject(((2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, )",
      "asobject(tuple(len=29))",
      "asobject(((5, 3, 2, 7, 1, 2, 3, 6, 2, 6, 2, 1, 2, 5, 2, 5, )"
    ]
  },
  "vperiod": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5153": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "vperiod(frozenset)",
            "value_signature": "vperiod(frozenset(len=58))"
          }
        ],
        "code_context": "x18 = vperiod(x16)"
      }
    },
    "type_signatures": [
      "vperiod(frozenset)"
    ],
    "value_signatures": [
      "vperiod(frozenset(len=58))"
    ]
  },
  "normalize": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5153": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=58))"
          }
        ],
        "code_context": "x18 = vperiod(x16)"
      },
      "solvers.py:5154": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "normalize(frozenset)",
            "value_signature": "normalize(frozenset(len=58))"
          }
        ],
        "code_context": "x19 = hperiod(x17)"
      }
    },
    "type_signatures": [
      "normalize(frozenset)"
    ],
    "value_signatures": [
      "normalize(frozenset(len=58))"
    ]
  },
  "uppermost": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5153": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=58))"
          }
        ],
        "code_context": "x18 = vperiod(x16)"
      },
      "solvers.py:5154": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=58))"
          }
        ],
        "code_context": "x19 = hperiod(x17)"
      }
    },
    "type_signatures": [
      "uppermost(frozenset)"
    ],
    "value_signatures": [
      "uppermost(frozenset(len=58))"
    ]
  },
  "toindices": {
    "calls": 32,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5153": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=58))"
          }
        ],
        "code_context": "x18 = vperiod(x16)"
      },
      "solvers.py:5154": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=58))"
          }
        ],
        "code_context": "x19 = hperiod(x17)"
      }
    },
    "type_signatures": [
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset(len=58))"
    ]
  },
  "leftmost": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5153": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=58))"
          }
        ],
        "code_context": "x18 = vperiod(x16)"
      },
      "solvers.py:5154": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=58))"
          }
        ],
        "code_context": "x19 = hperiod(x17)"
      }
    },
    "type_signatures": [
      "leftmost(frozenset)"
    ],
    "value_signatures": [
      "leftmost(frozenset(len=58))"
    ]
  },
  "shift": {
    "calls": 218,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5153": {
        "count": 29,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-1, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-2, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-3, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-4, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-5, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-7, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-8, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-9, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-10, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-11, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-12, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-13, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-14, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-15, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-16, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-17, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-18, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-19, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-20, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-21, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-22, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-23, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-24, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-25, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-26, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-27, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (-28, 0))"
          }
        ],
        "code_context": "x18 = vperiod(x16)"
      },
      "solvers.py:5154": {
        "count": 29,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -10))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -11))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -12))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -13))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -14))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -15))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -16))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -17))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -18))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -19))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -20))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -21))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -22))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -23))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -24))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -25))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -26))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -27))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=58), (0, -28))"
          }
        ],
        "code_context": "x19 = hperiod(x17)"
      },
      "solvers.py:5161": {
        "count": 100,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (7, -29))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (7, 29))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (-14, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (-14, 58))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (-14, -58))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (0, -29))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (0, 29))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (14, -58))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (14, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (-7, -29))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (14, 58))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (-7, 29))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (7, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (-14, -29))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (7, 58))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (-14, 29))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (7, -58))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (0, 58))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (0, -58))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (14, -29))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (14, 29))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (-7, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (-7, 58))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=769), (-7, -58))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (6, 12))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (-12, -12))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (12, -12))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (-12, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (-12, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (12, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (12, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (-6, -12))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (-12, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (-12, 12))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (12, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (-6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (12, 12))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (-6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (-6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (-6, 12))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (0, -12))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (0, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (6, -12))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (0, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (0, 12))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (6, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=782), (6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (-29, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (0, -16))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (-58, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (58, 16))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (29, -8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (0, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (-29, -16))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (29, 16))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (-58, -16))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (58, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (-29, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (0, -8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (-58, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (0, 16))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (29, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (58, -16))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (-29, -8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (58, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (-58, -8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (-29, 16))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (29, -16))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (-58, 16))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (58, -8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=735), (29, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (0, 36))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (-9, 36))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (-18, 36))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (18, -36))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (18, -18))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (9, -36))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (18, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (0, -36))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (-9, -36))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (18, 18))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (-18, -36))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (9, -18))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (0, -18))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (-9, -18))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (9, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (18, 36))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (-18, -18))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (-9, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (-18, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (9, 18))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (-9, 18))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (0, 18))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (-18, 18))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=778), (9, 36))"
          }
        ],
        "code_context": "x26 = mapply(x25, x24)"
      }
    },
    "type_signatures": [
      "shift(frozenset, tuple)"
    ],
    "value_signatures": [
      "shift(frozenset(len=782), (12, 12))",
      "shift(frozenset(len=58), (-26, 0))",
      "shift(frozenset(len=782), (0, 6))",
      "shift(frozenset(len=782), (0, -6))",
      "shift(frozenset(len=769), (7, -29))",
      "shift(frozenset(len=735), (58, -8))",
      "shift(frozenset(len=58), (-1, 0))",
      "shift(frozenset(len=58), (-24, 0))",
      "shift(frozenset(len=735), (-58, 8))",
      "shift(frozenset(len=769), (-7, 0))",
      "shift(frozenset(len=782), (12, 0))",
      "shift(frozenset(len=735), (0, 0))",
      "shift(frozenset(len=58), (-12, 0))",
      "shift(frozenset(len=58), (0, -4))",
      "shift(frozenset(len=58), (-19, 0))",
      "shift(frozenset(len=58), (0, -25))",
      "shift(frozenset(len=778), (-18, -36))",
      "shift(frozenset(len=769), (-14, 58))",
      "shift(frozenset(len=735), (58, 0))",
      "shift(frozenset(len=769), (-14, -58))",
      "shift(frozenset(len=58), (0, -12))",
      "shift(frozenset(len=735), (-58, 16))",
      "shift(frozenset(len=58), (-14, 0))",
      "shift(frozenset(len=778), (18, -36))",
      "shift(frozenset(len=778), (18, 36))",
      "shift(frozenset(len=735), (0, -8))",
      "shift(frozenset(len=778), (9, -36))",
      "shift(frozenset(len=58), (0, -14))",
      "shift(frozenset(len=735), (29, -8))",
      "shift(frozenset(len=782), (-12, 0))",
      "shift(frozenset(len=735), (29, 8))",
      "shift(frozenset(len=58), (-9, 0))",
      "shift(frozenset(len=735), (58, 16))",
      "shift(frozenset(len=58), (0, -6))",
      "shift(frozenset(len=778), (-9, 36))",
      "shift(frozenset(len=782), (6, 0))",
      "shift(frozenset(len=58), (-16, 0))",
      "shift(frozenset(len=58), (-22, 0))",
      "shift(frozenset(len=769), (7, 29))",
      "shift(frozenset(len=58), (-20, 0))",
      "shift(frozenset(len=782), (-12, 6))",
      "shift(frozenset(len=769), (14, -29))",
      "shift(frozenset(len=778), (-9, 0))",
      "shift(frozenset(len=58), (-11, 0))",
      "shift(frozenset(len=58), (0, -11))",
      "shift(frozenset(len=769), (7, -58))",
      "shift(frozenset(len=735), (-29, 8))",
      "shift(frozenset(len=58), (0, -21))",
      "shift(frozenset(len=782), (-6, 12))",
      "shift(frozenset(len=735), (29, 0))",
      "shift(frozenset(len=58), (-23, 0))",
      "shift(frozenset(len=778), (18, -18))",
      "shift(frozenset(len=58), (0, -24))",
      "shift(frozenset(len=735), (-58, 0))",
      "shift(frozenset(len=58), (-27, 0))",
      "shift(frozenset(len=782), (-12, 12))",
      "shift(frozenset(len=778), (-18, -18))",
      "shift(frozenset(len=782), (6, -6))",
      "shift(frozenset(len=778), (0, -36))",
      "shift(frozenset(len=735), (-29, 16))",
      "shift(frozenset(len=769), (14, 29))",
      "shift(frozenset(len=769), (0, -58))",
      "shift(frozenset(len=782), (-12, -6))",
      "shift(frozenset(len=782), (0, 0))",
      "shift(frozenset(len=735), (-58, -8))",
      "shift(frozenset(len=778), (9, 18))",
      "shift(frozenset(len=778), (-9, -18))",
      "shift(frozenset(len=58), (0, -15))",
      "shift(frozenset(len=778), (-18, 18))",
      "shift(frozenset(len=735), (0, 8))",
      "shift(frozenset(len=778), (18, 0))",
      "shift(frozenset(len=769), (7, 58))",
      "shift(frozenset(len=782), (-6, 6))",
      "shift(frozenset(len=735), (-29, -16))",
      "shift(frozenset(len=58), (-25, 0))",
      "shift(frozenset(len=58), (-10, 0))",
      "shift(frozenset(len=778), (-18, 36))",
      "shift(frozenset(len=735), (-29, -8))",
      "shift(frozenset(len=778), (18, 18))",
      "shift(frozenset(len=782), (-6, 0))",
      "shift(frozenset(len=58), (0, 0))",
      "shift(frozenset(len=782), (6, -12))",
      "shift(frozenset(len=735), (58, -16))",
      "shift(frozenset(len=782), (12, -6))",
      "shift(frozenset(len=735), (29, -16))",
      "shift(frozenset(len=58), (0, -10))",
      "shift(frozenset(len=735), (58, 8))",
      "shift(frozenset(len=782), (0, -12))",
      "shift(frozenset(len=58), (-2, 0))",
      "shift(frozenset(len=58), (0, -28))",
      "shift(frozenset(len=58), (0, -20))",
      "shift(frozenset(len=58), (0, -16))",
      "shift(frozenset(len=782), (6, 12))",
      "shift(frozenset(len=782), (-6, -6))",
      "shift(frozenset(len=735), (-58, -16))",
      "shift(frozenset(len=769), (0, 0))",
      "shift(frozenset(len=778), (0, 18))",
      "shift(frozenset(len=58), (-18, 0))",
      "shift(frozenset(len=769), (-7, 58))",
      "shift(frozenset(len=735), (-29, 0))",
      "shift(frozenset(len=58), (0, -17))",
      "shift(frozenset(len=735), (0, 16))",
      "shift(frozenset(len=769), (-7, -58))",
      "shift(frozenset(len=769), (0, 58))",
      "shift(frozenset(len=58), (0, -26))",
      "shift(frozenset(len=778), (0, 36))",
      "shift(frozenset(len=782), (-12, -12))",
      "shift(frozenset(len=58), (0, -9))",
      "shift(frozenset(len=778), (-9, -36))",
      "shift(frozenset(len=778), (9, -18))",
      "shift(frozenset(len=778), (9, 0))",
      "shift(frozenset(len=58), (-8, 0))",
      "shift(frozenset(len=782), (-6, -12))",
      "shift(frozenset(len=58), (0, -22))",
      "shift(frozenset(len=782), (6, 6))",
      "shift(frozenset(len=58), (0, -8))",
      "shift(frozenset(len=58), (-5, 0))",
      "shift(frozenset(len=769), (14, 0))",
      "shift(frozenset(len=58), (0, -13))",
      "shift(frozenset(len=58), (-21, 0))",
      "shift(frozenset(len=782), (0, 12))",
      "shift(frozenset(len=769), (14, -58))",
      "shift(frozenset(len=769), (0, 29))",
      "shift(frozenset(len=769), (-7, 29))",
      "shift(frozenset(len=778), (-18, 0))",
      "shift(frozenset(len=58), (-4, 0))",
      "shift(frozenset(len=58), (-7, 0))",
      "shift(frozenset(len=58), (0, -2))",
      "shift(frozenset(len=58), (0, -7))",
      "shift(frozenset(len=778), (-9, 18))",
      "shift(frozenset(len=735), (29, 16))",
      "shift(frozenset(len=58), (0, -19))",
      "shift(frozenset(len=58), (0, -3))",
      "shift(frozenset(len=769), (7, 0))",
      "shift(frozenset(len=778), (0, -18))",
      "shift(frozenset(len=58), (-15, 0))",
      "shift(frozenset(len=58), (-6, 0))",
      "shift(frozenset(len=769), (-14, -29))",
      "shift(frozenset(len=778), (9, 36))",
      "shift(frozenset(len=58), (-17, 0))",
      "shift(frozenset(len=735), (0, -16))",
      "shift(frozenset(len=58), (-13, 0))",
      "shift(frozenset(len=58), (-3, 0))",
      "shift(frozenset(len=58), (0, -23))",
      "shift(frozenset(len=58), (0, -1))",
      "shift(frozenset(len=769), (-14, 29))",
      "shift(frozenset(len=782), (12, -12))",
      "shift(frozenset(len=58), (0, -5))",
      "shift(frozenset(len=782), (12, 6))",
      "shift(frozenset(len=778), (0, 0))",
      "shift(frozenset(len=769), (-14, 0))",
      "shift(frozenset(len=769), (14, 58))",
      "shift(frozenset(len=769), (-7, -29))",
      "shift(frozenset(len=58), (0, -18))",
      "shift(frozenset(len=58), (0, -27))",
      "shift(frozenset(len=769), (0, -29))",
      "shift(frozenset(len=58), (-28, 0))"
    ]
  },
  "height_f": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5153": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset(len=58))"
          }
        ],
        "code_context": "x18 = vperiod(x16)"
      }
    },
    "type_signatures": [
      "height_f(frozenset)"
    ],
    "value_signatures": [
      "height_f(frozenset(len=58))"
    ]
  },
  "lowermost": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5153": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset(len=58))"
          }
        ],
        "code_context": "x18 = vperiod(x16)"
      }
    },
    "type_signatures": [
      "lowermost(frozenset)"
    ],
    "value_signatures": [
      "lowermost(frozenset(len=58))"
    ]
  },
  "hperiod": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5154": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "hperiod(frozenset)",
            "value_signature": "hperiod(frozenset(len=58))"
          }
        ],
        "code_context": "x19 = hperiod(x17)"
      }
    },
    "type_signatures": [
      "hperiod(frozenset)"
    ],
    "value_signatures": [
      "hperiod(frozenset(len=58))"
    ]
  },
  "width_f": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5154": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=58))"
          }
        ],
        "code_context": "x19 = hperiod(x17)"
      }
    },
    "type_signatures": [
      "width_f(frozenset)"
    ],
    "value_signatures": [
      "width_f(frozenset(len=58))"
    ]
  },
  "rightmost": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5154": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=58))"
          }
        ],
        "code_context": "x19 = hperiod(x17)"
      }
    },
    "type_signatures": [
      "rightmost(frozenset)"
    ],
    "value_signatures": [
      "rightmost(frozenset(len=58))"
    ]
  },
  "lbind": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5156": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function multiply at 0x100a72c10>, (7, 29))"
          },
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function multiply at 0x100a72c10>, (6, 6))"
          },
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function multiply at 0x100a72c10>, (29, 8))"
          },
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function multiply at 0x100a72c10>, (9, 18))"
          }
        ],
        "code_context": "x21 = lbind(multiply, x20)"
      },
      "solvers.py:5160": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x100aef940>, frozenset(len=769))"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x100aef940>, frozenset(len=782))"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x100aef940>, frozenset(len=735))"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x100aef940>, frozenset(len=778))"
          }
        ],
        "code_context": "x25 = lbind(shift, x6)"
      }
    },
    "type_signatures": [
      "lbind(function, tuple)",
      "lbind(function, frozenset)"
    ],
    "value_signatures": [
      "lbind(<function multiply at 0x100a72c10>, (7, 29))",
      "lbind(<function shift at 0x100aef940>, frozenset(len=782))",
      "lbind(<function multiply at 0x100a72c10>, (9, 18))",
      "lbind(<function multiply at 0x100a72c10>, (6, 6))",
      "lbind(<function shift at 0x100aef940>, frozenset(len=735))",
      "lbind(<function shift at 0x100aef940>, frozenset(len=769))",
      "lbind(<function multiply at 0x100a72c10>, (29, 8))",
      "lbind(<function shift at 0x100aef940>, frozenset(len=778))"
    ]
  },
  "neighbors": {
    "calls": 36,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5157": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, 0))"
          }
        ],
        "code_context": "x22 = neighbors(ORIGIN)"
      },
      "solvers.py:5158": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-1, -1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-1, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, 1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, -1))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((-1, 0))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((1, 0))"
          },
          {
            "type_signature": "neighbors(tuple)",
            "value_signature": "neighbors((0, -1))"
          }
        ],
        "code_context": "x23 = mapply(neighbors, x22)"
      }
    },
    "type_signatures": [
      "neighbors(tuple)"
    ],
    "value_signatures": [
      "neighbors((-1, 0))",
      "neighbors((1, -1))",
      "neighbors((-1, 1))",
      "neighbors((0, 0))",
      "neighbors((1, 1))",
      "neighbors((0, 1))",
      "neighbors((-1, -1))",
      "neighbors((1, 0))",
      "neighbors((0, -1))"
    ]
  },
  "dneighbors": {
    "calls": 36,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5157": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 0))"
          }
        ],
        "code_context": "x22 = neighbors(ORIGIN)"
      },
      "solvers.py:5158": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-1, -1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, -1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((-1, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, -1))"
          }
        ],
        "code_context": "x23 = mapply(neighbors, x22)"
      }
    },
    "type_signatures": [
      "dneighbors(tuple)"
    ],
    "value_signatures": [
      "dneighbors((-1, 0))",
      "dneighbors((1, -1))",
      "dneighbors((1, 0))",
      "dneighbors((-1, -1))",
      "dneighbors((0, 1))",
      "dneighbors((-1, 1))",
      "dneighbors((0, 0))",
      "dneighbors((0, -1))",
      "dneighbors((1, 1))"
    ]
  },
  "ineighbors": {
    "calls": 36,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5157": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 0))"
          }
        ],
        "code_context": "x22 = neighbors(ORIGIN)"
      },
      "solvers.py:5158": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-1, -1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-1, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, -1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((-1, 0))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((1, 0))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, -1))"
          }
        ],
        "code_context": "x23 = mapply(neighbors, x22)"
      }
    },
    "type_signatures": [
      "ineighbors(tuple)"
    ],
    "value_signatures": [
      "ineighbors((0, 0))",
      "ineighbors((1, 0))",
      "ineighbors((0, -1))",
      "ineighbors((1, 1))",
      "ineighbors((-1, -1))",
      "ineighbors((1, -1))",
      "ineighbors((0, 1))",
      "ineighbors((-1, 0))",
      "ineighbors((-1, 1))"
    ]
  },
  "mapply": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5158": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function neighbors at 0x100a72ca0>, frozenset(len=8))"
          }
        ],
        "code_context": "x23 = mapply(neighbors, x22)"
      },
      "solvers.py:5161": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x100bc51f0>, frozenset(len=25))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x100bc5280>, frozenset(len=25))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x100bc50d0>, frozenset(len=25))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x100bc5310>, frozenset(len=25))"
          }
        ],
        "code_context": "x26 = mapply(x25, x24)"
      }
    },
    "type_signatures": [
      "mapply(function, frozenset)"
    ],
    "value_signatures": [
      "mapply(<function lbind.<locals>.<lambda> at 0x100bc50d0>, frozenset(len=25))",
      "mapply(<function lbind.<locals>.<lambda> at 0x100bc5280>, frozenset(len=25))",
      "mapply(<function neighbors at 0x100a72ca0>, frozenset(len=8))",
      "mapply(<function lbind.<locals>.<lambda> at 0x100bc5310>, frozenset(len=25))",
      "mapply(<function lbind.<locals>.<lambda> at 0x100bc51f0>, frozenset(len=25))"
    ]
  },
  "apply": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5158": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function neighbors at 0x100a72ca0>, frozenset(len=8))"
          }
        ],
        "code_context": "x23 = mapply(neighbors, x22)"
      },
      "solvers.py:5159": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100bc5160>, frozenset(len=25))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100bc5280>, frozenset(len=25))"
          }
        ],
        "code_context": "x24 = apply(x21, x23)"
      },
      "solvers.py:5161": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100bc51f0>, frozenset(len=25))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100bc5280>, frozenset(len=25))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100bc50d0>, frozenset(len=25))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x100bc5310>, frozenset(len=25))"
          }
        ],
        "code_context": "x26 = mapply(x25, x24)"
      }
    },
    "type_signatures": [
      "apply(function, frozenset)"
    ],
    "value_signatures": [
      "apply(<function lbind.<locals>.<lambda> at 0x100bc5310>, frozenset(len=25))",
      "apply(<function lbind.<locals>.<lambda> at 0x100bc5160>, frozenset(len=25))",
      "apply(<function lbind.<locals>.<lambda> at 0x100bc5280>, frozenset(len=25))",
      "apply(<function lbind.<locals>.<lambda> at 0x100bc50d0>, frozenset(len=25))",
      "apply(<function neighbors at 0x100a72ca0>, frozenset(len=8))",
      "apply(<function lbind.<locals>.<lambda> at 0x100bc51f0>, frozenset(len=25))"
    ]
  },
  "multiply": {
    "calls": 100,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5159": {
        "count": 100,
        "signatures": [
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (0, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (-1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (-2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (-1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (-2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (-1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (-2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (0, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (0, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (0, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (1, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (-2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (-1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (-2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (0, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((7, 29), (-1, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (0, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (-1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (-2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (-1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (-2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (-1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (-2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (0, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (0, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (0, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (1, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (-2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (-1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (-2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (0, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((6, 6), (-1, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (0, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (-1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (-2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (-1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (-2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (-1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (-2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (0, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (0, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (0, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (1, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (-2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (-1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (-2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (0, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((29, 8), (-1, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (0, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (-1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (-2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (-1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (-2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (-1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (-2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (0, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (0, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (0, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (2, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (2, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (1, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (2, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (-2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (-1, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (-2, 2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (0, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (2, 0))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (1, -2))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((9, 18), (-1, 2))"
          }
        ],
        "code_context": "x24 = apply(x21, x23)"
      }
    },
    "type_signatures": [
      "multiply(tuple, tuple)"
    ],
    "value_signatures": [
      "multiply((7, 29), (0, 0))",
      "multiply((7, 29), (1, 0))",
      "multiply((7, 29), (0, 2))",
      "multiply((9, 18), (2, 1))",
      "multiply((7, 29), (-1, -1))",
      "multiply((7, 29), (2, 0))",
      "multiply((29, 8), (-1, 2))",
      "multiply((9, 18), (2, 0))",
      "multiply((7, 29), (-2, 2))",
      "multiply((6, 6), (0, 2))",
      "multiply((6, 6), (-2, 0))",
      "multiply((6, 6), (2, -1))",
      "multiply((6, 6), (0, 1))",
      "multiply((9, 18), (2, -1))",
      "multiply((29, 8), (0, 1))",
      "multiply((7, 29), (-2, -1))",
      "multiply((9, 18), (-1, 1))",
      "multiply((9, 18), (1, 2))",
      "multiply((7, 29), (2, 2))",
      "multiply((29, 8), (-1, -1))",
      "multiply((9, 18), (-2, 2))",
      "multiply((29, 8), (-1, -2))",
      "multiply((9, 18), (-2, -1))",
      "multiply((6, 6), (-1, -2))",
      "multiply((9, 18), (0, -2))",
      "multiply((7, 29), (2, -2))",
      "multiply((9, 18), (2, -2))",
      "multiply((6, 6), (1, -2))",
      "multiply((6, 6), (1, 1))",
      "multiply((7, 29), (2, -1))",
      "multiply((29, 8), (2, -1))",
      "multiply((29, 8), (0, 2))",
      "multiply((9, 18), (1, -1))",
      "multiply((6, 6), (1, -1))",
      "multiply((9, 18), (0, -1))",
      "multiply((29, 8), (2, -2))",
      "multiply((7, 29), (-2, -2))",
      "multiply((6, 6), (-1, -1))",
      "multiply((7, 29), (-1, 0))",
      "multiply((7, 29), (1, -1))",
      "multiply((9, 18), (-1, 0))",
      "multiply((7, 29), (-2, 0))",
      "multiply((7, 29), (-1, 1))",
      "multiply((29, 8), (0, -2))",
      "multiply((6, 6), (-1, 0))",
      "multiply((6, 6), (-2, 1))",
      "multiply((7, 29), (2, 1))",
      "multiply((6, 6), (0, -1))",
      "multiply((9, 18), (-1, 2))",
      "multiply((6, 6), (-1, 2))",
      "multiply((29, 8), (-2, -1))",
      "multiply((7, 29), (-1, -2))",
      "multiply((29, 8), (-2, 0))",
      "multiply((9, 18), (-2, 0))",
      "multiply((29, 8), (2, 1))",
      "multiply((29, 8), (1, 1))",
      "multiply((7, 29), (0, 1))",
      "multiply((6, 6), (1, 0))",
      "multiply((6, 6), (2, 2))",
      "multiply((6, 6), (2, -2))",
      "multiply((9, 18), (1, -2))",
      "multiply((29, 8), (-1, 1))",
      "multiply((6, 6), (-2, 2))",
      "multiply((29, 8), (2, 0))",
      "multiply((6, 6), (1, 2))",
      "multiply((29, 8), (1, 0))",
      "multiply((29, 8), (1, -1))",
      "multiply((9, 18), (-2, 1))",
      "multiply((7, 29), (-1, 2))",
      "multiply((7, 29), (-2, 1))",
      "multiply((6, 6), (2, 0))",
      "multiply((9, 18), (-1, -2))",
      "multiply((29, 8), (-2, -2))",
      "multiply((29, 8), (-1, 0))",
      "multiply((9, 18), (-2, -2))",
      "multiply((6, 6), (2, 1))",
      "multiply((7, 29), (1, 1))",
      "multiply((6, 6), (0, 0))",
      "multiply((29, 8), (-2, 2))",
      "multiply((6, 6), (-2, -2))",
      "multiply((29, 8), (1, -2))",
      "multiply((7, 29), (0, -1))",
      "multiply((29, 8), (2, 2))",
      "multiply((7, 29), (1, -2))",
      "multiply((9, 18), (1, 0))",
      "multiply((6, 6), (0, -2))",
      "multiply((29, 8), (1, 2))",
      "multiply((9, 18), (0, 1))",
      "multiply((9, 18), (2, 2))",
      "multiply((29, 8), (0, 0))",
      "multiply((7, 29), (1, 2))",
      "multiply((29, 8), (-2, 1))",
      "multiply((6, 6), (-2, -1))",
      "multiply((6, 6), (-1, 1))",
      "multiply((29, 8), (0, -1))",
      "multiply((9, 18), (1, 1))",
      "multiply((9, 18), (0, 0))",
      "multiply((7, 29), (0, -2))",
      "multiply((9, 18), (-1, -1))",
      "multiply((9, 18), (0, 2))"
    ]
  },
  "paint": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:5162": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=29), frozenset(len=8185))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=29), frozenset(len=2804))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=29), frozenset(len=8500))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=29), frozenset(len=6420))"
          }
        ],
        "code_context": "O = paint(I, x26)"
      }
    },
    "type_signatures": [
      "paint(tuple, frozenset)"
    ],
    "value_signatures": [
      "paint(tuple(len=29), frozenset(len=8500))",
      "paint(tuple(len=29), frozenset(len=2804))",
      "paint(tuple(len=29), frozenset(len=6420))",
      "paint(tuple(len=29), frozenset(len=8185))"
    ]
  }
}