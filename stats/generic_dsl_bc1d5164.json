{
  "leastcolor_t": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2949": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(((4, 0, 0, 0, 0, 0, 4), (0, 0, 0, 0, 0, 0, 0), (0,)"
          },
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(((2, 2, 0, 0, 0, 2, 2), (0, 0, 0, 0, 0, 0, 2), (0,)"
          },
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(((4, 4, 0, 0, 0, 4, 0), (0, 0, 0, 0, 0, 4, 4), (0,)"
          },
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(((0, 3, 0, 0, 0, 3, 0), (3, 0, 0, 0, 0, 0, 3), (0,)"
          },
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(((0, 8, 0, 0, 0, 8, 0), (8, 8, 0, 0, 0, 8, 8), (0,)"
          },
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(((0, 0, 0, 0, 0, 1, 1), (1, 0, 0, 0, 0, 0, 0), (0,)"
          }
        ],
        "code_context": "x1 = leastcolor_t(I)"
      }
    },
    "type_signatures": [
      "leastcolor_t(tuple)"
    ],
    "value_signatures": [
      "leastcolor_t(((2, 2, 0, 0, 0, 2, 2), (0, 0, 0, 0, 0, 0, 2), (0,)",
      "leastcolor_t(((0, 3, 0, 0, 0, 3, 0), (3, 0, 0, 0, 0, 0, 3), (0,)",
      "leastcolor_t(((4, 0, 0, 0, 0, 0, 4), (0, 0, 0, 0, 0, 0, 0), (0,)",
      "leastcolor_t(((0, 8, 0, 0, 0, 8, 0), (8, 8, 0, 0, 0, 8, 8), (0,)",
      "leastcolor_t(((4, 4, 0, 0, 0, 4, 0), (0, 0, 0, 0, 0, 4, 4), (0,)",
      "leastcolor_t(((0, 0, 0, 0, 0, 1, 1), (1, 0, 0, 0, 0, 0, 0), (0,)"
    ]
  },
  "crop": {
    "calls": 24,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2950": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((4, 0, 0, 0, 0, 0, 4), (0, 0, 0, 0, 0, 0, 0), (0,, (0, 0), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((2, 2, 0, 0, 0, 2, 2), (0, 0, 0, 0, 0, 0, 2), (0,, (0, 0), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((4, 4, 0, 0, 0, 4, 0), (0, 0, 0, 0, 0, 4, 4), (0,, (0, 0), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 3, 0, 0, 0, 3, 0), (3, 0, 0, 0, 0, 0, 3), (0,, (0, 0), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 8, 0, 0, 0, 8, 0), (8, 8, 0, 0, 0, 8, 8), (0,, (0, 0), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 0, 0, 0, 0, 1, 1), (1, 0, 0, 0, 0, 0, 0), (0,, (0, 0), (3, 3))"
          }
        ],
        "code_context": "x2 = crop(I, ORIGIN, THREE_BY_THREE)"
      },
      "solvers.py:2951": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((4, 0, 0, 0, 0, 0, 4), (0, 0, 0, 0, 0, 0, 0), (0,, (2, 0), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((2, 2, 0, 0, 0, 2, 2), (0, 0, 0, 0, 0, 0, 2), (0,, (2, 0), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((4, 4, 0, 0, 0, 4, 0), (0, 0, 0, 0, 0, 4, 4), (0,, (2, 0), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 3, 0, 0, 0, 3, 0), (3, 0, 0, 0, 0, 0, 3), (0,, (2, 0), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 8, 0, 0, 0, 8, 0), (8, 8, 0, 0, 0, 8, 8), (0,, (2, 0), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 0, 0, 0, 0, 1, 1), (1, 0, 0, 0, 0, 0, 0), (0,, (2, 0), (3, 3))"
          }
        ],
        "code_context": "x3 = crop(I, TWO_BY_ZERO, THREE_BY_THREE)"
      },
      "solvers.py:2953": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((4, 0, 0, 0, 0, 0, 4), (0, 0, 0, 0, 0, 0, 0), (0,, (0, 4), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((2, 2, 0, 0, 0, 2, 2), (0, 0, 0, 0, 0, 0, 2), (0,, (0, 4), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((4, 4, 0, 0, 0, 4, 0), (0, 0, 0, 0, 0, 4, 4), (0,, (0, 4), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 3, 0, 0, 0, 3, 0), (3, 0, 0, 0, 0, 0, 3), (0,, (0, 4), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 8, 0, 0, 0, 8, 0), (8, 8, 0, 0, 0, 8, 8), (0,, (0, 4), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 0, 0, 0, 0, 1, 1), (1, 0, 0, 0, 0, 0, 0), (0,, (0, 4), (3, 3))"
          }
        ],
        "code_context": "x5 = crop(I, x4, THREE_BY_THREE)"
      },
      "solvers.py:2955": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((4, 0, 0, 0, 0, 0, 4), (0, 0, 0, 0, 0, 0, 0), (0,, (2, 4), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((2, 2, 0, 0, 0, 2, 2), (0, 0, 0, 0, 0, 0, 2), (0,, (2, 4), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((4, 4, 0, 0, 0, 4, 0), (0, 0, 0, 0, 0, 4, 4), (0,, (2, 4), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 3, 0, 0, 0, 3, 0), (3, 0, 0, 0, 0, 0, 3), (0,, (2, 4), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 8, 0, 0, 0, 8, 0), (8, 8, 0, 0, 0, 8, 8), (0,, (2, 4), (3, 3))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(((0, 0, 0, 0, 0, 1, 1), (1, 0, 0, 0, 0, 0, 0), (0,, (2, 4), (3, 3))"
          }
        ],
        "code_context": "x7 = crop(I, x6, THREE_BY_THREE)"
      }
    },
    "type_signatures": [
      "crop(tuple, tuple, tuple)"
    ],
    "value_signatures": [
      "crop(((0, 3, 0, 0, 0, 3, 0), (3, 0, 0, 0, 0, 0, 3), (0,, (0, 4), (3, 3))",
      "crop(((4, 4, 0, 0, 0, 4, 0), (0, 0, 0, 0, 0, 4, 4), (0,, (2, 4), (3, 3))",
      "crop(((4, 0, 0, 0, 0, 0, 4), (0, 0, 0, 0, 0, 0, 0), (0,, (0, 4), (3, 3))",
      "crop(((2, 2, 0, 0, 0, 2, 2), (0, 0, 0, 0, 0, 0, 2), (0,, (0, 0), (3, 3))",
      "crop(((2, 2, 0, 0, 0, 2, 2), (0, 0, 0, 0, 0, 0, 2), (0,, (2, 0), (3, 3))",
      "crop(((0, 8, 0, 0, 0, 8, 0), (8, 8, 0, 0, 0, 8, 8), (0,, (0, 0), (3, 3))",
      "crop(((0, 8, 0, 0, 0, 8, 0), (8, 8, 0, 0, 0, 8, 8), (0,, (0, 4), (3, 3))",
      "crop(((4, 0, 0, 0, 0, 0, 4), (0, 0, 0, 0, 0, 0, 0), (0,, (0, 0), (3, 3))",
      "crop(((4, 4, 0, 0, 0, 4, 0), (0, 0, 0, 0, 0, 4, 4), (0,, (0, 4), (3, 3))",
      "crop(((4, 4, 0, 0, 0, 4, 0), (0, 0, 0, 0, 0, 4, 4), (0,, (2, 0), (3, 3))",
      "crop(((4, 0, 0, 0, 0, 0, 4), (0, 0, 0, 0, 0, 0, 0), (0,, (2, 4), (3, 3))",
      "crop(((2, 2, 0, 0, 0, 2, 2), (0, 0, 0, 0, 0, 0, 2), (0,, (0, 4), (3, 3))",
      "crop(((0, 8, 0, 0, 0, 8, 0), (8, 8, 0, 0, 0, 8, 8), (0,, (2, 4), (3, 3))",
      "crop(((0, 0, 0, 0, 0, 1, 1), (1, 0, 0, 0, 0, 0, 0), (0,, (0, 0), (3, 3))",
      "crop(((0, 3, 0, 0, 0, 3, 0), (3, 0, 0, 0, 0, 0, 3), (0,, (0, 0), (3, 3))",
      "crop(((0, 3, 0, 0, 0, 3, 0), (3, 0, 0, 0, 0, 0, 3), (0,, (2, 4), (3, 3))",
      "crop(((4, 4, 0, 0, 0, 4, 0), (0, 0, 0, 0, 0, 4, 4), (0,, (0, 0), (3, 3))",
      "crop(((4, 0, 0, 0, 0, 0, 4), (0, 0, 0, 0, 0, 0, 0), (0,, (2, 0), (3, 3))",
      "crop(((0, 3, 0, 0, 0, 3, 0), (3, 0, 0, 0, 0, 0, 3), (0,, (2, 0), (3, 3))",
      "crop(((0, 8, 0, 0, 0, 8, 0), (8, 8, 0, 0, 0, 8, 8), (0,, (2, 0), (3, 3))",
      "crop(((2, 2, 0, 0, 0, 2, 2), (0, 0, 0, 0, 0, 0, 2), (0,, (2, 4), (3, 3))",
      "crop(((0, 0, 0, 0, 0, 1, 1), (1, 0, 0, 0, 0, 0, 0), (0,, (2, 4), (3, 3))",
      "crop(((0, 0, 0, 0, 0, 1, 1), (1, 0, 0, 0, 0, 0, 0), (0,, (0, 4), (3, 3))",
      "crop(((0, 0, 0, 0, 0, 1, 1), (1, 0, 0, 0, 0, 0, 0), (0,, (2, 0), (3, 3))"
    ]
  },
  "tojvec": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2952": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "tojvec(int)",
            "value_signature": "tojvec(4)"
          }
        ],
        "code_context": "x4 = tojvec(FOUR)"
      }
    },
    "type_signatures": [
      "tojvec(int)"
    ],
    "value_signatures": [
      "tojvec(4)"
    ]
  },
  "astuple": {
    "calls": 18,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2954": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(2, 4)"
          }
        ],
        "code_context": "x6 = astuple(TWO, FOUR)"
      },
      "solvers.py:2958": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((4, 0, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (4, 0, 0)))"
          },
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((2, 2, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 2, 0), (2, 0, 0)))"
          },
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((4, 4, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (4, 0, 0)))"
          },
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((0, 3, 0), (3, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 0, 0)))"
          },
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((0, 8, 0), (8, 8, 0), (0, 0, 0)), ((0, 0, 0), (8, 8, 0), (0, 8, 0)))"
          },
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((0, 0, 0), (1, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 1, 0)))"
          }
        ],
        "code_context": "x10 = astuple(x2, x3)"
      },
      "solvers.py:2959": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((0, 0, 4), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 4, 4)))"
          },
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((0, 2, 2), (0, 0, 2), (0, 0, 0)), ((0, 0, 0), (0, 2, 0), (0, 0, 2)))"
          },
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((0, 4, 0), (0, 4, 4), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 0, 4)))"
          },
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((0, 3, 0), (0, 0, 3), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 0, 3)))"
          },
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((0, 8, 0), (0, 8, 8), (0, 0, 0)), ((0, 0, 0), (0, 8, 8), (0, 8, 0)))"
          },
          {
            "type_signature": "astuple(tuple, tuple)",
            "value_signature": "astuple(((0, 1, 1), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 0, 1)))"
          }
        ],
        "code_context": "x11 = astuple(x5, x7)"
      }
    },
    "type_signatures": [
      "astuple(int, int)",
      "astuple(tuple, tuple)"
    ],
    "value_signatures": [
      "astuple(((2, 2, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 2, 0), (2, 0, 0)))",
      "astuple(((0, 4, 0), (0, 4, 4), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 0, 4)))",
      "astuple(((0, 3, 0), (0, 0, 3), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 0, 3)))",
      "astuple(((0, 1, 1), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 0, 1)))",
      "astuple(((0, 0, 0), (1, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 1, 0)))",
      "astuple(2, 4)",
      "astuple(((0, 2, 2), (0, 0, 2), (0, 0, 0)), ((0, 0, 0), (0, 2, 0), (0, 0, 2)))",
      "astuple(((4, 0, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (4, 0, 0)))",
      "astuple(((0, 8, 0), (0, 8, 8), (0, 0, 0)), ((0, 0, 0), (0, 8, 8), (0, 8, 0)))",
      "astuple(((0, 8, 0), (8, 8, 0), (0, 0, 0)), ((0, 0, 0), (8, 8, 0), (0, 8, 0)))",
      "astuple(((0, 0, 4), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 4, 4)))",
      "astuple(((0, 3, 0), (3, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (0, 0, 0)))",
      "astuple(((4, 4, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, 0, 0), (4, 0, 0)))"
    ]
  },
  "canvas": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2956": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(0, (3, 3))"
          }
        ],
        "code_context": "x8 = canvas(ZERO, THREE_BY_THREE)"
      }
    },
    "type_signatures": [
      "canvas(int, tuple)"
    ],
    "value_signatures": [
      "canvas(0, (3, 3))"
    ]
  },
  "rbind": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2957": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "rbind(function, int)",
            "value_signature": "rbind(<function f_ofcolor at 0x100a47f70>, 4)"
          },
          {
            "type_signature": "rbind(function, int)",
            "value_signature": "rbind(<function f_ofcolor at 0x100a47f70>, 2)"
          },
          {
            "type_signature": "rbind(function, int)",
            "value_signature": "rbind(<function f_ofcolor at 0x100a47f70>, 3)"
          },
          {
            "type_signature": "rbind(function, int)",
            "value_signature": "rbind(<function f_ofcolor at 0x100a47f70>, 8)"
          },
          {
            "type_signature": "rbind(function, int)",
            "value_signature": "rbind(<function f_ofcolor at 0x100a47f70>, 1)"
          }
        ],
        "code_context": "x9 = rbind(f_ofcolor, x1)"
      }
    },
    "type_signatures": [
      "rbind(function, int)"
    ],
    "value_signatures": [
      "rbind(<function f_ofcolor at 0x100a47f70>, 3)",
      "rbind(<function f_ofcolor at 0x100a47f70>, 8)",
      "rbind(<function f_ofcolor at 0x100a47f70>, 4)",
      "rbind(<function f_ofcolor at 0x100a47f70>, 2)",
      "rbind(<function f_ofcolor at 0x100a47f70>, 1)"
    ]
  },
  "combine_t": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2960": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "combine_t(tuple, tuple)",
            "value_signature": "combine_t((((4, 0, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, (((0, 0, 4), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "combine_t(tuple, tuple)",
            "value_signature": "combine_t((((2, 2, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, (((0, 2, 2), (0, 0, 2), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "combine_t(tuple, tuple)",
            "value_signature": "combine_t((((4, 4, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, (((0, 4, 0), (0, 4, 4), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "combine_t(tuple, tuple)",
            "value_signature": "combine_t((((0, 3, 0), (3, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, (((0, 3, 0), (0, 0, 3), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "combine_t(tuple, tuple)",
            "value_signature": "combine_t((((0, 8, 0), (8, 8, 0), (0, 0, 0)), ((0, 0, 0), (8, (((0, 8, 0), (0, 8, 8), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "combine_t(tuple, tuple)",
            "value_signature": "combine_t((((0, 0, 0), (1, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, (((0, 1, 1), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          }
        ],
        "code_context": "x12 = combine_t(x10, x11)"
      }
    },
    "type_signatures": [
      "combine_t(tuple, tuple)"
    ],
    "value_signatures": [
      "combine_t((((4, 0, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, (((0, 0, 4), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)",
      "combine_t((((0, 0, 0), (1, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, (((0, 1, 1), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)",
      "combine_t((((4, 4, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, (((0, 4, 0), (0, 4, 4), (0, 0, 0)), ((0, 0, 0), (0)",
      "combine_t((((0, 8, 0), (8, 8, 0), (0, 0, 0)), ((0, 0, 0), (8, (((0, 8, 0), (0, 8, 8), (0, 0, 0)), ((0, 0, 0), (0)",
      "combine_t((((2, 2, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, (((0, 2, 2), (0, 0, 2), (0, 0, 0)), ((0, 0, 0), (0)",
      "combine_t((((0, 3, 0), (3, 0, 0), (0, 0, 0)), ((0, 0, 0), (0, (((0, 3, 0), (0, 0, 3), (0, 0, 0)), ((0, 0, 0), (0)"
    ]
  },
  "mapply": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2961": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "mapply(function, tuple)",
            "value_signature": "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((4, 0, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "mapply(function, tuple)",
            "value_signature": "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((2, 2, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "mapply(function, tuple)",
            "value_signature": "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((4, 4, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "mapply(function, tuple)",
            "value_signature": "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 3, 0), (3, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "mapply(function, tuple)",
            "value_signature": "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 8, 0), (8, 8, 0), (0, 0, 0)), ((0, 0, 0), (8)"
          },
          {
            "type_signature": "mapply(function, tuple)",
            "value_signature": "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 0, 0), (1, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          }
        ],
        "code_context": "x13 = mapply(x9, x12)"
      }
    },
    "type_signatures": [
      "mapply(function, tuple)"
    ],
    "value_signatures": [
      "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((4, 0, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)",
      "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((4, 4, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)",
      "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 8, 0), (8, 8, 0), (0, 0, 0)), ((0, 0, 0), (8)",
      "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 0, 0), (1, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)",
      "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((2, 2, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)",
      "mapply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 3, 0), (3, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
    ]
  },
  "apply": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2961": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((4, 0, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((2, 2, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((4, 4, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 3, 0), (3, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 8, 0), (8, 8, 0), (0, 0, 0)), ((0, 0, 0), (8)"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 0, 0), (1, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)"
          }
        ],
        "code_context": "x13 = mapply(x9, x12)"
      }
    },
    "type_signatures": [
      "apply(function, tuple)"
    ],
    "value_signatures": [
      "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 3, 0), (3, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)",
      "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((2, 2, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)",
      "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((4, 0, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)",
      "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((4, 4, 0), (0, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)",
      "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 0, 0), (1, 0, 0), (0, 0, 0)), ((0, 0, 0), (0)",
      "apply(<function rbind.<locals>.<lambda> at 0x100e7aee0>, (((0, 8, 0), (8, 8, 0), (0, 0, 0)), ((0, 0, 0), (8)"
    ]
  },
  "f_ofcolor": {
    "calls": 24,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2961": {
        "count": 23,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((4, 0, 0), (0, 0, 0), (0, 0, 0)), 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (0, 0, 0), (4, 0, 0)), 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 4), (0, 0, 0), (0, 0, 0)), 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 4, 4)), 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((2, 2, 0), (0, 0, 0), (0, 0, 0)), 2)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (0, 2, 0), (2, 0, 0)), 2)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 2, 2), (0, 0, 2), (0, 0, 0)), 2)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (0, 2, 0), (0, 0, 2)), 2)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((4, 4, 0), (0, 0, 0), (0, 0, 0)), 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 4, 0), (0, 4, 4), (0, 0, 0)), 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 0, 4)), 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 3, 0), (3, 0, 0), (0, 0, 0)), 3)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 3)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 3, 0), (0, 0, 3), (0, 0, 0)), 3)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 0, 3)), 3)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 8, 0), (8, 8, 0), (0, 0, 0)), 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (8, 8, 0), (0, 8, 0)), 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 8, 0), (0, 8, 8), (0, 0, 0)), 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (0, 8, 8), (0, 8, 0)), 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (1, 0, 0), (0, 0, 0)), 1)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 1, 0)), 1)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 1, 1), (0, 0, 0), (0, 0, 0)), 1)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 0, 1)), 1)"
          }
        ],
        "code_context": "x13 = mapply(x9, x12)"
      }
    },
    "type_signatures": [
      "f_ofcolor(tuple, int)"
    ],
    "value_signatures": [
      "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 3)",
      "f_ofcolor(((0, 0, 0), (0, 2, 0), (2, 0, 0)), 2)",
      "f_ofcolor(((0, 0, 0), (0, 2, 0), (0, 0, 2)), 2)",
      "f_ofcolor(((4, 4, 0), (0, 0, 0), (0, 0, 0)), 4)",
      "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 0, 3)), 3)",
      "f_ofcolor(((0, 8, 0), (0, 8, 8), (0, 0, 0)), 8)",
      "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 1, 0)), 1)",
      "f_ofcolor(((0, 3, 0), (0, 0, 3), (0, 0, 0)), 3)",
      "f_ofcolor(((0, 4, 0), (0, 4, 4), (0, 0, 0)), 4)",
      "f_ofcolor(((0, 0, 0), (0, 0, 0), (4, 0, 0)), 4)",
      "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 0, 4)), 4)",
      "f_ofcolor(((0, 8, 0), (8, 8, 0), (0, 0, 0)), 8)",
      "f_ofcolor(((2, 2, 0), (0, 0, 0), (0, 0, 0)), 2)",
      "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 0, 1)), 1)",
      "f_ofcolor(((0, 0, 0), (0, 0, 0), (0, 4, 4)), 4)",
      "f_ofcolor(((0, 0, 0), (1, 0, 0), (0, 0, 0)), 1)",
      "f_ofcolor(((0, 3, 0), (3, 0, 0), (0, 0, 0)), 3)",
      "f_ofcolor(((0, 0, 4), (0, 0, 0), (0, 0, 0)), 4)",
      "f_ofcolor(((4, 0, 0), (0, 0, 0), (0, 0, 0)), 4)",
      "f_ofcolor(((0, 0, 0), (0, 8, 8), (0, 8, 0)), 8)",
      "f_ofcolor(((0, 1, 1), (0, 0, 0), (0, 0, 0)), 1)",
      "f_ofcolor(((0, 0, 0), (8, 8, 0), (0, 8, 0)), 8)",
      "f_ofcolor(((0, 2, 2), (0, 0, 2), (0, 0, 0)), 2)"
    ]
  },
  "merge": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2961": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "merge(tuple)",
            "value_signature": "merge((frozenset({(0, 0)}), frozenset({(2, 0)}), frozens)"
          },
          {
            "type_signature": "merge(tuple)",
            "value_signature": "merge((frozenset({(0, 1), (0, 0)}), frozenset({(1, 1), ()"
          },
          {
            "type_signature": "merge(tuple)",
            "value_signature": "merge((frozenset({(0, 1), (0, 0)}), frozenset({(2, 0)}),)"
          },
          {
            "type_signature": "merge(tuple)",
            "value_signature": "merge((frozenset({(0, 1), (1, 0)}), frozenset(), frozens)"
          },
          {
            "type_signature": "merge(tuple)",
            "value_signature": "merge((frozenset({(0, 1), (1, 0), (1, 1)}), frozenset({()"
          },
          {
            "type_signature": "merge(tuple)",
            "value_signature": "merge((frozenset({(1, 0)}), frozenset({(2, 1)}), frozens)"
          }
        ],
        "code_context": "x13 = mapply(x9, x12)"
      }
    },
    "type_signatures": [
      "merge(tuple)"
    ],
    "value_signatures": [
      "merge((frozenset({(0, 1), (1, 0), (1, 1)}), frozenset({()",
      "merge((frozenset({(0, 1), (0, 0)}), frozenset({(1, 1), ()",
      "merge((frozenset({(1, 0)}), frozenset({(2, 1)}), frozens)",
      "merge((frozenset({(0, 1), (1, 0)}), frozenset(), frozens)",
      "merge((frozenset({(0, 0)}), frozenset({(2, 0)}), frozens)",
      "merge((frozenset({(0, 1), (0, 0)}), frozenset({(2, 0)}),)"
    ]
  },
  "fill": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2962": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "fill(tuple, int, tuple)",
            "value_signature": "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 4, ((0, 0), (2, 0), (0, 2), (2, 1), (2, 2)))"
          },
          {
            "type_signature": "fill(tuple, int, tuple)",
            "value_signature": "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 2, tuple(len=9))"
          },
          {
            "type_signature": "fill(tuple, int, tuple)",
            "value_signature": "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 4, tuple(len=7))"
          },
          {
            "type_signature": "fill(tuple, int, tuple)",
            "value_signature": "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 3, ((0, 1), (1, 0), (0, 1), (1, 2), (2, 2)))"
          },
          {
            "type_signature": "fill(tuple, int, tuple)",
            "value_signature": "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 8, tuple(len=12))"
          },
          {
            "type_signature": "fill(tuple, int, tuple)",
            "value_signature": "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 1, ((1, 0), (2, 1), (0, 1), (0, 2), (2, 2)))"
          }
        ],
        "code_context": "O = fill(x8, x1, x13)"
      }
    },
    "type_signatures": [
      "fill(tuple, int, tuple)"
    ],
    "value_signatures": [
      "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 3, ((0, 1), (1, 0), (0, 1), (1, 2), (2, 2)))",
      "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 4, ((0, 0), (2, 0), (0, 2), (2, 1), (2, 2)))",
      "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 8, tuple(len=12))",
      "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 2, tuple(len=9))",
      "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 1, ((1, 0), (2, 1), (0, 1), (0, 2), (2, 2)))",
      "fill(((0, 0, 0), (0, 0, 0), (0, 0, 0)), 4, tuple(len=7))"
    ]
  },
  "toindices": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2962": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "toindices(tuple)",
            "value_signature": "toindices(((0, 0), (2, 0), (0, 2), (2, 1), (2, 2)))"
          },
          {
            "type_signature": "toindices(tuple)",
            "value_signature": "toindices(tuple(len=9))"
          },
          {
            "type_signature": "toindices(tuple)",
            "value_signature": "toindices(tuple(len=7))"
          },
          {
            "type_signature": "toindices(tuple)",
            "value_signature": "toindices(((0, 1), (1, 0), (0, 1), (1, 2), (2, 2)))"
          },
          {
            "type_signature": "toindices(tuple)",
            "value_signature": "toindices(tuple(len=12))"
          },
          {
            "type_signature": "toindices(tuple)",
            "value_signature": "toindices(((1, 0), (2, 1), (0, 1), (0, 2), (2, 2)))"
          }
        ],
        "code_context": "O = fill(x8, x1, x13)"
      }
    },
    "type_signatures": [
      "toindices(tuple)"
    ],
    "value_signatures": [
      "toindices(((1, 0), (2, 1), (0, 1), (0, 2), (2, 2)))",
      "toindices(tuple(len=12))",
      "toindices(tuple(len=7))",
      "toindices(((0, 1), (1, 0), (0, 1), (1, 2), (2, 2)))",
      "toindices(tuple(len=9))",
      "toindices(((0, 0), (2, 0), (0, 2), (2, 1), (2, 2)))"
    ]
  }
}