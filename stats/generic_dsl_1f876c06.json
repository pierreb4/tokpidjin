{
  "fgpartition": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:848": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "fgpartition(tuple)",
            "value_signature": "fgpartition(tuple(len=10))"
          }
        ],
        "code_context": "x1 = fgpartition(I)"
      }
    },
    "type_signatures": [
      "fgpartition(tuple)"
    ],
    "value_signatures": [
      "fgpartition(tuple(len=10))"
    ]
  },
  "palette_t": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:848": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "palette_t(tuple)",
            "value_signature": "palette_t(tuple(len=10))"
          }
        ],
        "code_context": "x1 = fgpartition(I)"
      }
    },
    "type_signatures": [
      "palette_t(tuple)"
    ],
    "value_signatures": [
      "palette_t(tuple(len=10))"
    ]
  },
  "mostcolor_t": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:848": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(tuple(len=10))"
          }
        ],
        "code_context": "x1 = fgpartition(I)"
      }
    },
    "type_signatures": [
      "mostcolor_t(tuple)"
    ],
    "value_signatures": [
      "mostcolor_t(tuple(len=10))"
    ]
  },
  "compose": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:849": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function last at 0x105941430>, <function first at 0x105936160>)"
          }
        ],
        "code_context": "x2 = compose(last, first)"
      },
      "solvers.py:850": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function last at 0x105941430>, <function last at 0x105941430>)"
          }
        ],
        "code_context": "x3 = power(last, TWO)"
      }
    },
    "type_signatures": [
      "compose(function, function)"
    ],
    "value_signatures": [
      "compose(<function last at 0x105941430>, <function first at 0x105936160>)",
      "compose(<function last at 0x105941430>, <function last at 0x105941430>)"
    ]
  },
  "power": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:850": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function last at 0x105941430>, 2)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function last at 0x105941430>, 1)"
          }
        ],
        "code_context": "x3 = power(last, TWO)"
      }
    },
    "type_signatures": [
      "power(function, int)"
    ],
    "value_signatures": [
      "power(<function last at 0x105941430>, 1)",
      "power(<function last at 0x105941430>, 2)"
    ]
  },
  "fork": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:851": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function connect at 0x105932430>, <function compose.<locals>.<lambda> at 0x1059cfee0, <function compose.<locals>.<lambda> at 0x105a7d040)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function connect at 0x105932430>, <function compose.<locals>.<lambda> at 0x1059cfee0, <function compose.<locals>.<lambda> at 0x105a87040)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function connect at 0x105932430>, <function compose.<locals>.<lambda> at 0x1059cfee0, <function compose.<locals>.<lambda> at 0x105a8c040)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function connect at 0x105932430>, <function compose.<locals>.<lambda> at 0x1059cfee0, <function compose.<locals>.<lambda> at 0x105a8c160)"
          }
        ],
        "code_context": "x4 = fork(connect, x2, x3)"
      },
      "solvers.py:852": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_i at 0x105948e50>, <function color at 0x105929ee0>, <function fork.<locals>.<lambda> at 0x105a7d0d0>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_i at 0x105948e50>, <function color at 0x105929ee0>, <function fork.<locals>.<lambda> at 0x105a870d0>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_i at 0x105948e50>, <function color at 0x105929ee0>, <function fork.<locals>.<lambda> at 0x105a8c0d0>)"
          }
        ],
        "code_context": "x5 = fork(recolor_i, color, x4)"
      }
    },
    "type_signatures": [
      "fork(function, function, function)"
    ],
    "value_signatures": [
      "fork(<function recolor_i at 0x105948e50>, <function color at 0x105929ee0>, <function fork.<locals>.<lambda> at 0x105a870d0>)",
      "fork(<function connect at 0x105932430>, <function compose.<locals>.<lambda> at 0x1059cfee0, <function compose.<locals>.<lambda> at 0x105a87040)",
      "fork(<function connect at 0x105932430>, <function compose.<locals>.<lambda> at 0x1059cfee0, <function compose.<locals>.<lambda> at 0x105a8c160)",
      "fork(<function connect at 0x105932430>, <function compose.<locals>.<lambda> at 0x1059cfee0, <function compose.<locals>.<lambda> at 0x105a7d040)",
      "fork(<function recolor_i at 0x105948e50>, <function color at 0x105929ee0>, <function fork.<locals>.<lambda> at 0x105a7d0d0>)",
      "fork(<function recolor_i at 0x105948e50>, <function color at 0x105929ee0>, <function fork.<locals>.<lambda> at 0x105a8c0d0>)",
      "fork(<function connect at 0x105932430>, <function compose.<locals>.<lambda> at 0x1059cfee0, <function compose.<locals>.<lambda> at 0x105a8c040)"
    ]
  },
  "mapply": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:853": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function fork.<locals>.<lambda> at 0x105a7d160>, frozenset({frozenset({(3, (2, 9)), (3, (0, 7))}), )"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function fork.<locals>.<lambda> at 0x105a87160>, frozenset({frozenset({(2, (0, 2)), (2, (2, 0))}), )"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function fork.<locals>.<lambda> at 0x105a8c160>, frozenset({frozenset({(8, (4, 9)), (8, (0, 5))}), )"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function fork.<locals>.<lambda> at 0x105a8c040>, frozenset({frozenset({(7, (7, 6)), (7, (1, 0))}), )"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "mapply(function, frozenset)"
    ],
    "value_signatures": [
      "mapply(<function fork.<locals>.<lambda> at 0x105a7d160>, frozenset({frozenset({(3, (2, 9)), (3, (0, 7))}), )",
      "mapply(<function fork.<locals>.<lambda> at 0x105a87160>, frozenset({frozenset({(2, (0, 2)), (2, (2, 0))}), )",
      "mapply(<function fork.<locals>.<lambda> at 0x105a8c160>, frozenset({frozenset({(8, (4, 9)), (8, (0, 5))}), )",
      "mapply(<function fork.<locals>.<lambda> at 0x105a8c040>, frozenset({frozenset({(7, (7, 6)), (7, (1, 0))}), )"
    ]
  },
  "apply": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:853": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x105a7d160>, frozenset({frozenset({(3, (2, 9)), (3, (0, 7))}), )"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x105a87160>, frozenset({frozenset({(2, (0, 2)), (2, (2, 0))}), )"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x105a8c160>, frozenset({frozenset({(8, (4, 9)), (8, (0, 5))}), )"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x105a8c040>, frozenset({frozenset({(7, (7, 6)), (7, (1, 0))}), )"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "apply(function, frozenset)"
    ],
    "value_signatures": [
      "apply(<function fork.<locals>.<lambda> at 0x105a8c160>, frozenset({frozenset({(8, (4, 9)), (8, (0, 5))}), )",
      "apply(<function fork.<locals>.<lambda> at 0x105a7d160>, frozenset({frozenset({(3, (2, 9)), (3, (0, 7))}), )",
      "apply(<function fork.<locals>.<lambda> at 0x105a8c040>, frozenset({frozenset({(7, (7, 6)), (7, (1, 0))}), )",
      "apply(<function fork.<locals>.<lambda> at 0x105a87160>, frozenset({frozenset({(2, (0, 2)), (2, (2, 0))}), )"
    ]
  },
  "color": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:853": {
        "count": 16,
        "signatures": [
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(3, (2, 9)), (3, (0, 7))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(9, (3, 3)), (9, (0, 0))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(8, (7, 1)), (8, (2, 6))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(7, (5, 5)), (7, (9, 9))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(2, (0, 2)), (2, (2, 0))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(6, (4, 9)), (6, (0, 5))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(4, (9, 7)), (4, (5, 3))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(8, (4, 9)), (8, (0, 5))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(4, (6, 6)), (4, (2, 2))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(6, (0, 3)), (6, (3, 0))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(9, (5, 4)), (9, (9, 0))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(7, (7, 6)), (7, (1, 0))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(9, (0, 9)), (9, (3, 6))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(3, (0, 6)), (3, (3, 3))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(6, (4, 0)), (6, (7, 3))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(4, (5, 9)), (4, (9, 5))}))"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "color(frozenset)"
    ],
    "value_signatures": [
      "color(frozenset({(2, (0, 2)), (2, (2, 0))}))",
      "color(frozenset({(9, (0, 9)), (9, (3, 6))}))",
      "color(frozenset({(3, (2, 9)), (3, (0, 7))}))",
      "color(frozenset({(7, (7, 6)), (7, (1, 0))}))",
      "color(frozenset({(6, (4, 0)), (6, (7, 3))}))",
      "color(frozenset({(6, (4, 9)), (6, (0, 5))}))",
      "color(frozenset({(3, (0, 6)), (3, (3, 3))}))",
      "color(frozenset({(4, (5, 9)), (4, (9, 5))}))",
      "color(frozenset({(9, (3, 3)), (9, (0, 0))}))",
      "color(frozenset({(4, (9, 7)), (4, (5, 3))}))",
      "color(frozenset({(7, (5, 5)), (7, (9, 9))}))",
      "color(frozenset({(9, (5, 4)), (9, (9, 0))}))",
      "color(frozenset({(8, (7, 1)), (8, (2, 6))}))",
      "color(frozenset({(6, (0, 3)), (6, (3, 0))}))",
      "color(frozenset({(4, (6, 6)), (4, (2, 2))}))",
      "color(frozenset({(8, (4, 9)), (8, (0, 5))}))"
    ]
  },
  "first": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:853": {
        "count": 16,
        "signatures": [
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(3, (2, 9)), (3, (0, 7))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(9, (3, 3)), (9, (0, 0))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(8, (7, 1)), (8, (2, 6))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(7, (5, 5)), (7, (9, 9))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(2, (0, 2)), (2, (2, 0))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(6, (4, 9)), (6, (0, 5))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(4, (9, 7)), (4, (5, 3))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(8, (4, 9)), (8, (0, 5))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(4, (6, 6)), (4, (2, 2))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(6, (0, 3)), (6, (3, 0))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(9, (5, 4)), (9, (9, 0))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(7, (7, 6)), (7, (1, 0))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(9, (0, 9)), (9, (3, 6))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(3, (0, 6)), (3, (3, 3))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(6, (4, 0)), (6, (7, 3))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(4, (5, 9)), (4, (9, 5))}))"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "first(frozenset)"
    ],
    "value_signatures": [
      "first(frozenset({(7, (7, 6)), (7, (1, 0))}))",
      "first(frozenset({(4, (9, 7)), (4, (5, 3))}))",
      "first(frozenset({(9, (5, 4)), (9, (9, 0))}))",
      "first(frozenset({(4, (6, 6)), (4, (2, 2))}))",
      "first(frozenset({(4, (5, 9)), (4, (9, 5))}))",
      "first(frozenset({(8, (7, 1)), (8, (2, 6))}))",
      "first(frozenset({(2, (0, 2)), (2, (2, 0))}))",
      "first(frozenset({(9, (0, 9)), (9, (3, 6))}))",
      "first(frozenset({(3, (0, 6)), (3, (3, 3))}))",
      "first(frozenset({(3, (2, 9)), (3, (0, 7))}))",
      "first(frozenset({(7, (5, 5)), (7, (9, 9))}))",
      "first(frozenset({(6, (4, 9)), (6, (0, 5))}))",
      "first(frozenset({(8, (4, 9)), (8, (0, 5))}))",
      "first(frozenset({(6, (0, 3)), (6, (3, 0))}))",
      "first(frozenset({(9, (3, 3)), (9, (0, 0))}))",
      "first(frozenset({(6, (4, 0)), (6, (7, 3))}))"
    ]
  },
  "last": {
    "calls": 48,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:853": {
        "count": 48,
        "signatures": [
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (2, 9)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(3, (2, 9)), (3, (0, 7))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (0, 7)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((9, (3, 3)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(9, (3, 3)), (9, (0, 0))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((9, (0, 0)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (7, 1)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(8, (7, 1)), (8, (2, 6))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (2, 6)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((7, (5, 5)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(7, (5, 5)), (7, (9, 9))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((7, (9, 9)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (0, 2)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(2, (0, 2)), (2, (2, 0))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (2, 0)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((6, (4, 9)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(6, (4, 9)), (6, (0, 5))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((6, (0, 5)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((4, (9, 7)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(4, (9, 7)), (4, (5, 3))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((4, (5, 3)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (4, 9)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(8, (4, 9)), (8, (0, 5))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (0, 5)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((4, (6, 6)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(4, (6, 6)), (4, (2, 2))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((4, (2, 2)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((6, (0, 3)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(6, (0, 3)), (6, (3, 0))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((6, (3, 0)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((9, (5, 4)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(9, (5, 4)), (9, (9, 0))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((9, (9, 0)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((7, (7, 6)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(7, (7, 6)), (7, (1, 0))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((7, (1, 0)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((9, (0, 9)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(9, (0, 9)), (9, (3, 6))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((9, (3, 6)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (0, 6)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(3, (0, 6)), (3, (3, 3))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (3, 3)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((6, (4, 0)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(6, (4, 0)), (6, (7, 3))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((6, (7, 3)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((4, (5, 9)))"
          },
          {
            "type_signature": "last(frozenset)",
            "value_signature": "last(frozenset({(4, (5, 9)), (4, (9, 5))}))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((4, (9, 5)))"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "last(tuple)",
      "last(frozenset)"
    ],
    "value_signatures": [
      "last((7, (9, 9)))",
      "last((3, (0, 7)))",
      "last((8, (4, 9)))",
      "last((7, (7, 6)))",
      "last(frozenset({(3, (0, 6)), (3, (3, 3))}))",
      "last((3, (3, 3)))",
      "last((9, (3, 6)))",
      "last((9, (5, 4)))",
      "last((4, (6, 6)))",
      "last((6, (7, 3)))",
      "last((8, (7, 1)))",
      "last(frozenset({(9, (3, 3)), (9, (0, 0))}))",
      "last((2, (0, 2)))",
      "last(frozenset({(7, (7, 6)), (7, (1, 0))}))",
      "last((4, (5, 3)))",
      "last((8, (0, 5)))",
      "last(frozenset({(9, (0, 9)), (9, (3, 6))}))",
      "last(frozenset({(4, (5, 9)), (4, (9, 5))}))",
      "last(frozenset({(8, (4, 9)), (8, (0, 5))}))",
      "last((6, (0, 3)))",
      "last(frozenset({(6, (0, 3)), (6, (3, 0))}))",
      "last(frozenset({(8, (7, 1)), (8, (2, 6))}))",
      "last((8, (2, 6)))",
      "last(frozenset({(9, (5, 4)), (9, (9, 0))}))",
      "last(frozenset({(7, (5, 5)), (7, (9, 9))}))",
      "last((4, (9, 5)))",
      "last((4, (2, 2)))",
      "last(frozenset({(2, (0, 2)), (2, (2, 0))}))",
      "last((7, (5, 5)))",
      "last((2, (2, 0)))",
      "last((4, (5, 9)))",
      "last(frozenset({(4, (9, 7)), (4, (5, 3))}))",
      "last((9, (3, 3)))",
      "last(frozenset({(4, (6, 6)), (4, (2, 2))}))",
      "last((3, (0, 6)))",
      "last((6, (0, 5)))",
      "last((7, (1, 0)))",
      "last((9, (0, 9)))",
      "last((9, (0, 0)))",
      "last(frozenset({(6, (4, 0)), (6, (7, 3))}))",
      "last((3, (2, 9)))",
      "last((4, (9, 7)))",
      "last((6, (3, 0)))",
      "last((6, (4, 9)))",
      "last((6, (4, 0)))",
      "last((9, (9, 0)))",
      "last(frozenset({(3, (2, 9)), (3, (0, 7))}))",
      "last(frozenset({(6, (4, 9)), (6, (0, 5))}))"
    ]
  },
  "connect": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:853": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((2, 9), (0, 7))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((3, 3), (0, 0))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 1), (2, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 5), (9, 9))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((0, 2), (2, 0))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 9), (0, 5))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 7), (5, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((6, 6), (2, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((0, 3), (3, 0))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 4), (9, 0))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 6), (1, 0))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((0, 9), (3, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((0, 6), (3, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 0), (7, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 9), (9, 5))"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "connect(tuple, tuple)"
    ],
    "value_signatures": [
      "connect((0, 6), (3, 3))",
      "connect((2, 9), (0, 7))",
      "connect((5, 5), (9, 9))",
      "connect((6, 6), (2, 2))",
      "connect((7, 6), (1, 0))",
      "connect((0, 2), (2, 0))",
      "connect((5, 9), (9, 5))",
      "connect((7, 1), (2, 6))",
      "connect((9, 7), (5, 3))",
      "connect((4, 0), (7, 3))",
      "connect((3, 3), (0, 0))",
      "connect((5, 4), (9, 0))",
      "connect((4, 9), (0, 5))",
      "connect((0, 3), (3, 0))",
      "connect((0, 9), (3, 6))"
    ]
  },
  "recolor_i": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:853": {
        "count": 16,
        "signatures": [
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(3, frozenset({(0, 7), (1, 8), (2, 9)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(9, frozenset({(1, 1), (3, 3), (2, 2), (0, 0)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(8, frozenset(len=6))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(7, frozenset({(8, 8), (5, 5), (7, 7), (9, 9), (6, 6)})"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(2, frozenset({(1, 1), (0, 2), (2, 0)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(6, frozenset({(3, 8), (2, 7), (4, 9), (0, 5), (1, 6)})"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(4, frozenset({(6, 4), (8, 6), (5, 3), (7, 5), (9, 7)})"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(8, frozenset({(3, 8), (2, 7), (4, 9), (0, 5), (1, 6)})"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(4, frozenset({(4, 4), (5, 5), (3, 3), (2, 2), (6, 6)})"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(6, frozenset({(1, 2), (0, 3), (2, 1), (3, 0)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(9, frozenset({(9, 0), (8, 1), (5, 4), (7, 2), (6, 3)})"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(7, frozenset(len=7))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(9, frozenset({(1, 8), (0, 9), (2, 7), (3, 6)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(3, frozenset({(1, 5), (3, 3), (2, 4), (0, 6)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(6, frozenset({(6, 2), (4, 0), (5, 1), (7, 3)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(4, frozenset({(7, 7), (6, 8), (9, 5), (8, 6), (5, 9)})"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "recolor_i(int, frozenset)"
    ],
    "value_signatures": [
      "recolor_i(6, frozenset({(6, 2), (4, 0), (5, 1), (7, 3)}))",
      "recolor_i(9, frozenset({(1, 1), (3, 3), (2, 2), (0, 0)}))",
      "recolor_i(3, frozenset({(0, 7), (1, 8), (2, 9)}))",
      "recolor_i(3, frozenset({(1, 5), (3, 3), (2, 4), (0, 6)}))",
      "recolor_i(6, frozenset({(1, 2), (0, 3), (2, 1), (3, 0)}))",
      "recolor_i(4, frozenset({(6, 4), (8, 6), (5, 3), (7, 5), (9, 7)})",
      "recolor_i(9, frozenset({(1, 8), (0, 9), (2, 7), (3, 6)}))",
      "recolor_i(9, frozenset({(9, 0), (8, 1), (5, 4), (7, 2), (6, 3)})",
      "recolor_i(4, frozenset({(4, 4), (5, 5), (3, 3), (2, 2), (6, 6)})",
      "recolor_i(4, frozenset({(7, 7), (6, 8), (9, 5), (8, 6), (5, 9)})",
      "recolor_i(2, frozenset({(1, 1), (0, 2), (2, 0)}))",
      "recolor_i(8, frozenset(len=6))",
      "recolor_i(7, frozenset({(8, 8), (5, 5), (7, 7), (9, 9), (6, 6)})",
      "recolor_i(7, frozenset(len=7))",
      "recolor_i(8, frozenset({(3, 8), (2, 7), (4, 9), (0, 5), (1, 6)})",
      "recolor_i(6, frozenset({(3, 8), (2, 7), (4, 9), (0, 5), (1, 6)})"
    ]
  },
  "toindices_i": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:853": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(0, 7), (1, 8), (2, 9)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(1, 1), (3, 3), (2, 2), (0, 0)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset(len=6))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(8, 8), (5, 5), (7, 7), (9, 9), (6, 6)})"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(1, 1), (0, 2), (2, 0)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(3, 8), (2, 7), (4, 9), (0, 5), (1, 6)})"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(6, 4), (8, 6), (5, 3), (7, 5), (9, 7)})"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(4, 4), (5, 5), (3, 3), (2, 2), (6, 6)})"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(1, 2), (0, 3), (2, 1), (3, 0)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(9, 0), (8, 1), (5, 4), (7, 2), (6, 3)})"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset(len=7))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(1, 8), (0, 9), (2, 7), (3, 6)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(1, 5), (3, 3), (2, 4), (0, 6)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(6, 2), (4, 0), (5, 1), (7, 3)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(7, 7), (6, 8), (9, 5), (8, 6), (5, 9)})"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "toindices_i(frozenset)"
    ],
    "value_signatures": [
      "toindices_i(frozenset({(0, 7), (1, 8), (2, 9)}))",
      "toindices_i(frozenset({(1, 8), (0, 9), (2, 7), (3, 6)}))",
      "toindices_i(frozenset({(6, 2), (4, 0), (5, 1), (7, 3)}))",
      "toindices_i(frozenset({(1, 2), (0, 3), (2, 1), (3, 0)}))",
      "toindices_i(frozenset({(1, 5), (3, 3), (2, 4), (0, 6)}))",
      "toindices_i(frozenset({(7, 7), (6, 8), (9, 5), (8, 6), (5, 9)})",
      "toindices_i(frozenset({(3, 8), (2, 7), (4, 9), (0, 5), (1, 6)})",
      "toindices_i(frozenset(len=7))",
      "toindices_i(frozenset({(1, 1), (0, 2), (2, 0)}))",
      "toindices_i(frozenset({(9, 0), (8, 1), (5, 4), (7, 2), (6, 3)})",
      "toindices_i(frozenset({(1, 1), (3, 3), (2, 2), (0, 0)}))",
      "toindices_i(frozenset({(8, 8), (5, 5), (7, 7), (9, 9), (6, 6)})",
      "toindices_i(frozenset(len=6))",
      "toindices_i(frozenset({(4, 4), (5, 5), (3, 3), (2, 2), (6, 6)})",
      "toindices_i(frozenset({(6, 4), (8, 6), (5, 3), (7, 5), (9, 7)})"
    ]
  },
  "merge": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:853": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(9, (0, 0)), (9, (1, 1)), (9)"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(6, (4, 9)), (6, (0, 5)), (6)"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(8, (4, 9)), (8, (0, 5)), (8)"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(3, (0, 6)), (3, (3, 3)), (3)"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "merge(frozenset)"
    ],
    "value_signatures": [
      "merge(frozenset({frozenset({(9, (0, 0)), (9, (1, 1)), (9)",
      "merge(frozenset({frozenset({(3, (0, 6)), (3, (3, 3)), (3)",
      "merge(frozenset({frozenset({(6, (4, 9)), (6, (0, 5)), (6)",
      "merge(frozenset({frozenset({(8, (4, 9)), (8, (0, 5)), (8)"
    ]
  },
  "paint": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:854": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=10), frozenset(len=18))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=10), frozenset(len=13))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=10), frozenset(len=19))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=10), frozenset(len=24))"
          }
        ],
        "code_context": "O = paint(I, x6)"
      }
    },
    "type_signatures": [
      "paint(tuple, frozenset)"
    ],
    "value_signatures": [
      "paint(tuple(len=10), frozenset(len=18))",
      "paint(tuple(len=10), frozenset(len=19))",
      "paint(tuple(len=10), frozenset(len=13))",
      "paint(tuple(len=10), frozenset(len=24))"
    ]
  }
}