{
  "objects": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2019": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(tuple(len=10), True, False, True)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(tuple(len=9), True, False, True)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(tuple(len=12), True, False, True)"
          }
        ],
        "code_context": "x1 = objects(I, T, F, T)"
      }
    },
    "type_signatures": [
      "objects(tuple, bool, bool, bool)"
    ],
    "value_signatures": [
      "objects(tuple(len=9), True, False, True)",
      "objects(tuple(len=12), True, False, True)",
      "objects(tuple(len=10), True, False, True)"
    ]
  },
  "mostcolor_t": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2019": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(tuple(len=10))"
          },
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(tuple(len=9))"
          },
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(tuple(len=12))"
          }
        ],
        "code_context": "x1 = objects(I, T, F, T)"
      }
    },
    "type_signatures": [
      "mostcolor_t(tuple)"
    ],
    "value_signatures": [
      "mostcolor_t(tuple(len=9))",
      "mostcolor_t(tuple(len=10))",
      "mostcolor_t(tuple(len=12))"
    ]
  },
  "asindices": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2019": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(tuple(len=10))"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(tuple(len=9))"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(tuple(len=12))"
          }
        ],
        "code_context": "x1 = objects(I, T, F, T)"
      }
    },
    "type_signatures": [
      "asindices(tuple)"
    ],
    "value_signatures": [
      "asindices(tuple(len=12))",
      "asindices(tuple(len=9))",
      "asindices(tuple(len=10))"
    ]
  },
  "dneighbors": {
    "calls": 18,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2019": {
        "count": 17,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((4, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((6, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((8, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((9, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((7, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((3, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((5, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 3))"
          }
        ],
        "code_context": "x1 = objects(I, T, F, T)"
      }
    },
    "type_signatures": [
      "dneighbors(tuple)"
    ],
    "value_signatures": [
      "dneighbors((2, 2))",
      "dneighbors((0, 3))",
      "dneighbors((4, 7))",
      "dneighbors((6, 3))",
      "dneighbors((6, 1))",
      "dneighbors((4, 3))",
      "dneighbors((7, 1))",
      "dneighbors((7, 5))",
      "dneighbors((9, 9))",
      "dneighbors((9, 8))",
      "dneighbors((3, 5))",
      "dneighbors((1, 1))",
      "dneighbors((8, 3))",
      "dneighbors((1, 9))",
      "dneighbors((5, 4))",
      "dneighbors((6, 2))",
      "dneighbors((3, 8))"
    ]
  },
  "f_ofcolor": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2020": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=10), 2)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=9), 2)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=12), 2)"
          }
        ],
        "code_context": "x2 = f_ofcolor(I, TWO)"
      }
    },
    "type_signatures": [
      "f_ofcolor(tuple, int)"
    ],
    "value_signatures": [
      "f_ofcolor(tuple(len=12), 2)",
      "f_ofcolor(tuple(len=9), 2)",
      "f_ofcolor(tuple(len=10), 2)"
    ]
  },
  "mapply": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2021": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function vfrontier at 0x104df01f0>, frozenset({(7, 5)}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function vfrontier at 0x104df01f0>, frozenset({(2, 2)}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function vfrontier at 0x104df01f0>, frozenset({(8, 3), (9, 9)}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function vfrontier at 0x104df01f0>, frozenset({(5, 4), (1, 9)}))"
          }
        ],
        "code_context": "x3 = mapply(vfrontier, x2)"
      },
      "solvers.py:2027": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function fork.<locals>.<lambda> at 0x104ea2160>, frozenset({frozenset({(1, (6, 1))}), frozenset({(3)"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function fork.<locals>.<lambda> at 0x104ea20d0>, frozenset({frozenset({(1, (6, 3))}), frozenset({(3)"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function fork.<locals>.<lambda> at 0x104ea2160>, frozenset({frozenset({(1, (1, 1))}), frozenset({(3)"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function fork.<locals>.<lambda> at 0x104ea2280>, frozenset({frozenset({(1, (7, 1))}), frozenset({(3)"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "mapply(function, frozenset)"
    ],
    "value_signatures": [
      "mapply(<function vfrontier at 0x104df01f0>, frozenset({(8, 3), (9, 9)}))",
      "mapply(<function fork.<locals>.<lambda> at 0x104ea20d0>, frozenset({frozenset({(1, (6, 3))}), frozenset({(3)",
      "mapply(<function vfrontier at 0x104df01f0>, frozenset({(7, 5)}))",
      "mapply(<function fork.<locals>.<lambda> at 0x104ea2160>, frozenset({frozenset({(1, (1, 1))}), frozenset({(3)",
      "mapply(<function fork.<locals>.<lambda> at 0x104ea2160>, frozenset({frozenset({(1, (6, 1))}), frozenset({(3)",
      "mapply(<function vfrontier at 0x104df01f0>, frozenset({(5, 4), (1, 9)}))",
      "mapply(<function fork.<locals>.<lambda> at 0x104ea2280>, frozenset({frozenset({(1, (7, 1))}), frozenset({(3)",
      "mapply(<function vfrontier at 0x104df01f0>, frozenset({(2, 2)}))"
    ]
  },
  "apply": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2021": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function vfrontier at 0x104df01f0>, frozenset({(7, 5)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function vfrontier at 0x104df01f0>, frozenset({(2, 2)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function vfrontier at 0x104df01f0>, frozenset({(8, 3), (9, 9)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function vfrontier at 0x104df01f0>, frozenset({(5, 4), (1, 9)}))"
          }
        ],
        "code_context": "x3 = mapply(vfrontier, x2)"
      },
      "solvers.py:2027": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x104ea2160>, frozenset({frozenset({(1, (6, 1))}), frozenset({(3)"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x104ea20d0>, frozenset({frozenset({(1, (6, 3))}), frozenset({(3)"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x104ea2160>, frozenset({frozenset({(1, (1, 1))}), frozenset({(3)"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x104ea2280>, frozenset({frozenset({(1, (7, 1))}), frozenset({(3)"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "apply(function, frozenset)"
    ],
    "value_signatures": [
      "apply(<function vfrontier at 0x104df01f0>, frozenset({(2, 2)}))",
      "apply(<function fork.<locals>.<lambda> at 0x104ea2280>, frozenset({frozenset({(1, (7, 1))}), frozenset({(3)",
      "apply(<function vfrontier at 0x104df01f0>, frozenset({(5, 4), (1, 9)}))",
      "apply(<function vfrontier at 0x104df01f0>, frozenset({(7, 5)}))",
      "apply(<function fork.<locals>.<lambda> at 0x104ea2160>, frozenset({frozenset({(1, (1, 1))}), frozenset({(3)",
      "apply(<function fork.<locals>.<lambda> at 0x104ea2160>, frozenset({frozenset({(1, (6, 1))}), frozenset({(3)",
      "apply(<function fork.<locals>.<lambda> at 0x104ea20d0>, frozenset({frozenset({(1, (6, 3))}), frozenset({(3)",
      "apply(<function vfrontier at 0x104df01f0>, frozenset({(8, 3), (9, 9)}))"
    ]
  },
  "vfrontier": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2021": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "vfrontier(tuple)",
            "value_signature": "vfrontier((7, 5))"
          },
          {
            "type_signature": "vfrontier(tuple)",
            "value_signature": "vfrontier((2, 2))"
          },
          {
            "type_signature": "vfrontier(tuple)",
            "value_signature": "vfrontier((8, 3))"
          },
          {
            "type_signature": "vfrontier(tuple)",
            "value_signature": "vfrontier((9, 9))"
          },
          {
            "type_signature": "vfrontier(tuple)",
            "value_signature": "vfrontier((5, 4))"
          },
          {
            "type_signature": "vfrontier(tuple)",
            "value_signature": "vfrontier((1, 9))"
          }
        ],
        "code_context": "x3 = mapply(vfrontier, x2)"
      }
    },
    "type_signatures": [
      "vfrontier(tuple)"
    ],
    "value_signatures": [
      "vfrontier((8, 3))",
      "vfrontier((9, 9))",
      "vfrontier((7, 5))",
      "vfrontier((1, 9))",
      "vfrontier((2, 2))",
      "vfrontier((5, 4))"
    ]
  },
  "merge": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2021": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(20, 5), (22, 5), (7, 5), (9)"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(22, 2), (9, 2), (0, 2), (11)"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(4, 9), (17, 9), (28, 9), (8)"
          }
        ],
        "code_context": "x3 = mapply(vfrontier, x2)"
      },
      "solvers.py:2027": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(3, (4, 16)), (3, (4, 22)), )"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(3, (6, 9)), (3, (6, 29)), ()"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(1, (9, 25)), (1, (9, 20)), )"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "merge(frozenset)"
    ],
    "value_signatures": [
      "merge(frozenset({frozenset({(20, 5), (22, 5), (7, 5), (9)",
      "merge(frozenset({frozenset({(3, (6, 9)), (3, (6, 29)), ()",
      "merge(frozenset({frozenset({(1, (9, 25)), (1, (9, 20)), )",
      "merge(frozenset({frozenset({(4, 9), (17, 9), (28, 9), (8)",
      "merge(frozenset({frozenset({(3, (4, 16)), (3, (4, 22)), )",
      "merge(frozenset({frozenset({(22, 2), (9, 2), (0, 2), (11)"
    ]
  },
  "fill": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2022": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=10), 2, frozenset(len=30))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=9), 2, frozenset(len=30))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=10), 2, frozenset(len=60))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=12), 2, frozenset(len=60))"
          }
        ],
        "code_context": "x4 = fill(I, TWO, x3)"
      }
    },
    "type_signatures": [
      "fill(tuple, int, frozenset)"
    ],
    "value_signatures": [
      "fill(tuple(len=10), 2, frozenset(len=60))",
      "fill(tuple(len=12), 2, frozenset(len=60))",
      "fill(tuple(len=10), 2, frozenset(len=30))",
      "fill(tuple(len=9), 2, frozenset(len=30))"
    ]
  },
  "toindices": {
    "calls": 76,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2022": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=30))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=60))"
          }
        ],
        "code_context": "x4 = fill(I, TWO, x3)"
      },
      "solvers.py:2027": {
        "count": 12,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (6, 1))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, (4, 3))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, (1, 1))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (6, 3))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, (4, 7))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (1, 1))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, (6, 2))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, (3, 8))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (7, 1))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, (0, 3))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (9, 8))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, (3, 5))}))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset({(3, (3, 8))}))",
      "toindices(frozenset({(3, (4, 7))}))",
      "toindices(frozenset({(3, (3, 5))}))",
      "toindices(frozenset({(1, (1, 1))}))",
      "toindices(frozenset({(1, (9, 8))}))",
      "toindices(frozenset({(3, (1, 1))}))",
      "toindices(frozenset({(1, (7, 1))}))",
      "toindices(frozenset({(3, (6, 2))}))",
      "toindices(frozenset(len=60))",
      "toindices(frozenset({(3, (0, 3))}))",
      "toindices(frozenset({(1, (6, 1))}))",
      "toindices(frozenset({(1, (6, 3))}))",
      "toindices(frozenset({(3, (4, 3))}))",
      "toindices(frozenset(len=30))"
    ]
  },
  "colorfilter": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2023": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset({frozenset({(1, (6, 1))}), frozenset({(3, 2)"
          },
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset({frozenset({(1, (6, 3))}), frozenset({(2, 2)"
          },
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset({frozenset({(2, (8, 3))}), frozenset({(1, 2)"
          },
          {
            "type_signature": "colorfilter(frozenset, int)",
            "value_signature": "colorfilter(frozenset(len=6), 2)"
          }
        ],
        "code_context": "x5 = colorfilter(x1, TWO)"
      }
    },
    "type_signatures": [
      "colorfilter(frozenset, int)"
    ],
    "value_signatures": [
      "colorfilter(frozenset({frozenset({(1, (6, 3))}), frozenset({(2, 2)",
      "colorfilter(frozenset({frozenset({(2, (8, 3))}), frozenset({(1, 2)",
      "colorfilter(frozenset(len=6), 2)",
      "colorfilter(frozenset({frozenset({(1, (6, 1))}), frozenset({(3, 2)"
    ]
  },
  "difference": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2024": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "difference(frozenset, frozenset)",
            "value_signature": "difference(frozenset({frozenset({(1, (6, 1))}), frozenset({(3, frozenset({frozenset({(2, (7, 5))})}))"
          },
          {
            "type_signature": "difference(frozenset, frozenset)",
            "value_signature": "difference(frozenset({frozenset({(1, (6, 3))}), frozenset({(2, frozenset({frozenset({(2, (2, 2))})}))"
          },
          {
            "type_signature": "difference(frozenset, frozenset)",
            "value_signature": "difference(frozenset({frozenset({(2, (8, 3))}), frozenset({(1, frozenset({frozenset({(2, (8, 3))}), frozenset({(2)"
          },
          {
            "type_signature": "difference(frozenset, frozenset)",
            "value_signature": "difference(frozenset(len=6), frozenset({frozenset({(2, (5, 4))}), frozenset({(2)"
          }
        ],
        "code_context": "x6 = difference(x1, x5)"
      }
    },
    "type_signatures": [
      "difference(frozenset, frozenset)"
    ],
    "value_signatures": [
      "difference(frozenset(len=6), frozenset({frozenset({(2, (5, 4))}), frozenset({(2)",
      "difference(frozenset({frozenset({(2, (8, 3))}), frozenset({(1, frozenset({frozenset({(2, (8, 3))}), frozenset({(2)",
      "difference(frozenset({frozenset({(1, (6, 1))}), frozenset({(3, frozenset({frozenset({(2, (7, 5))})}))",
      "difference(frozenset({frozenset({(1, (6, 3))}), frozenset({(2, frozenset({frozenset({(2, (2, 2))})}))"
    ]
  },
  "compose": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2025": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function hfrontier at 0x1049c4a60>, <function center at 0x1049b9d30>)"
          }
        ],
        "code_context": "x7 = compose(hfrontier, center)"
      }
    },
    "type_signatures": [
      "compose(function, function)"
    ],
    "value_signatures": [
      "compose(<function hfrontier at 0x1049c4a60>, <function center at 0x1049b9d30>)"
    ]
  },
  "fork": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2026": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_i at 0x1049d7f70>, <function color at 0x1049c0040>, <function compose.<locals>.<lambda> at 0x104ea20d0)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_i at 0x1049d7f70>, <function color at 0x1049c0040>, <function compose.<locals>.<lambda> at 0x104ea2160)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_i at 0x1049d7f70>, <function color at 0x1049c0040>, <function compose.<locals>.<lambda> at 0x104ea21f0)"
          }
        ],
        "code_context": "x8 = fork(recolor_i, color, x7)"
      }
    },
    "type_signatures": [
      "fork(function, function, function)"
    ],
    "value_signatures": [
      "fork(<function recolor_i at 0x1049d7f70>, <function color at 0x1049c0040>, <function compose.<locals>.<lambda> at 0x104ea21f0)",
      "fork(<function recolor_i at 0x1049d7f70>, <function color at 0x1049c0040>, <function compose.<locals>.<lambda> at 0x104ea20d0)",
      "fork(<function recolor_i at 0x1049d7f70>, <function color at 0x1049c0040>, <function compose.<locals>.<lambda> at 0x104ea2160)"
    ]
  },
  "color": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2027": {
        "count": 12,
        "signatures": [
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(1, (6, 1))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(3, (4, 3))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(3, (1, 1))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(1, (6, 3))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(3, (4, 7))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(1, (1, 1))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(3, (6, 2))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(3, (3, 8))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(1, (7, 1))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(3, (0, 3))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(1, (9, 8))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(3, (3, 5))}))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "color(frozenset)"
    ],
    "value_signatures": [
      "color(frozenset({(1, (6, 3))}))",
      "color(frozenset({(3, (6, 2))}))",
      "color(frozenset({(1, (6, 1))}))",
      "color(frozenset({(3, (4, 7))}))",
      "color(frozenset({(1, (9, 8))}))",
      "color(frozenset({(1, (7, 1))}))",
      "color(frozenset({(3, (1, 1))}))",
      "color(frozenset({(3, (3, 5))}))",
      "color(frozenset({(3, (3, 8))}))",
      "color(frozenset({(1, (1, 1))}))",
      "color(frozenset({(3, (0, 3))}))",
      "color(frozenset({(3, (4, 3))}))"
    ]
  },
  "center": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2027": {
        "count": 12,
        "signatures": [
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(1, (6, 1))}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(3, (4, 3))}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(3, (1, 1))}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(1, (6, 3))}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(3, (4, 7))}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(1, (1, 1))}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(3, (6, 2))}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(3, (3, 8))}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(1, (7, 1))}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(3, (0, 3))}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(1, (9, 8))}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(3, (3, 5))}))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "center(frozenset)"
    ],
    "value_signatures": [
      "center(frozenset({(3, (3, 8))}))",
      "center(frozenset({(1, (7, 1))}))",
      "center(frozenset({(3, (4, 3))}))",
      "center(frozenset({(3, (4, 7))}))",
      "center(frozenset({(3, (1, 1))}))",
      "center(frozenset({(1, (6, 1))}))",
      "center(frozenset({(3, (6, 2))}))",
      "center(frozenset({(3, (0, 3))}))",
      "center(frozenset({(1, (6, 3))}))",
      "center(frozenset({(3, (3, 5))}))",
      "center(frozenset({(1, (1, 1))}))",
      "center(frozenset({(1, (9, 8))}))"
    ]
  },
  "uppermost": {
    "calls": 24,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2027": {
        "count": 12,
        "signatures": [
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(1, (6, 1))}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(3, (4, 3))}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(3, (1, 1))}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(1, (6, 3))}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(3, (4, 7))}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(1, (1, 1))}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(3, (6, 2))}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(3, (3, 8))}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(1, (7, 1))}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(3, (0, 3))}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(1, (9, 8))}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(3, (3, 5))}))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "uppermost(frozenset)"
    ],
    "value_signatures": [
      "uppermost(frozenset({(3, (3, 5))}))",
      "uppermost(frozenset({(1, (6, 3))}))",
      "uppermost(frozenset({(1, (9, 8))}))",
      "uppermost(frozenset({(3, (6, 2))}))",
      "uppermost(frozenset({(3, (4, 3))}))",
      "uppermost(frozenset({(3, (0, 3))}))",
      "uppermost(frozenset({(1, (6, 1))}))",
      "uppermost(frozenset({(3, (1, 1))}))",
      "uppermost(frozenset({(1, (1, 1))}))",
      "uppermost(frozenset({(1, (7, 1))}))",
      "uppermost(frozenset({(3, (4, 7))}))",
      "uppermost(frozenset({(3, (3, 8))}))"
    ]
  },
  "height_f": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2027": {
        "count": 12,
        "signatures": [
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(1, (6, 1))}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(3, (4, 3))}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(3, (1, 1))}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(1, (6, 3))}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(3, (4, 7))}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(1, (1, 1))}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(3, (6, 2))}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(3, (3, 8))}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(1, (7, 1))}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(3, (0, 3))}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(1, (9, 8))}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(3, (3, 5))}))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "height_f(frozenset)"
    ],
    "value_signatures": [
      "height_f(frozenset({(1, (9, 8))}))",
      "height_f(frozenset({(1, (6, 3))}))",
      "height_f(frozenset({(3, (4, 3))}))",
      "height_f(frozenset({(1, (1, 1))}))",
      "height_f(frozenset({(3, (4, 7))}))",
      "height_f(frozenset({(3, (0, 3))}))",
      "height_f(frozenset({(3, (6, 2))}))",
      "height_f(frozenset({(3, (1, 1))}))",
      "height_f(frozenset({(1, (6, 1))}))",
      "height_f(frozenset({(3, (3, 5))}))",
      "height_f(frozenset({(1, (7, 1))}))",
      "height_f(frozenset({(3, (3, 8))}))"
    ]
  },
  "lowermost": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2027": {
        "count": 12,
        "signatures": [
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(1, (6, 1))}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(3, (4, 3))}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(3, (1, 1))}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(1, (6, 3))}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(3, (4, 7))}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(1, (1, 1))}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(3, (6, 2))}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(3, (3, 8))}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(1, (7, 1))}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(3, (0, 3))}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(1, (9, 8))}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(3, (3, 5))}))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "lowermost(frozenset)"
    ],
    "value_signatures": [
      "lowermost(frozenset({(1, (6, 3))}))",
      "lowermost(frozenset({(3, (3, 5))}))",
      "lowermost(frozenset({(3, (6, 2))}))",
      "lowermost(frozenset({(1, (7, 1))}))",
      "lowermost(frozenset({(1, (6, 1))}))",
      "lowermost(frozenset({(3, (1, 1))}))",
      "lowermost(frozenset({(3, (0, 3))}))",
      "lowermost(frozenset({(3, (3, 8))}))",
      "lowermost(frozenset({(3, (4, 7))}))",
      "lowermost(frozenset({(1, (9, 8))}))",
      "lowermost(frozenset({(3, (4, 3))}))",
      "lowermost(frozenset({(1, (1, 1))}))"
    ]
  },
  "leftmost": {
    "calls": 24,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2027": {
        "count": 12,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (6, 1))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, (4, 3))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, (1, 1))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (6, 3))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, (4, 7))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (1, 1))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, (6, 2))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, (3, 8))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (7, 1))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, (0, 3))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (9, 8))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, (3, 5))}))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "leftmost(frozenset)"
    ],
    "value_signatures": [
      "leftmost(frozenset({(3, (4, 3))}))",
      "leftmost(frozenset({(1, (1, 1))}))",
      "leftmost(frozenset({(3, (3, 8))}))",
      "leftmost(frozenset({(1, (7, 1))}))",
      "leftmost(frozenset({(1, (6, 1))}))",
      "leftmost(frozenset({(1, (9, 8))}))",
      "leftmost(frozenset({(3, (4, 7))}))",
      "leftmost(frozenset({(3, (3, 5))}))",
      "leftmost(frozenset({(3, (0, 3))}))",
      "leftmost(frozenset({(3, (1, 1))}))",
      "leftmost(frozenset({(3, (6, 2))}))",
      "leftmost(frozenset({(1, (6, 3))}))"
    ]
  },
  "width_f": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2027": {
        "count": 12,
        "signatures": [
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(1, (6, 1))}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(3, (4, 3))}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(3, (1, 1))}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(1, (6, 3))}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(3, (4, 7))}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(1, (1, 1))}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(3, (6, 2))}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(3, (3, 8))}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(1, (7, 1))}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(3, (0, 3))}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(1, (9, 8))}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(3, (3, 5))}))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "width_f(frozenset)"
    ],
    "value_signatures": [
      "width_f(frozenset({(1, (9, 8))}))",
      "width_f(frozenset({(3, (1, 1))}))",
      "width_f(frozenset({(1, (6, 1))}))",
      "width_f(frozenset({(3, (6, 2))}))",
      "width_f(frozenset({(1, (1, 1))}))",
      "width_f(frozenset({(3, (4, 7))}))",
      "width_f(frozenset({(3, (0, 3))}))",
      "width_f(frozenset({(3, (3, 8))}))",
      "width_f(frozenset({(3, (3, 5))}))",
      "width_f(frozenset({(3, (4, 3))}))",
      "width_f(frozenset({(1, (6, 3))}))",
      "width_f(frozenset({(1, (7, 1))}))"
    ]
  },
  "rightmost": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2027": {
        "count": 12,
        "signatures": [
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(1, (6, 1))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(3, (4, 3))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(3, (1, 1))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(1, (6, 3))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(3, (4, 7))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(1, (1, 1))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(3, (6, 2))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(3, (3, 8))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(1, (7, 1))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(3, (0, 3))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(1, (9, 8))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(3, (3, 5))}))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "rightmost(frozenset)"
    ],
    "value_signatures": [
      "rightmost(frozenset({(1, (9, 8))}))",
      "rightmost(frozenset({(3, (4, 3))}))",
      "rightmost(frozenset({(1, (1, 1))}))",
      "rightmost(frozenset({(3, (1, 1))}))",
      "rightmost(frozenset({(3, (4, 7))}))",
      "rightmost(frozenset({(3, (6, 2))}))",
      "rightmost(frozenset({(3, (3, 8))}))",
      "rightmost(frozenset({(1, (7, 1))}))",
      "rightmost(frozenset({(3, (0, 3))}))",
      "rightmost(frozenset({(3, (3, 5))}))",
      "rightmost(frozenset({(1, (6, 1))}))",
      "rightmost(frozenset({(1, (6, 3))}))"
    ]
  },
  "hfrontier": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2027": {
        "count": 11,
        "signatures": [
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((6, 1))"
          },
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((4, 3))"
          },
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((1, 1))"
          },
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((6, 3))"
          },
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((4, 7))"
          },
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((6, 2))"
          },
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((3, 8))"
          },
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((7, 1))"
          },
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((0, 3))"
          },
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((9, 8))"
          },
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((3, 5))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "hfrontier(tuple)"
    ],
    "value_signatures": [
      "hfrontier((9, 8))",
      "hfrontier((3, 5))",
      "hfrontier((6, 3))",
      "hfrontier((1, 1))",
      "hfrontier((6, 1))",
      "hfrontier((4, 7))",
      "hfrontier((0, 3))",
      "hfrontier((4, 3))",
      "hfrontier((3, 8))",
      "hfrontier((7, 1))",
      "hfrontier((6, 2))"
    ]
  },
  "recolor_i": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2027": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(1, frozenset(len=30))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(3, frozenset(len=30))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "recolor_i(int, frozenset)"
    ],
    "value_signatures": [
      "recolor_i(3, frozenset(len=30))",
      "recolor_i(1, frozenset(len=30))"
    ]
  },
  "toindices_i": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2027": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset(len=30))"
          }
        ],
        "code_context": "x9 = mapply(x8, x6)"
      }
    },
    "type_signatures": [
      "toindices_i(frozenset)"
    ],
    "value_signatures": [
      "toindices_i(frozenset(len=30))"
    ]
  },
  "paint": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2028": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=10), frozenset(len=90))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=9), frozenset(len=60))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=12), frozenset(len=120))"
          }
        ],
        "code_context": "O = paint(x4, x9)"
      }
    },
    "type_signatures": [
      "paint(tuple, frozenset)"
    ],
    "value_signatures": [
      "paint(tuple(len=9), frozenset(len=60))",
      "paint(tuple(len=10), frozenset(len=90))",
      "paint(tuple(len=12), frozenset(len=120))"
    ]
  }
}