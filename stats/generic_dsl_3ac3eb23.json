{
  "objects": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1662": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(tuple(len=6), True, False, True)"
          }
        ],
        "code_context": "x1 = objects(I, T, F, T)"
      }
    },
    "type_signatures": [
      "objects(tuple, bool, bool, bool)"
    ],
    "value_signatures": [
      "objects(tuple(len=6), True, False, True)"
    ]
  },
  "mostcolor_t": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1662": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(tuple(len=6))"
          }
        ],
        "code_context": "x1 = objects(I, T, F, T)"
      }
    },
    "type_signatures": [
      "mostcolor_t(tuple)"
    ],
    "value_signatures": [
      "mostcolor_t(tuple(len=6))"
    ]
  },
  "asindices": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1662": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(tuple(len=6))"
          }
        ],
        "code_context": "x1 = objects(I, T, F, T)"
      }
    },
    "type_signatures": [
      "asindices(tuple)"
    ],
    "value_signatures": [
      "asindices(tuple(len=6))"
    ]
  },
  "dneighbors": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1662": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 6))"
          }
        ],
        "code_context": "x1 = objects(I, T, F, T)"
      }
    },
    "type_signatures": [
      "dneighbors(tuple)"
    ],
    "value_signatures": [
      "dneighbors((0, 6))",
      "dneighbors((0, 2))",
      "dneighbors((0, 1))",
      "dneighbors((0, 9))",
      "dneighbors((0, 5))"
    ]
  },
  "chain": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1663": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function ineighbors at 0x102d54790>, <function last at 0x102d54af0>, <function first at 0x102d50820>)"
          }
        ],
        "code_context": "x2 = chain(ineighbors, last, first)"
      }
    },
    "type_signatures": [
      "chain(function, function, function)"
    ],
    "value_signatures": [
      "chain(<function ineighbors at 0x102d54790>, <function last at 0x102d54af0>, <function first at 0x102d50820>)"
    ]
  },
  "fork": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1664": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_i at 0x102d65550>, <function color at 0x102d4c5e0>, <function chain.<locals>.<lambda> at 0x103223670>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_i at 0x102d65550>, <function color at 0x102d4c5e0>, <function chain.<locals>.<lambda> at 0x103223700>)"
          }
        ],
        "code_context": "x3 = fork(recolor_i, color, x2)"
      }
    },
    "type_signatures": [
      "fork(function, function, function)"
    ],
    "value_signatures": [
      "fork(<function recolor_i at 0x102d65550>, <function color at 0x102d4c5e0>, <function chain.<locals>.<lambda> at 0x103223700>)",
      "fork(<function recolor_i at 0x102d65550>, <function color at 0x102d4c5e0>, <function chain.<locals>.<lambda> at 0x103223670>)"
    ]
  },
  "mapply": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1665": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function fork.<locals>.<lambda> at 0x103223700>, frozenset({frozenset({(4, (0, 1))})}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function fork.<locals>.<lambda> at 0x103223670>, frozenset({frozenset({(2, (0, 1))}), frozenset({(8)"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function fork.<locals>.<lambda> at 0x103223700>, frozenset({frozenset({(3, (0, 2))}), frozenset({(7)"
          }
        ],
        "code_context": "x4 = mapply(x3, x1)"
      }
    },
    "type_signatures": [
      "mapply(function, frozenset)"
    ],
    "value_signatures": [
      "mapply(<function fork.<locals>.<lambda> at 0x103223700>, frozenset({frozenset({(4, (0, 1))})}))",
      "mapply(<function fork.<locals>.<lambda> at 0x103223670>, frozenset({frozenset({(2, (0, 1))}), frozenset({(8)",
      "mapply(<function fork.<locals>.<lambda> at 0x103223700>, frozenset({frozenset({(3, (0, 2))}), frozenset({(7)"
    ]
  },
  "apply": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1665": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x103223700>, frozenset({frozenset({(4, (0, 1))})}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x103223670>, frozenset({frozenset({(2, (0, 1))}), frozenset({(8)"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x103223700>, frozenset({frozenset({(3, (0, 2))}), frozenset({(7)"
          }
        ],
        "code_context": "x4 = mapply(x3, x1)"
      }
    },
    "type_signatures": [
      "apply(function, frozenset)"
    ],
    "value_signatures": [
      "apply(<function fork.<locals>.<lambda> at 0x103223700>, frozenset({frozenset({(4, (0, 1))})}))",
      "apply(<function fork.<locals>.<lambda> at 0x103223670>, frozenset({frozenset({(2, (0, 1))}), frozenset({(8)",
      "apply(<function fork.<locals>.<lambda> at 0x103223700>, frozenset({frozenset({(3, (0, 2))}), frozenset({(7)"
    ]
  },
  "color": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1665": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(4, (0, 1))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(2, (0, 1))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(8, (0, 5))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(3, (0, 2))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(7, (0, 9))}))"
          },
          {
            "type_signature": "color(frozenset)",
            "value_signature": "color(frozenset({(6, (0, 6))}))"
          }
        ],
        "code_context": "x4 = mapply(x3, x1)"
      }
    },
    "type_signatures": [
      "color(frozenset)"
    ],
    "value_signatures": [
      "color(frozenset({(4, (0, 1))}))",
      "color(frozenset({(2, (0, 1))}))",
      "color(frozenset({(8, (0, 5))}))",
      "color(frozenset({(7, (0, 9))}))",
      "color(frozenset({(3, (0, 2))}))",
      "color(frozenset({(6, (0, 6))}))"
    ]
  },
  "first": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1665": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(4, (0, 1))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(2, (0, 1))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(8, (0, 5))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(3, (0, 2))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(7, (0, 9))}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({(6, (0, 6))}))"
          }
        ],
        "code_context": "x4 = mapply(x3, x1)"
      },
      "solvers.py:1668": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((((0, 4, 0, 0, 0, 0, 0), (4, 0, 4, 0, 0, 0, 0)), ()"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((((0, 2, 0, 0, 0, 8, 0, 0, 0, 0), (2, 0, 2, 0, 8, )"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((((0, 0, 3, 0, 0, 0, 6, 0, 0, 7, 0, 0), (0, 3, 0, )"
          }
        ],
        "code_context": "x7 = first(x6)"
      }
    },
    "type_signatures": [
      "first(tuple)",
      "first(frozenset)"
    ],
    "value_signatures": [
      "first(frozenset({(4, (0, 1))}))",
      "first(frozenset({(3, (0, 2))}))",
      "first((((0, 2, 0, 0, 0, 8, 0, 0, 0, 0), (2, 0, 2, 0, 8, )",
      "first(frozenset({(2, (0, 1))}))",
      "first(frozenset({(7, (0, 9))}))",
      "first((((0, 0, 3, 0, 0, 0, 6, 0, 0, 7, 0, 0), (0, 3, 0, )",
      "first((((0, 4, 0, 0, 0, 0, 0), (4, 0, 4, 0, 0, 0, 0)), ()",
      "first(frozenset({(8, (0, 5))}))",
      "first(frozenset({(6, (0, 6))}))"
    ]
  },
  "last": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1665": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((4, (0, 1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (0, 1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (0, 5)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (0, 2)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((7, (0, 9)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((6, (0, 6)))"
          }
        ],
        "code_context": "x4 = mapply(x3, x1)"
      }
    },
    "type_signatures": [
      "last(tuple)"
    ],
    "value_signatures": [
      "last((4, (0, 1)))",
      "last((2, (0, 1)))",
      "last((6, (0, 6)))",
      "last((8, (0, 5)))",
      "last((7, (0, 9)))",
      "last((3, (0, 2)))"
    ]
  },
  "ineighbors": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1665": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 1))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 5))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 2))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 9))"
          },
          {
            "type_signature": "ineighbors(tuple)",
            "value_signature": "ineighbors((0, 6))"
          }
        ],
        "code_context": "x4 = mapply(x3, x1)"
      }
    },
    "type_signatures": [
      "ineighbors(tuple)"
    ],
    "value_signatures": [
      "ineighbors((0, 5))",
      "ineighbors((0, 9))",
      "ineighbors((0, 1))",
      "ineighbors((0, 2))",
      "ineighbors((0, 6))"
    ]
  },
  "recolor_i": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1665": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(4, frozenset({(-1, 0), (1, 0), (1, 2), (-1, 2)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(2, frozenset({(-1, 0), (1, 0), (1, 2), (-1, 2)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(8, frozenset({(-1, 6), (1, 6), (1, 4), (-1, 4)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(3, frozenset({(-1, 1), (1, 1), (-1, 3), (1, 3)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(7, frozenset({(1, 10), (1, 8), (-1, 8), (-1, 10)}))"
          },
          {
            "type_signature": "recolor_i(int, frozenset)",
            "value_signature": "recolor_i(6, frozenset({(-1, 7), (1, 5), (1, 7), (-1, 5)}))"
          }
        ],
        "code_context": "x4 = mapply(x3, x1)"
      }
    },
    "type_signatures": [
      "recolor_i(int, frozenset)"
    ],
    "value_signatures": [
      "recolor_i(4, frozenset({(-1, 0), (1, 0), (1, 2), (-1, 2)}))",
      "recolor_i(6, frozenset({(-1, 7), (1, 5), (1, 7), (-1, 5)}))",
      "recolor_i(2, frozenset({(-1, 0), (1, 0), (1, 2), (-1, 2)}))",
      "recolor_i(3, frozenset({(-1, 1), (1, 1), (-1, 3), (1, 3)}))",
      "recolor_i(8, frozenset({(-1, 6), (1, 6), (1, 4), (-1, 4)}))",
      "recolor_i(7, frozenset({(1, 10), (1, 8), (-1, 8), (-1, 10)}))"
    ]
  },
  "toindices_i": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1665": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(-1, 0), (1, 0), (1, 2), (-1, 2)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(-1, 6), (1, 6), (1, 4), (-1, 4)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(-1, 1), (1, 1), (-1, 3), (1, 3)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(1, 10), (1, 8), (-1, 8), (-1, 10)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(-1, 7), (1, 5), (1, 7), (-1, 5)}))"
          }
        ],
        "code_context": "x4 = mapply(x3, x1)"
      }
    },
    "type_signatures": [
      "toindices_i(frozenset)"
    ],
    "value_signatures": [
      "toindices_i(frozenset({(1, 10), (1, 8), (-1, 8), (-1, 10)}))",
      "toindices_i(frozenset({(-1, 1), (1, 1), (-1, 3), (1, 3)}))",
      "toindices_i(frozenset({(-1, 0), (1, 0), (1, 2), (-1, 2)}))",
      "toindices_i(frozenset({(-1, 7), (1, 5), (1, 7), (-1, 5)}))",
      "toindices_i(frozenset({(-1, 6), (1, 6), (1, 4), (-1, 4)}))"
    ]
  },
  "merge": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1665": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(4, (-1, 2)), (4, (1, 0)), ()"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(2, (-1, 0)), (2, (-1, 2)), )"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(7, (-1, 8)), (7, (1, 8)), ()"
          }
        ],
        "code_context": "x4 = mapply(x3, x1)"
      }
    },
    "type_signatures": [
      "merge(frozenset)"
    ],
    "value_signatures": [
      "merge(frozenset({frozenset({(2, (-1, 0)), (2, (-1, 2)), )",
      "merge(frozenset({frozenset({(7, (-1, 8)), (7, (1, 8)), ()",
      "merge(frozenset({frozenset({(4, (-1, 2)), (4, (1, 0)), ()"
    ]
  },
  "paint": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1666": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=6), frozenset({(4, (-1, 2)), (4, (-1, 0)), (4, (1, 2)))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=6), frozenset(len=8))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=6), frozenset(len=12))"
          }
        ],
        "code_context": "x5 = paint(I, x4)"
      }
    },
    "type_signatures": [
      "paint(tuple, frozenset)"
    ],
    "value_signatures": [
      "paint(tuple(len=6), frozenset({(4, (-1, 2)), (4, (-1, 0)), (4, (1, 2)))",
      "paint(tuple(len=6), frozenset(len=12))",
      "paint(tuple(len=6), frozenset(len=8))"
    ]
  },
  "vsplit": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1667": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "vsplit(tuple, int)",
            "value_signature": "vsplit(tuple(len=6), 3)"
          }
        ],
        "code_context": "x6 = vsplit(x5, THREE)"
      }
    },
    "type_signatures": [
      "vsplit(tuple, int)"
    ],
    "value_signatures": [
      "vsplit(tuple(len=6), 3)"
    ]
  },
  "crop": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1667": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=6), (0, 0), (2, 7))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=6), (2, 0), (2, 7))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=6), (4, 0), (2, 7))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=6), (0, 0), (2, 10))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=6), (2, 0), (2, 10))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=6), (4, 0), (2, 10))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=6), (0, 0), (2, 12))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=6), (2, 0), (2, 12))"
          },
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=6), (4, 0), (2, 12))"
          }
        ],
        "code_context": "x6 = vsplit(x5, THREE)"
      }
    },
    "type_signatures": [
      "crop(tuple, tuple, tuple)"
    ],
    "value_signatures": [
      "crop(tuple(len=6), (0, 0), (2, 10))",
      "crop(tuple(len=6), (4, 0), (2, 12))",
      "crop(tuple(len=6), (0, 0), (2, 7))",
      "crop(tuple(len=6), (2, 0), (2, 7))",
      "crop(tuple(len=6), (4, 0), (2, 10))",
      "crop(tuple(len=6), (4, 0), (2, 7))",
      "crop(tuple(len=6), (0, 0), (2, 12))",
      "crop(tuple(len=6), (2, 0), (2, 10))",
      "crop(tuple(len=6), (2, 0), (2, 12))"
    ]
  },
  "vconcat": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1669": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "vconcat(tuple, tuple)",
            "value_signature": "vconcat(((0, 4, 0, 0, 0, 0, 0), (4, 0, 4, 0, 0, 0, 0)), ((0, 4, 0, 0, 0, 0, 0), (4, 0, 4, 0, 0, 0, 0)))"
          },
          {
            "type_signature": "vconcat(tuple, tuple)",
            "value_signature": "vconcat(((0, 2, 0, 0, 0, 8, 0, 0, 0, 0), (2, 0, 2, 0, 8, 0, ((0, 2, 0, 0, 0, 8, 0, 0, 0, 0), (2, 0, 2, 0, 8, 0)"
          },
          {
            "type_signature": "vconcat(tuple, tuple)",
            "value_signature": "vconcat(((0, 0, 3, 0, 0, 0, 6, 0, 0, 7, 0, 0), (0, 3, 0, 3, ((0, 0, 3, 0, 0, 0, 6, 0, 0, 7, 0, 0), (0, 3, 0, 3)"
          }
        ],
        "code_context": "x8 = vconcat(x7, x7)"
      },
      "solvers.py:1670": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "vconcat(tuple, tuple)",
            "value_signature": "vconcat(((0, 4, 0, 0, 0, 0, 0), (4, 0, 4, 0, 0, 0, 0)), ((0, 4, 0, 0, 0, 0, 0), (4, 0, 4, 0, 0, 0, 0), (0,)"
          },
          {
            "type_signature": "vconcat(tuple, tuple)",
            "value_signature": "vconcat(((0, 2, 0, 0, 0, 8, 0, 0, 0, 0), (2, 0, 2, 0, 8, 0, ((0, 2, 0, 0, 0, 8, 0, 0, 0, 0), (2, 0, 2, 0, 8, 0)"
          },
          {
            "type_signature": "vconcat(tuple, tuple)",
            "value_signature": "vconcat(((0, 0, 3, 0, 0, 0, 6, 0, 0, 7, 0, 0), (0, 3, 0, 3, ((0, 0, 3, 0, 0, 0, 6, 0, 0, 7, 0, 0), (0, 3, 0, 3)"
          }
        ],
        "code_context": "O = vconcat(x7, x8)"
      }
    },
    "type_signatures": [
      "vconcat(tuple, tuple)"
    ],
    "value_signatures": [
      "vconcat(((0, 0, 3, 0, 0, 0, 6, 0, 0, 7, 0, 0), (0, 3, 0, 3, ((0, 0, 3, 0, 0, 0, 6, 0, 0, 7, 0, 0), (0, 3, 0, 3)",
      "vconcat(((0, 4, 0, 0, 0, 0, 0), (4, 0, 4, 0, 0, 0, 0)), ((0, 4, 0, 0, 0, 0, 0), (4, 0, 4, 0, 0, 0, 0), (0,)",
      "vconcat(((0, 2, 0, 0, 0, 8, 0, 0, 0, 0), (2, 0, 2, 0, 8, 0, ((0, 2, 0, 0, 0, 8, 0, 0, 0, 0), (2, 0, 2, 0, 8, 0)",
      "vconcat(((0, 4, 0, 0, 0, 0, 0), (4, 0, 4, 0, 0, 0, 0)), ((0, 4, 0, 0, 0, 0, 0), (4, 0, 4, 0, 0, 0, 0)))"
    ]
  }
}