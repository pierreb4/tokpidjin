{
  "rbind": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3266": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "rbind(function, int)",
            "value_signature": "rbind(<function divide at 0x100b82ca0>, 3)"
          }
        ],
        "code_context": "x1 = rbind(divide, THREE)"
      },
      "solvers.py:3267": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "rbind(function, int)",
            "value_signature": "rbind(<function multiply at 0x100b91ee0>, 3)"
          }
        ],
        "code_context": "x2 = rbind(multiply, THREE)"
      }
    },
    "type_signatures": [
      "rbind(function, int)"
    ],
    "value_signatures": [
      "rbind(<function multiply at 0x100b91ee0>, 3)",
      "rbind(<function divide at 0x100b82ca0>, 3)"
    ]
  },
  "compose": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3268": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x100fd1160>, <function rbind.<locals>.<lambda> at 0x100fd11f0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x100fd1310>, <function rbind.<locals>.<lambda> at 0x100fd13a0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x100fd11f0>, <function rbind.<locals>.<lambda> at 0x100fd1160>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x100fd13a0>, <function rbind.<locals>.<lambda> at 0x100fd1310>)"
          }
        ],
        "code_context": "x3 = compose(x2, x1)"
      },
      "solvers.py:3270": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x100fd1310>, <function last at 0x100b8e700>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x100fd11f0>, <function last at 0x100b8e700>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x100fd13a0>, <function last at 0x100b8e700>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x100fd1160>, <function last at 0x100b8e700>)"
          }
        ],
        "code_context": "x5 = compose(x4, last)"
      }
    },
    "type_signatures": [
      "compose(function, function)"
    ],
    "value_signatures": [
      "compose(<function fork.<locals>.<lambda> at 0x100fd1310>, <function last at 0x100b8e700>)",
      "compose(<function fork.<locals>.<lambda> at 0x100fd11f0>, <function last at 0x100b8e700>)",
      "compose(<function fork.<locals>.<lambda> at 0x100fd1160>, <function last at 0x100b8e700>)",
      "compose(<function rbind.<locals>.<lambda> at 0x100fd11f0>, <function rbind.<locals>.<lambda> at 0x100fd1160>)",
      "compose(<function rbind.<locals>.<lambda> at 0x100fd1160>, <function rbind.<locals>.<lambda> at 0x100fd11f0>)",
      "compose(<function rbind.<locals>.<lambda> at 0x100fd1310>, <function rbind.<locals>.<lambda> at 0x100fd13a0>)",
      "compose(<function rbind.<locals>.<lambda> at 0x100fd13a0>, <function rbind.<locals>.<lambda> at 0x100fd1310>)",
      "compose(<function fork.<locals>.<lambda> at 0x100fd13a0>, <function last at 0x100b8e700>)"
    ]
  },
  "fork": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3269": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function equality at 0x100b860d0>, <function identity at 0x100b8e160>, <function compose.<locals>.<lambda> at 0x100fd1280)"
          }
        ],
        "code_context": "x4 = fork(equality, identity, x3)"
      }
    },
    "type_signatures": [
      "fork(function, function, function)"
    ],
    "value_signatures": [
      "fork(<function equality at 0x100b860d0>, <function identity at 0x100b8e160>, <function compose.<locals>.<lambda> at 0x100fd1280)"
    ]
  },
  "f_ofcolor": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3271": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 4, 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0), (4, 4, 4, 4, 4, 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 4, 4, 4, 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0), (4, 4, 4, 4, 4, 4, 4)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, , 4)"
          }
        ],
        "code_context": "x6 = f_ofcolor(I, FOUR)"
      }
    },
    "type_signatures": [
      "f_ofcolor(tuple, int)"
    ],
    "value_signatures": [
      "f_ofcolor(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 4, 4)",
      "f_ofcolor(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 4, 4, 4, 4)",
      "f_ofcolor(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0), (4, 4, 4, 4, 4, 4, 4)",
      "f_ofcolor(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0), (4, 4, 4, 4, 4, 4)",
      "f_ofcolor(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, , 4)",
      "f_ofcolor(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 4)"
    ]
  },
  "sfilter_f": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3272": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset(len=26), <function compose.<locals>.<lambda> at 0x100fd13a0)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset(len=22), <function compose.<locals>.<lambda> at 0x100fd1160)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset(len=22), <function compose.<locals>.<lambda> at 0x100fd1310)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset(len=28), <function compose.<locals>.<lambda> at 0x100fd11f0)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset(len=20), <function compose.<locals>.<lambda> at 0x100fd13a0)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset(len=34), <function compose.<locals>.<lambda> at 0x100fd1160)"
          }
        ],
        "code_context": "x7 = sfilter_f(x6, x5)"
      }
    },
    "type_signatures": [
      "sfilter_f(frozenset, function)"
    ],
    "value_signatures": [
      "sfilter_f(frozenset(len=26), <function compose.<locals>.<lambda> at 0x100fd13a0)",
      "sfilter_f(frozenset(len=22), <function compose.<locals>.<lambda> at 0x100fd1310)",
      "sfilter_f(frozenset(len=22), <function compose.<locals>.<lambda> at 0x100fd1160)",
      "sfilter_f(frozenset(len=20), <function compose.<locals>.<lambda> at 0x100fd13a0)",
      "sfilter_f(frozenset(len=34), <function compose.<locals>.<lambda> at 0x100fd1160)",
      "sfilter_f(frozenset(len=28), <function compose.<locals>.<lambda> at 0x100fd11f0)"
    ]
  },
  "last": {
    "calls": 152,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3272": {
        "count": 47,
        "signatures": [
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 2))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 0))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 6))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 8))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 5))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 3))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 9))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 11))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 12))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 2))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 4))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 10))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 1))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 5))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 11))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 7))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 8))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 0))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 1))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 4))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 6))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 12))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 3))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 7))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 9))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 10))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 5))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 2))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 8))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 1))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 7))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 4))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 10))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 3))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 9))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 0))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 6))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 11))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 13))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 13))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 12))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 14))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 15))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 14))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 16))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 15))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 16))"
          }
        ],
        "code_context": "x7 = sfilter_f(x6, x5)"
      }
    },
    "type_signatures": [
      "last(tuple)"
    ],
    "value_signatures": [
      "last((1, 11))",
      "last((0, 0))",
      "last((0, 11))",
      "last((1, 3))",
      "last((2, 3))",
      "last((2, 12))",
      "last((2, 14))",
      "last((1, 13))",
      "last((0, 4))",
      "last((1, 10))",
      "last((0, 2))",
      "last((1, 15))",
      "last((0, 1))",
      "last((1, 12))",
      "last((0, 12))",
      "last((2, 7))",
      "last((2, 16))",
      "last((0, 6))",
      "last((2, 8))",
      "last((0, 10))",
      "last((2, 1))",
      "last((0, 15))",
      "last((0, 9))",
      "last((0, 5))",
      "last((0, 7))",
      "last((1, 6))",
      "last((2, 11))",
      "last((1, 5))",
      "last((1, 14))",
      "last((1, 9))",
      "last((2, 0))",
      "last((0, 13))",
      "last((2, 5))",
      "last((1, 8))",
      "last((1, 4))",
      "last((1, 7))",
      "last((0, 3))",
      "last((0, 8))",
      "last((1, 2))",
      "last((1, 0))",
      "last((2, 10))",
      "last((2, 6))",
      "last((2, 9))",
      "last((1, 16))",
      "last((2, 2))",
      "last((1, 1))",
      "last((2, 4))"
    ]
  },
  "identity": {
    "calls": 152,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3272": {
        "count": 17,
        "signatures": [
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(2)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(0)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(6)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(8)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(5)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(3)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(9)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(11)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(12)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(4)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(10)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(1)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(7)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(13)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(14)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(15)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(16)"
          }
        ],
        "code_context": "x7 = sfilter_f(x6, x5)"
      }
    },
    "type_signatures": [
      "identity(int)"
    ],
    "value_signatures": [
      "identity(4)",
      "identity(6)",
      "identity(5)",
      "identity(14)",
      "identity(3)",
      "identity(15)",
      "identity(0)",
      "identity(11)",
      "identity(9)",
      "identity(13)",
      "identity(8)",
      "identity(12)",
      "identity(16)",
      "identity(2)",
      "identity(7)",
      "identity(10)",
      "identity(1)"
    ]
  },
  "divide": {
    "calls": 152,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3272": {
        "count": 17,
        "signatures": [
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(2, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(0, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(6, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(8, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(5, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(3, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(9, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(11, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(12, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(4, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(10, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(1, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(7, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(13, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(14, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(15, 3)"
          },
          {
            "type_signature": "divide(int, int)",
            "value_signature": "divide(16, 3)"
          }
        ],
        "code_context": "x7 = sfilter_f(x6, x5)"
      }
    },
    "type_signatures": [
      "divide(int, int)"
    ],
    "value_signatures": [
      "divide(8, 3)",
      "divide(10, 3)",
      "divide(12, 3)",
      "divide(6, 3)",
      "divide(5, 3)",
      "divide(7, 3)",
      "divide(0, 3)",
      "divide(2, 3)",
      "divide(15, 3)",
      "divide(16, 3)",
      "divide(9, 3)",
      "divide(11, 3)",
      "divide(4, 3)",
      "divide(14, 3)",
      "divide(3, 3)",
      "divide(1, 3)",
      "divide(13, 3)"
    ]
  },
  "multiply": {
    "calls": 152,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3272": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "multiply(int, int)",
            "value_signature": "multiply(0, 3)"
          },
          {
            "type_signature": "multiply(int, int)",
            "value_signature": "multiply(2, 3)"
          },
          {
            "type_signature": "multiply(int, int)",
            "value_signature": "multiply(1, 3)"
          },
          {
            "type_signature": "multiply(int, int)",
            "value_signature": "multiply(3, 3)"
          },
          {
            "type_signature": "multiply(int, int)",
            "value_signature": "multiply(4, 3)"
          },
          {
            "type_signature": "multiply(int, int)",
            "value_signature": "multiply(5, 3)"
          }
        ],
        "code_context": "x7 = sfilter_f(x6, x5)"
      }
    },
    "type_signatures": [
      "multiply(int, int)"
    ],
    "value_signatures": [
      "multiply(4, 3)",
      "multiply(2, 3)",
      "multiply(0, 3)",
      "multiply(5, 3)",
      "multiply(1, 3)",
      "multiply(3, 3)"
    ]
  },
  "equality": {
    "calls": 152,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3272": {
        "count": 17,
        "signatures": [
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(2, 0)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(0, 0)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(6, 6)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(8, 6)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(5, 3)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(3, 3)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(9, 9)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(11, 9)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(12, 12)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(4, 3)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(10, 9)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(1, 0)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(7, 6)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(13, 12)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(14, 12)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(15, 15)"
          },
          {
            "type_signature": "equality(int, int)",
            "value_signature": "equality(16, 15)"
          }
        ],
        "code_context": "x7 = sfilter_f(x6, x5)"
      }
    },
    "type_signatures": [
      "equality(int, int)"
    ],
    "value_signatures": [
      "equality(4, 3)",
      "equality(9, 9)",
      "equality(11, 9)",
      "equality(5, 3)",
      "equality(12, 12)",
      "equality(3, 3)",
      "equality(14, 12)",
      "equality(8, 6)",
      "equality(1, 0)",
      "equality(0, 0)",
      "equality(2, 0)",
      "equality(16, 15)",
      "equality(10, 9)",
      "equality(15, 15)",
      "equality(7, 6)",
      "equality(6, 6)",
      "equality(13, 12)"
    ]
  },
  "fill": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3273": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 4, 6, frozenset(len=10))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0), (4, 4, 4, 4, 4, 6, frozenset(len=8))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 4, 4, 4, 6, frozenset(len=8))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 6, frozenset(len=10))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0), (4, 4, 4, 4, 4, 4, 6, frozenset(len=8))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, , 6, frozenset(len=12))"
          }
        ],
        "code_context": "O = fill(I, SIX, x7)"
      }
    },
    "type_signatures": [
      "fill(tuple, int, frozenset)"
    ],
    "value_signatures": [
      "fill(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, , 6, frozenset(len=12))",
      "fill(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 4, 6, frozenset(len=10))",
      "fill(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 6, frozenset(len=10))",
      "fill(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4), (4, 4, 4, 4, 4, 6, frozenset(len=8))",
      "fill(((4, 0, 4, 0, 4, 0, 4, 0, 4, 0), (4, 4, 4, 4, 4, 4, 6, frozenset(len=8))",
      "fill(((0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0), (4, 4, 4, 4, 4, 6, frozenset(len=8))"
    ]
  },
  "toindices": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3273": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=10))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=8))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=12))"
          }
        ],
        "code_context": "O = fill(I, SIX, x7)"
      }
    },
    "type_signatures": [
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset(len=12))",
      "toindices(frozenset(len=8))",
      "toindices(frozenset(len=10))"
    ]
  }
}