{
  "f_ofcolor": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1079": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=9), 1)"
          }
        ],
        "code_context": "x1 = f_ofcolor(I, ONE)"
      }
    },
    "type_signatures": [
      "f_ofcolor(tuple, int)"
    ],
    "value_signatures": [
      "f_ofcolor(tuple(len=9), 1)"
    ]
  },
  "crop": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1080": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "crop(tuple, tuple, tuple)",
            "value_signature": "crop(tuple(len=9), (0, 0), (3, 3))"
          }
        ],
        "code_context": "x2 = crop(I, ORIGIN, THREE_BY_THREE)"
      }
    },
    "type_signatures": [
      "crop(tuple, tuple, tuple)"
    ],
    "value_signatures": [
      "crop(tuple(len=9), (0, 0), (3, 3))"
    ]
  },
  "asobject": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1081": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((2, 7, 3), (2, 3, 3), (3, 7, 7)))"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((4, 2, 2), (2, 6, 2), (6, 4, 4)))"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((3, 8, 6), (9, 8, 2), (9, 9, 9)))"
          },
          {
            "type_signature": "asobject(tuple)",
            "value_signature": "asobject(((3, 3, 9), (8, 4, 4), (8, 9, 8)))"
          }
        ],
        "code_context": "x3 = asobject(x2)"
      }
    },
    "type_signatures": [
      "asobject(tuple)"
    ],
    "value_signatures": [
      "asobject(((2, 7, 3), (2, 3, 3), (3, 7, 7)))",
      "asobject(((3, 8, 6), (9, 8, 2), (9, 9, 9)))",
      "asobject(((4, 2, 2), (2, 6, 2), (6, 4, 4)))",
      "asobject(((3, 3, 9), (8, 4, 4), (8, 9, 8)))"
    ]
  },
  "lbind": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1082": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x1036221f0>, frozenset(len=9))"
          }
        ],
        "code_context": "x4 = lbind(shift, x3)"
      }
    },
    "type_signatures": [
      "lbind(function, frozenset)"
    ],
    "value_signatures": [
      "lbind(<function shift at 0x1036221f0>, frozenset(len=9))"
    ]
  },
  "compose": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1083": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x103695790>, <function decrement at 0x103608040>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x103695700>, <function decrement at 0x103608040>)"
          }
        ],
        "code_context": "x5 = compose(x4, decrement)"
      }
    },
    "type_signatures": [
      "compose(function, function)"
    ],
    "value_signatures": [
      "compose(<function lbind.<locals>.<lambda> at 0x103695700>, <function decrement at 0x103608040>)",
      "compose(<function lbind.<locals>.<lambda> at 0x103695790>, <function decrement at 0x103608040>)"
    ]
  },
  "mapply": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1084": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function compose.<locals>.<lambda> at 0x103695700, frozenset({(7, 5), (1, 8), (4, 5), (4, 11), (7, 8))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function compose.<locals>.<lambda> at 0x103695790, frozenset({(7, 8), (4, 8), (1, 5)}))"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function compose.<locals>.<lambda> at 0x103695700, frozenset({(1, 5), (1, 11), (4, 8), (7, 11), (7, 8)"
          },
          {
            "type_signature": "mapply(function, frozenset)",
            "value_signature": "mapply(<function compose.<locals>.<lambda> at 0x103695790, frozenset(len=6))"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "mapply(function, frozenset)"
    ],
    "value_signatures": [
      "mapply(<function compose.<locals>.<lambda> at 0x103695790, frozenset(len=6))",
      "mapply(<function compose.<locals>.<lambda> at 0x103695700, frozenset({(1, 5), (1, 11), (4, 8), (7, 11), (7, 8)",
      "mapply(<function compose.<locals>.<lambda> at 0x103695700, frozenset({(7, 5), (1, 8), (4, 5), (4, 11), (7, 8))",
      "mapply(<function compose.<locals>.<lambda> at 0x103695790, frozenset({(7, 8), (4, 8), (1, 5)}))"
    ]
  },
  "apply": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1084": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function compose.<locals>.<lambda> at 0x103695700, frozenset({(7, 5), (1, 8), (4, 5), (4, 11), (7, 8))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function compose.<locals>.<lambda> at 0x103695790, frozenset({(7, 8), (4, 8), (1, 5)}))"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function compose.<locals>.<lambda> at 0x103695700, frozenset({(1, 5), (1, 11), (4, 8), (7, 11), (7, 8)"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function compose.<locals>.<lambda> at 0x103695790, frozenset(len=6))"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "apply(function, frozenset)"
    ],
    "value_signatures": [
      "apply(<function compose.<locals>.<lambda> at 0x103695700, frozenset({(7, 5), (1, 8), (4, 5), (4, 11), (7, 8))",
      "apply(<function compose.<locals>.<lambda> at 0x103695700, frozenset({(1, 5), (1, 11), (4, 8), (7, 11), (7, 8)",
      "apply(<function compose.<locals>.<lambda> at 0x103695790, frozenset({(7, 8), (4, 8), (1, 5)}))",
      "apply(<function compose.<locals>.<lambda> at 0x103695790, frozenset(len=6))"
    ]
  },
  "decrement": {
    "calls": 19,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1084": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((7, 5))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((1, 8))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((4, 5))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((4, 11))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((7, 8))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((4, 8))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((1, 5))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((1, 11))"
          },
          {
            "type_signature": "decrement(tuple)",
            "value_signature": "decrement((7, 11))"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "decrement(tuple)"
    ],
    "value_signatures": [
      "decrement((1, 5))",
      "decrement((4, 5))",
      "decrement((4, 8))",
      "decrement((7, 11))",
      "decrement((1, 11))",
      "decrement((4, 11))",
      "decrement((7, 5))",
      "decrement((7, 8))",
      "decrement((1, 8))"
    ]
  },
  "shift": {
    "calls": 19,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1084": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=9), (6, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=9), (0, 7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=9), (3, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=9), (3, 10))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=9), (6, 7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=9), (3, 7))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=9), (0, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=9), (0, 10))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=9), (6, 10))"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "shift(frozenset, tuple)"
    ],
    "value_signatures": [
      "shift(frozenset(len=9), (0, 7))",
      "shift(frozenset(len=9), (3, 4))",
      "shift(frozenset(len=9), (6, 7))",
      "shift(frozenset(len=9), (3, 10))",
      "shift(frozenset(len=9), (0, 10))",
      "shift(frozenset(len=9), (6, 10))",
      "shift(frozenset(len=9), (3, 7))",
      "shift(frozenset(len=9), (0, 4))",
      "shift(frozenset(len=9), (6, 4))"
    ]
  },
  "merge": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1084": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(2, (0, 7)), (7, (2, 8)), (3)"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(2, (6, 9)), (4, (8, 9)), (6)"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset({frozenset({(9, (5, 7)), (8, (3, 8)), (9)"
          },
          {
            "type_signature": "merge(frozenset)",
            "value_signature": "merge(frozenset(len=6))"
          }
        ],
        "code_context": "x6 = mapply(x5, x1)"
      }
    },
    "type_signatures": [
      "merge(frozenset)"
    ],
    "value_signatures": [
      "merge(frozenset({frozenset({(2, (6, 9)), (4, (8, 9)), (6)",
      "merge(frozenset({frozenset({(2, (0, 7)), (7, (2, 8)), (3)",
      "merge(frozenset({frozenset({(9, (5, 7)), (8, (3, 8)), (9)",
      "merge(frozenset(len=6))"
    ]
  },
  "paint": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1085": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=9), frozenset(len=45))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=9), frozenset(len=27))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(tuple(len=9), frozenset(len=54))"
          }
        ],
        "code_context": "O = paint(I, x6)"
      }
    },
    "type_signatures": [
      "paint(tuple, frozenset)"
    ],
    "value_signatures": [
      "paint(tuple(len=9), frozenset(len=54))",
      "paint(tuple(len=9), frozenset(len=27))",
      "paint(tuple(len=9), frozenset(len=45))"
    ]
  }
}