{
  "f_ofcolor": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1480": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=9), 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0), (0, 8, 0), (0, 0, 0)), 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=7), 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=12), 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(((0, 0, 0, 0, 0, 0), (0, 8, 0, 0, 0, 0), (0, 0, 0,, 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=10), 8)"
          }
        ],
        "code_context": "x1 = f_ofcolor(I, EIGHT)"
      }
    },
    "type_signatures": [
      "f_ofcolor(tuple, int)"
    ],
    "value_signatures": [
      "f_ofcolor(tuple(len=9), 8)",
      "f_ofcolor(tuple(len=10), 8)",
      "f_ofcolor(tuple(len=12), 8)",
      "f_ofcolor(((0, 0, 0), (0, 8, 0), (0, 0, 0)), 8)",
      "f_ofcolor(((0, 0, 0, 0, 0, 0), (0, 8, 0, 0, 0, 0), (0, 0, 0,, 8)",
      "f_ofcolor(tuple(len=7), 8)"
    ]
  },
  "prapply": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1481": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "prapply(function, frozenset, frozenset)",
            "value_signature": "prapply(<function connect at 0x103031ca0>, frozenset({(1, 2), (7, 2)}), frozenset({(1, 2), (7, 2)}))"
          },
          {
            "type_signature": "prapply(function, frozenset, frozenset)",
            "value_signature": "prapply(<function connect at 0x103031ca0>, frozenset({(1, 1)}), frozenset({(1, 1)}))"
          },
          {
            "type_signature": "prapply(function, frozenset, frozenset)",
            "value_signature": "prapply(<function connect at 0x103031ca0>, frozenset({(3, 1), (6, 3), (1, 3)}), frozenset({(3, 1), (6, 3), (1, 3)}))"
          },
          {
            "type_signature": "prapply(function, frozenset, frozenset)",
            "value_signature": "prapply(<function connect at 0x103031ca0>, frozenset({(4, 10), (9, 3), (4, 6), (5, 1), (1, 3), frozenset({(4, 10), (9, 3), (4, 6), (5, 1), (1, 3))"
          },
          {
            "type_signature": "prapply(function, frozenset, frozenset)",
            "value_signature": "prapply(<function connect at 0x103031ca0>, frozenset({(8, 7), (8, 2), (1, 1), (1, 9)}), frozenset({(8, 7), (8, 2), (1, 1), (1, 9)}))"
          },
          {
            "type_signature": "prapply(function, frozenset, frozenset)",
            "value_signature": "prapply(<function connect at 0x103031ca0>, frozenset({(1, 1), (3, 4)}), frozenset({(1, 1), (3, 4)}))"
          },
          {
            "type_signature": "prapply(function, frozenset, frozenset)",
            "value_signature": "prapply(<function connect at 0x103031ca0>, frozenset({(3, 2), (3, 9)}), frozenset({(3, 2), (3, 9)}))"
          },
          {
            "type_signature": "prapply(function, frozenset, frozenset)",
            "value_signature": "prapply(<function connect at 0x103031ca0>, frozenset({(7, 4), (6, 8), (1, 4), (2, 8)}), frozenset({(7, 4), (6, 8), (1, 4), (2, 8)}))"
          },
          {
            "type_signature": "prapply(function, frozenset, frozenset)",
            "value_signature": "prapply(<function connect at 0x103031ca0>, frozenset(len=7), frozenset(len=7))"
          }
        ],
        "code_context": "x2 = prapply(connect, x1, x1)"
      }
    },
    "type_signatures": [
      "prapply(function, frozenset, frozenset)"
    ],
    "value_signatures": [
      "prapply(<function connect at 0x103031ca0>, frozenset({(8, 7), (8, 2), (1, 1), (1, 9)}), frozenset({(8, 7), (8, 2), (1, 1), (1, 9)}))",
      "prapply(<function connect at 0x103031ca0>, frozenset(len=7), frozenset(len=7))",
      "prapply(<function connect at 0x103031ca0>, frozenset({(7, 4), (6, 8), (1, 4), (2, 8)}), frozenset({(7, 4), (6, 8), (1, 4), (2, 8)}))",
      "prapply(<function connect at 0x103031ca0>, frozenset({(1, 1)}), frozenset({(1, 1)}))",
      "prapply(<function connect at 0x103031ca0>, frozenset({(1, 1), (3, 4)}), frozenset({(1, 1), (3, 4)}))",
      "prapply(<function connect at 0x103031ca0>, frozenset({(1, 2), (7, 2)}), frozenset({(1, 2), (7, 2)}))",
      "prapply(<function connect at 0x103031ca0>, frozenset({(3, 2), (3, 9)}), frozenset({(3, 2), (3, 9)}))",
      "prapply(<function connect at 0x103031ca0>, frozenset({(3, 1), (6, 3), (1, 3)}), frozenset({(3, 1), (6, 3), (1, 3)}))",
      "prapply(<function connect at 0x103031ca0>, frozenset({(4, 10), (9, 3), (4, 6), (5, 1), (1, 3), frozenset({(4, 10), (9, 3), (4, 6), (5, 1), (1, 3))"
    ]
  },
  "connect": {
    "calls": 128,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1481": {
        "count": 124,
        "signatures": [
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 2), (1, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 2), (1, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 2), (7, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 2), (7, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 1), (1, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((3, 1), (3, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((6, 3), (3, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 3), (3, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((3, 1), (6, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((6, 3), (6, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 3), (6, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((3, 1), (1, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((6, 3), (1, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 3), (1, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 10), (4, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 3), (4, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 6), (4, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 1), (4, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 3), (4, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 10), (9, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 3), (9, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 6), (9, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 1), (9, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 3), (9, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 10), (4, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 3), (4, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 6), (4, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 1), (4, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 3), (4, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 10), (5, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 3), (5, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 6), (5, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 1), (5, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 3), (5, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 10), (1, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 3), (1, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((4, 6), (1, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 1), (1, 3))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((8, 7), (8, 7))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((8, 2), (8, 7))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 1), (8, 7))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 9), (8, 7))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((8, 7), (8, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((8, 2), (8, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 1), (8, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 9), (8, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((8, 7), (1, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((8, 2), (1, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 9), (1, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((8, 7), (1, 9))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((8, 2), (1, 9))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 1), (1, 9))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 9), (1, 9))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((3, 4), (1, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 1), (3, 4))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((3, 4), (3, 4))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((3, 2), (3, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((3, 9), (3, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((3, 2), (3, 9))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((3, 9), (3, 9))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 4), (7, 4))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((6, 8), (7, 4))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 4), (7, 4))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((2, 8), (7, 4))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 4), (6, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((6, 8), (6, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 4), (6, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((2, 8), (6, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 4), (1, 4))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((6, 8), (1, 4))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 4), (1, 4))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((2, 8), (1, 4))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 4), (2, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((6, 8), (2, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 4), (2, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((2, 8), (2, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 1), (1, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((10, 1), (1, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 6), (1, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 10), (1, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 8), (1, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 12), (1, 2))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 2), (7, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 1), (7, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((10, 1), (7, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 6), (7, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 10), (7, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 8), (7, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 12), (7, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 2), (10, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 1), (10, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((10, 1), (10, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 6), (10, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 10), (10, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 8), (10, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 12), (10, 1))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 2), (5, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 1), (5, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((10, 1), (5, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 6), (5, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 10), (5, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 8), (5, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 12), (5, 6))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 2), (1, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 1), (1, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((10, 1), (1, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 6), (1, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 10), (1, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 8), (1, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 12), (1, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 2), (9, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 1), (9, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((10, 1), (9, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 6), (9, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 10), (9, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 8), (9, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 12), (9, 8))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 2), (5, 12))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((7, 1), (5, 12))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((10, 1), (5, 12))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 6), (5, 12))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((1, 10), (5, 12))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((9, 8), (5, 12))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 12), (5, 12))"
          }
        ],
        "code_context": "x2 = prapply(connect, x1, x1)"
      }
    },
    "type_signatures": [
      "connect(tuple, tuple)"
    ],
    "value_signatures": [
      "connect((9, 8), (10, 1))",
      "connect((4, 6), (1, 3))",
      "connect((3, 1), (6, 3))",
      "connect((1, 2), (5, 12))",
      "connect((5, 12), (10, 1))",
      "connect((1, 4), (2, 8))",
      "connect((7, 1), (1, 10))",
      "connect((5, 12), (5, 12))",
      "connect((8, 7), (8, 7))",
      "connect((5, 12), (1, 2))",
      "connect((1, 1), (3, 4))",
      "connect((7, 4), (7, 4))",
      "connect((1, 9), (1, 9))",
      "connect((7, 4), (2, 8))",
      "connect((1, 10), (5, 6))",
      "connect((10, 1), (5, 12))",
      "connect((1, 9), (8, 7))",
      "connect((7, 2), (1, 2))",
      "connect((8, 2), (8, 7))",
      "connect((10, 1), (10, 1))",
      "connect((8, 7), (1, 9))",
      "connect((1, 2), (7, 1))",
      "connect((7, 4), (6, 8))",
      "connect((6, 3), (3, 1))",
      "connect((1, 3), (4, 10))",
      "connect((7, 1), (5, 12))",
      "connect((1, 10), (1, 2))",
      "connect((3, 1), (1, 3))",
      "connect((9, 8), (7, 1))",
      "connect((1, 3), (4, 6))",
      "connect((1, 4), (7, 4))",
      "connect((2, 8), (1, 4))",
      "connect((1, 2), (10, 1))",
      "connect((7, 4), (1, 4))",
      "connect((10, 1), (1, 10))",
      "connect((8, 7), (8, 2))",
      "connect((5, 6), (9, 8))",
      "connect((5, 1), (1, 3))",
      "connect((1, 1), (8, 2))",
      "connect((4, 6), (4, 6))",
      "connect((1, 9), (1, 1))",
      "connect((1, 1), (1, 9))",
      "connect((7, 2), (7, 2))",
      "connect((1, 10), (10, 1))",
      "connect((2, 8), (2, 8))",
      "connect((6, 8), (6, 8))",
      "connect((6, 3), (6, 3))",
      "connect((1, 10), (5, 12))",
      "connect((4, 6), (4, 10))",
      "connect((9, 3), (9, 3))",
      "connect((3, 9), (3, 9))",
      "connect((5, 1), (5, 1))",
      "connect((8, 2), (1, 9))",
      "connect((1, 4), (1, 4))",
      "connect((10, 1), (9, 8))",
      "connect((1, 10), (9, 8))",
      "connect((3, 2), (3, 2))",
      "connect((1, 2), (1, 10))",
      "connect((9, 8), (5, 6))",
      "connect((5, 6), (5, 6))",
      "connect((1, 3), (6, 3))",
      "connect((9, 8), (9, 8))",
      "connect((1, 4), (6, 8))",
      "connect((1, 1), (1, 1))",
      "connect((8, 7), (1, 1))",
      "connect((3, 4), (3, 4))",
      "connect((7, 1), (7, 1))",
      "connect((4, 10), (9, 3))",
      "connect((3, 2), (3, 9))",
      "connect((1, 3), (9, 3))",
      "connect((7, 1), (5, 6))",
      "connect((3, 9), (3, 2))",
      "connect((5, 1), (9, 3))",
      "connect((10, 1), (5, 6))",
      "connect((6, 8), (1, 4))",
      "connect((1, 3), (1, 3))",
      "connect((1, 1), (8, 7))",
      "connect((2, 8), (6, 8))",
      "connect((10, 1), (7, 1))",
      "connect((1, 2), (9, 8))",
      "connect((5, 1), (4, 6))",
      "connect((5, 12), (7, 1))",
      "connect((5, 6), (7, 1))",
      "connect((9, 3), (4, 10))",
      "connect((6, 8), (7, 4))",
      "connect((2, 8), (7, 4))",
      "connect((5, 12), (9, 8))",
      "connect((5, 6), (1, 2))",
      "connect((9, 3), (4, 6))",
      "connect((7, 1), (1, 2))",
      "connect((6, 8), (2, 8))",
      "connect((1, 2), (1, 2))",
      "connect((7, 1), (9, 8))",
      "connect((1, 3), (5, 1))",
      "connect((5, 1), (4, 10))",
      "connect((4, 10), (5, 1))",
      "connect((1, 2), (7, 2))",
      "connect((7, 1), (10, 1))",
      "connect((1, 2), (5, 6))",
      "connect((8, 2), (8, 2))",
      "connect((1, 9), (8, 2))",
      "connect((4, 10), (1, 3))",
      "connect((9, 8), (5, 12))",
      "connect((5, 6), (10, 1))",
      "connect((8, 2), (1, 1))",
      "connect((6, 3), (1, 3))",
      "connect((5, 6), (5, 12))",
      "connect((1, 3), (3, 1))",
      "connect((5, 6), (1, 10))",
      "connect((1, 10), (1, 10))",
      "connect((9, 3), (1, 3))",
      "connect((5, 12), (5, 6))",
      "connect((4, 6), (9, 3))",
      "connect((9, 8), (1, 2))",
      "connect((10, 1), (1, 2))",
      "connect((4, 10), (4, 6))",
      "connect((4, 6), (5, 1))",
      "connect((5, 12), (1, 10))",
      "connect((4, 10), (4, 10))",
      "connect((9, 3), (5, 1))",
      "connect((3, 1), (3, 1))",
      "connect((1, 10), (7, 1))",
      "connect((9, 8), (1, 10))",
      "connect((3, 4), (1, 1))"
    ]
  },
  "rbind": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1482": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "rbind(function, int)",
            "value_signature": "rbind(<function greater at 0x103027dc0>, 1)"
          }
        ],
        "code_context": "x3 = rbind(greater, ONE)"
      }
    },
    "type_signatures": [
      "rbind(function, int)"
    ],
    "value_signatures": [
      "rbind(<function greater at 0x103027dc0>, 1)"
    ]
  },
  "compose": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1483": {
        "count": 6,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x103164820>, <function size at 0x1030453a0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x1031648b0>, <function size at 0x1030453a0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x103164af0>, <function size at 0x1030453a0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x103164c10>, <function size at 0x1030453a0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x103164ca0>, <function size at 0x1030453a0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x103164e50>, <function size at 0x1030453a0>)"
          }
        ],
        "code_context": "x4 = compose(x3, size)"
      }
    },
    "type_signatures": [
      "compose(function, function)"
    ],
    "value_signatures": [
      "compose(<function rbind.<locals>.<lambda> at 0x103164c10>, <function size at 0x1030453a0>)",
      "compose(<function rbind.<locals>.<lambda> at 0x1031648b0>, <function size at 0x1030453a0>)",
      "compose(<function rbind.<locals>.<lambda> at 0x103164ca0>, <function size at 0x1030453a0>)",
      "compose(<function rbind.<locals>.<lambda> at 0x103164e50>, <function size at 0x1030453a0>)",
      "compose(<function rbind.<locals>.<lambda> at 0x103164820>, <function size at 0x1030453a0>)",
      "compose(<function rbind.<locals>.<lambda> at 0x103164af0>, <function size at 0x1030453a0>)"
    ]
  },
  "sfilter_f": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1484": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset({frozenset({(7, 2)}), frozenset({(1, 2)}, <function compose.<locals>.<lambda> at 0x1031648b0)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset({frozenset({(1, 1)})}), <function compose.<locals>.<lambda> at 0x103164820)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset(len=6), <function compose.<locals>.<lambda> at 0x103164820)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset(len=9), <function compose.<locals>.<lambda> at 0x103164820)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset(len=8), <function compose.<locals>.<lambda> at 0x103164820)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset({frozenset(), frozenset({(1, 1)}), froze, <function compose.<locals>.<lambda> at 0x103164820)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset({frozenset({(3, 8), (3, 4), (3, 7), (3, , <function compose.<locals>.<lambda> at 0x103164e50)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset(len=7), <function compose.<locals>.<lambda> at 0x103164820)"
          },
          {
            "type_signature": "sfilter_f(frozenset, function)",
            "value_signature": "sfilter_f(frozenset(len=16), <function compose.<locals>.<lambda> at 0x103164e50)"
          }
        ],
        "code_context": "x5 = sfilter_f(x2, x4)"
      }
    },
    "type_signatures": [
      "sfilter_f(frozenset, function)"
    ],
    "value_signatures": [
      "sfilter_f(frozenset(len=6), <function compose.<locals>.<lambda> at 0x103164820)",
      "sfilter_f(frozenset(len=7), <function compose.<locals>.<lambda> at 0x103164820)",
      "sfilter_f(frozenset(len=8), <function compose.<locals>.<lambda> at 0x103164820)",
      "sfilter_f(frozenset({frozenset(), frozenset({(1, 1)}), froze, <function compose.<locals>.<lambda> at 0x103164820)",
      "sfilter_f(frozenset({frozenset({(3, 8), (3, 4), (3, 7), (3, , <function compose.<locals>.<lambda> at 0x103164e50)",
      "sfilter_f(frozenset({frozenset({(1, 1)})}), <function compose.<locals>.<lambda> at 0x103164820)",
      "sfilter_f(frozenset(len=9), <function compose.<locals>.<lambda> at 0x103164820)",
      "sfilter_f(frozenset(len=16), <function compose.<locals>.<lambda> at 0x103164e50)",
      "sfilter_f(frozenset({frozenset({(7, 2)}), frozenset({(1, 2)}, <function compose.<locals>.<lambda> at 0x1031648b0)"
    ]
  },
  "size": {
    "calls": 56,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1484": {
        "count": 40,
        "signatures": [
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(7, 2)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 2)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset(len=7))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 1)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(3, 1), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(6, 3)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 3)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset())"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(3, 1)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset(len=6))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(4, 6)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(9, 3)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(5, 1)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset(len=9))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(4, 10)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(8, 2)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 9)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset(len=8))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(8, 7)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(3, 4)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(3, 9)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(3, 2)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(6, 8)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 4)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(7, 4)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(2, 8)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 10)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(9, 8)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(7, 1)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(10, 1)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(5, 6)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset(len=10))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(5, 12)}))"
          }
        ],
        "code_context": "x5 = sfilter_f(x2, x4)"
      }
    },
    "type_signatures": [
      "size(frozenset)"
    ],
    "value_signatures": [
      "size(frozenset({(8, 7)}))",
      "size(frozenset(len=10))",
      "size(frozenset({(3, 4)}))",
      "size(frozenset({(5, 1)}))",
      "size(frozenset({(5, 6)}))",
      "size(frozenset({(10, 1)}))",
      "size(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))",
      "size(frozenset({(3, 9)}))",
      "size(frozenset({(1, 3)}))",
      "size(frozenset({(1, 2)}))",
      "size(frozenset())",
      "size(frozenset({(1, 1)}))",
      "size(frozenset({(1, 4)}))",
      "size(frozenset({(3, 2)}))",
      "size(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))",
      "size(frozenset({(6, 3)}))",
      "size(frozenset({(2, 8)}))",
      "size(frozenset({(3, 1)}))",
      "size(frozenset(len=9))",
      "size(frozenset({(9, 3)}))",
      "size(frozenset({(5, 12)}))",
      "size(frozenset(len=7))",
      "size(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))",
      "size(frozenset({(1, 10)}))",
      "size(frozenset({(7, 4)}))",
      "size(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))",
      "size(frozenset({(1, 9)}))",
      "size(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)",
      "size(frozenset({(4, 6)}))",
      "size(frozenset({(9, 8)}))",
      "size(frozenset({(7, 2)}))",
      "size(frozenset(len=6))",
      "size(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})",
      "size(frozenset({(8, 2)}))",
      "size(frozenset({(3, 1), (1, 3), (2, 2)}))",
      "size(frozenset({(6, 8)}))",
      "size(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})",
      "size(frozenset(len=8))",
      "size(frozenset({(4, 10)}))",
      "size(frozenset({(7, 1)}))"
    ]
  },
  "greater": {
    "calls": 56,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1484": {
        "count": 10,
        "signatures": [
          {
            "type_signature": "greater(int, int)",
            "value_signature": "greater(1, 1)"
          },
          {
            "type_signature": "greater(int, int)",
            "value_signature": "greater(7, 1)"
          },
          {
            "type_signature": "greater(int, int)",
            "value_signature": "greater(3, 1)"
          },
          {
            "type_signature": "greater(int, int)",
            "value_signature": "greater(0, 1)"
          },
          {
            "type_signature": "greater(int, int)",
            "value_signature": "greater(6, 1)"
          },
          {
            "type_signature": "greater(int, int)",
            "value_signature": "greater(4, 1)"
          },
          {
            "type_signature": "greater(int, int)",
            "value_signature": "greater(5, 1)"
          },
          {
            "type_signature": "greater(int, int)",
            "value_signature": "greater(9, 1)"
          },
          {
            "type_signature": "greater(int, int)",
            "value_signature": "greater(8, 1)"
          },
          {
            "type_signature": "greater(int, int)",
            "value_signature": "greater(10, 1)"
          }
        ],
        "code_context": "x5 = sfilter_f(x2, x4)"
      }
    },
    "type_signatures": [
      "greater(int, int)"
    ],
    "value_signatures": [
      "greater(10, 1)",
      "greater(4, 1)",
      "greater(3, 1)",
      "greater(9, 1)",
      "greater(1, 1)",
      "greater(8, 1)",
      "greater(5, 1)",
      "greater(7, 1)",
      "greater(6, 1)",
      "greater(0, 1)"
    ]
  },
  "fork": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1485": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function either at 0x1030275e0>, <function vline_i at 0x1030be9d0>, <function hline_i at 0x10302c280>)"
          }
        ],
        "code_context": "x6 = fork(either, vline_i, hline_i)"
      }
    },
    "type_signatures": [
      "fork(function, function, function)"
    ],
    "value_signatures": [
      "fork(<function either at 0x1030275e0>, <function vline_i at 0x1030be9d0>, <function hline_i at 0x10302c280>)"
    ]
  },
  "mfilter_f": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset({frozenset({(6, 2), (1, 2), (4, 2), (7, , <function fork.<locals>.<lambda> at 0x1031649d0>)"
          },
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset(), <function fork.<locals>.<lambda> at 0x103164af0>)"
          },
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset({frozenset({(4, 3), (2, 3), (3, 3), (5, , <function fork.<locals>.<lambda> at 0x103164c10>)"
          },
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset({frozenset({(9, 3), (4, 3), (7, 3), (2, , <function fork.<locals>.<lambda> at 0x103164ca0>)"
          },
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset({frozenset({(1, 2), (1, 5), (1, 1), (1, , <function fork.<locals>.<lambda> at 0x103164e50>)"
          },
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset(), <function fork.<locals>.<lambda> at 0x103189040>)"
          },
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset({frozenset({(3, 8), (3, 4), (3, 7), (3, , <function fork.<locals>.<lambda> at 0x103189040>)"
          },
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset({frozenset({(4, 4), (7, 4), (2, 4), (3, , <function fork.<locals>.<lambda> at 0x103189040>)"
          },
          {
            "type_signature": "mfilter_f(frozenset, function)",
            "value_signature": "mfilter_f(frozenset(len=8), <function fork.<locals>.<lambda> at 0x103189940>)"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "mfilter_f(frozenset, function)"
    ],
    "value_signatures": [
      "mfilter_f(frozenset(), <function fork.<locals>.<lambda> at 0x103164af0>)",
      "mfilter_f(frozenset(len=8), <function fork.<locals>.<lambda> at 0x103189940>)",
      "mfilter_f(frozenset(), <function fork.<locals>.<lambda> at 0x103189040>)",
      "mfilter_f(frozenset({frozenset({(6, 2), (1, 2), (4, 2), (7, , <function fork.<locals>.<lambda> at 0x1031649d0>)",
      "mfilter_f(frozenset({frozenset({(3, 8), (3, 4), (3, 7), (3, , <function fork.<locals>.<lambda> at 0x103189040>)",
      "mfilter_f(frozenset({frozenset({(9, 3), (4, 3), (7, 3), (2, , <function fork.<locals>.<lambda> at 0x103164ca0>)",
      "mfilter_f(frozenset({frozenset({(4, 3), (2, 3), (3, 3), (5, , <function fork.<locals>.<lambda> at 0x103164c10>)",
      "mfilter_f(frozenset({frozenset({(4, 4), (7, 4), (2, 4), (3, , <function fork.<locals>.<lambda> at 0x103189040>)",
      "mfilter_f(frozenset({frozenset({(1, 2), (1, 5), (1, 1), (1, , <function fork.<locals>.<lambda> at 0x103164e50>)"
    ]
  },
  "sfilter": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({frozenset({(6, 2), (1, 2), (4, 2), (7, , <function fork.<locals>.<lambda> at 0x1031649d0>)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(), <function fork.<locals>.<lambda> at 0x103164af0>)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({frozenset({(4, 3), (2, 3), (3, 3), (5, , <function fork.<locals>.<lambda> at 0x103164c10>)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({frozenset({(9, 3), (4, 3), (7, 3), (2, , <function fork.<locals>.<lambda> at 0x103164ca0>)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({frozenset({(1, 2), (1, 5), (1, 1), (1, , <function fork.<locals>.<lambda> at 0x103164e50>)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(), <function fork.<locals>.<lambda> at 0x103189040>)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({frozenset({(3, 8), (3, 4), (3, 7), (3, , <function fork.<locals>.<lambda> at 0x103189040>)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({frozenset({(4, 4), (7, 4), (2, 4), (3, , <function fork.<locals>.<lambda> at 0x103189040>)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(len=8), <function fork.<locals>.<lambda> at 0x103189940>)"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "sfilter(frozenset, function)"
    ],
    "value_signatures": [
      "sfilter(frozenset({frozenset({(4, 3), (2, 3), (3, 3), (5, , <function fork.<locals>.<lambda> at 0x103164c10>)",
      "sfilter(frozenset({frozenset({(6, 2), (1, 2), (4, 2), (7, , <function fork.<locals>.<lambda> at 0x1031649d0>)",
      "sfilter(frozenset(), <function fork.<locals>.<lambda> at 0x103189040>)",
      "sfilter(frozenset({frozenset({(4, 4), (7, 4), (2, 4), (3, , <function fork.<locals>.<lambda> at 0x103189040>)",
      "sfilter(frozenset(len=8), <function fork.<locals>.<lambda> at 0x103189940>)",
      "sfilter(frozenset({frozenset({(1, 2), (1, 5), (1, 1), (1, , <function fork.<locals>.<lambda> at 0x103164e50>)",
      "sfilter(frozenset({frozenset({(9, 3), (4, 3), (7, 3), (2, , <function fork.<locals>.<lambda> at 0x103164ca0>)",
      "sfilter(frozenset(), <function fork.<locals>.<lambda> at 0x103164af0>)",
      "sfilter(frozenset({frozenset({(3, 8), (3, 4), (3, 7), (3, , <function fork.<locals>.<lambda> at 0x103189040>)"
    ]
  },
  "vline_i": {
    "calls": 20,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 13,
        "signatures": [
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset(len=7))"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset(len=6))"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset({(3, 1), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset(len=9))"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset(len=8))"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)"
          },
          {
            "type_signature": "vline_i(frozenset)",
            "value_signature": "vline_i(frozenset(len=10))"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "vline_i(frozenset)"
    ],
    "value_signatures": [
      "vline_i(frozenset(len=8))",
      "vline_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))",
      "vline_i(frozenset({(3, 1), (1, 3), (2, 2)}))",
      "vline_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))",
      "vline_i(frozenset(len=7))",
      "vline_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)",
      "vline_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})",
      "vline_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})",
      "vline_i(frozenset(len=10))",
      "vline_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))",
      "vline_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))",
      "vline_i(frozenset(len=6))",
      "vline_i(frozenset(len=9))"
    ]
  },
  "height_i": {
    "calls": 34,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 13,
        "signatures": [
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset(len=7))"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset(len=6))"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset({(3, 1), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset(len=9))"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset(len=8))"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)"
          },
          {
            "type_signature": "height_i(frozenset)",
            "value_signature": "height_i(frozenset(len=10))"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "height_i(frozenset)"
    ],
    "value_signatures": [
      "height_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))",
      "height_i(frozenset(len=6))",
      "height_i(frozenset(len=10))",
      "height_i(frozenset({(3, 1), (1, 3), (2, 2)}))",
      "height_i(frozenset(len=8))",
      "height_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))",
      "height_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})",
      "height_i(frozenset(len=7))",
      "height_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))",
      "height_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))",
      "height_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})",
      "height_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)",
      "height_i(frozenset(len=9))"
    ]
  },
  "lowermost_i": {
    "calls": 34,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 13,
        "signatures": [
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset(len=7))"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset(len=6))"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset({(3, 1), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset(len=9))"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset(len=8))"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)"
          },
          {
            "type_signature": "lowermost_i(frozenset)",
            "value_signature": "lowermost_i(frozenset(len=10))"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "lowermost_i(frozenset)"
    ],
    "value_signatures": [
      "lowermost_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})",
      "lowermost_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))",
      "lowermost_i(frozenset(len=7))",
      "lowermost_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)",
      "lowermost_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))",
      "lowermost_i(frozenset(len=9))",
      "lowermost_i(frozenset(len=8))",
      "lowermost_i(frozenset({(3, 1), (1, 3), (2, 2)}))",
      "lowermost_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})",
      "lowermost_i(frozenset(len=10))",
      "lowermost_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))",
      "lowermost_i(frozenset(len=6))",
      "lowermost_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))"
    ]
  },
  "toindices_i": {
    "calls": 136,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 13,
        "signatures": [
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset(len=7))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset(len=6))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(3, 1), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset(len=9))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset(len=8))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)"
          },
          {
            "type_signature": "toindices_i(frozenset)",
            "value_signature": "toindices_i(frozenset(len=10))"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "toindices_i(frozenset)"
    ],
    "value_signatures": [
      "toindices_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})",
      "toindices_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))",
      "toindices_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))",
      "toindices_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)",
      "toindices_i(frozenset({(3, 1), (1, 3), (2, 2)}))",
      "toindices_i(frozenset(len=9))",
      "toindices_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))",
      "toindices_i(frozenset(len=10))",
      "toindices_i(frozenset(len=6))",
      "toindices_i(frozenset(len=7))",
      "toindices_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})",
      "toindices_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))",
      "toindices_i(frozenset(len=8))"
    ]
  },
  "uppermost_i": {
    "calls": 34,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 13,
        "signatures": [
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset(len=7))"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset(len=6))"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset({(3, 1), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset(len=9))"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset(len=8))"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)"
          },
          {
            "type_signature": "uppermost_i(frozenset)",
            "value_signature": "uppermost_i(frozenset(len=10))"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "uppermost_i(frozenset)"
    ],
    "value_signatures": [
      "uppermost_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))",
      "uppermost_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))",
      "uppermost_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)",
      "uppermost_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))",
      "uppermost_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})",
      "uppermost_i(frozenset(len=6))",
      "uppermost_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})",
      "uppermost_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))",
      "uppermost_i(frozenset(len=10))",
      "uppermost_i(frozenset({(3, 1), (1, 3), (2, 2)}))",
      "uppermost_i(frozenset(len=9))",
      "uppermost_i(frozenset(len=8))",
      "uppermost_i(frozenset(len=7))"
    ]
  },
  "width_i": {
    "calls": 34,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 13,
        "signatures": [
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset(len=7))"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset(len=6))"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset({(3, 1), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset(len=9))"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset(len=8))"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)"
          },
          {
            "type_signature": "width_i(frozenset)",
            "value_signature": "width_i(frozenset(len=10))"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "width_i(frozenset)"
    ],
    "value_signatures": [
      "width_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))",
      "width_i(frozenset(len=6))",
      "width_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))",
      "width_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)",
      "width_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))",
      "width_i(frozenset(len=10))",
      "width_i(frozenset(len=8))",
      "width_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))",
      "width_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})",
      "width_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})",
      "width_i(frozenset({(3, 1), (1, 3), (2, 2)}))",
      "width_i(frozenset(len=9))",
      "width_i(frozenset(len=7))"
    ]
  },
  "rightmost_i": {
    "calls": 34,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 13,
        "signatures": [
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset(len=7))"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset(len=6))"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset({(3, 1), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset(len=9))"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset(len=8))"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)"
          },
          {
            "type_signature": "rightmost_i(frozenset)",
            "value_signature": "rightmost_i(frozenset(len=10))"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "rightmost_i(frozenset)"
    ],
    "value_signatures": [
      "rightmost_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))",
      "rightmost_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))",
      "rightmost_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))",
      "rightmost_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})",
      "rightmost_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})",
      "rightmost_i(frozenset(len=9))",
      "rightmost_i(frozenset({(3, 1), (1, 3), (2, 2)}))",
      "rightmost_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)",
      "rightmost_i(frozenset(len=7))",
      "rightmost_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))",
      "rightmost_i(frozenset(len=8))",
      "rightmost_i(frozenset(len=10))",
      "rightmost_i(frozenset(len=6))"
    ]
  },
  "leftmost_i": {
    "calls": 34,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 13,
        "signatures": [
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset(len=7))"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset(len=6))"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset({(3, 1), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset(len=9))"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset(len=8))"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)"
          },
          {
            "type_signature": "leftmost_i(frozenset)",
            "value_signature": "leftmost_i(frozenset(len=10))"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "leftmost_i(frozenset)"
    ],
    "value_signatures": [
      "leftmost_i(frozenset(len=9))",
      "leftmost_i(frozenset(len=6))",
      "leftmost_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)",
      "leftmost_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))",
      "leftmost_i(frozenset(len=7))",
      "leftmost_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})",
      "leftmost_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))",
      "leftmost_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})",
      "leftmost_i(frozenset(len=10))",
      "leftmost_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))",
      "leftmost_i(frozenset({(3, 1), (1, 3), (2, 2)}))",
      "leftmost_i(frozenset(len=8))",
      "leftmost_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
    ]
  },
  "hline_i": {
    "calls": 20,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 13,
        "signatures": [
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset(len=7))"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset(len=6))"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset({(3, 1), (1, 3), (2, 2)}))"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset(len=9))"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset(len=8))"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)"
          },
          {
            "type_signature": "hline_i(frozenset)",
            "value_signature": "hline_i(frozenset(len=10))"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "hline_i(frozenset)"
    ],
    "value_signatures": [
      "hline_i(frozenset(len=6))",
      "hline_i(frozenset(len=9))",
      "hline_i(frozenset({(1, 2), (3, 4), (2, 3), (4, 5), (5, 6)})",
      "hline_i(frozenset({(3, 8), (5, 8), (6, 8), (4, 8), (2, 8)})",
      "hline_i(frozenset({(3, 8), (2, 9), (5, 6), (1, 10), (4, 7))",
      "hline_i(frozenset({(6, 11), (7, 10), (8, 9), (9, 8), (5, 1)",
      "hline_i(frozenset({(4, 10), (4, 9), (4, 6), (4, 8), (4, 7))",
      "hline_i(frozenset(len=10))",
      "hline_i(frozenset({(3, 1), (1, 3), (2, 2)}))",
      "hline_i(frozenset({(10, 1), (9, 1), (7, 1), (8, 1)}))",
      "hline_i(frozenset(len=7))",
      "hline_i(frozenset(len=8))",
      "hline_i(frozenset({(2, 4), (4, 6), (1, 3), (3, 5)}))"
    ]
  },
  "either": {
    "calls": 20,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "either(bool, bool)",
            "value_signature": "either(True, False)"
          },
          {
            "type_signature": "either(bool, bool)",
            "value_signature": "either(False, False)"
          },
          {
            "type_signature": "either(bool, bool)",
            "value_signature": "either(False, True)"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "either(bool, bool)"
    ],
    "value_signatures": [
      "either(True, False)",
      "either(False, False)",
      "either(False, True)"
    ]
  },
  "merge_f": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1486": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(6, 2), (1, 2), (4, 2), (7, )"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset())"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(4, 3), (2, 3), (3, 3), (5, )"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(9, 3), (4, 3), (7, 3), (2, )"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(1, 2), (1, 5), (1, 1), (1, )"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(3, 8), (3, 4), (3, 7), (3, )"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(4, 4), (7, 4), (2, 4), (3, )"
          },
          {
            "type_signature": "merge_f(frozenset)",
            "value_signature": "merge_f(frozenset({frozenset({(10, 1), (9, 1), (7, 1), (8,)"
          }
        ],
        "code_context": "x7 = mfilter_f(x5, x6)"
      }
    },
    "type_signatures": [
      "merge_f(frozenset)"
    ],
    "value_signatures": [
      "merge_f(frozenset({frozenset({(4, 4), (7, 4), (2, 4), (3, )",
      "merge_f(frozenset({frozenset({(3, 8), (3, 4), (3, 7), (3, )",
      "merge_f(frozenset({frozenset({(1, 2), (1, 5), (1, 1), (1, )",
      "merge_f(frozenset())",
      "merge_f(frozenset({frozenset({(9, 3), (4, 3), (7, 3), (2, )",
      "merge_f(frozenset({frozenset({(6, 2), (1, 2), (4, 2), (7, )",
      "merge_f(frozenset({frozenset({(4, 3), (2, 3), (3, 3), (5, )",
      "merge_f(frozenset({frozenset({(10, 1), (9, 1), (7, 1), (8,)"
    ]
  },
  "fill": {
    "calls": 18,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1487": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=9), 3, frozenset(len=7))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((0, 0, 0), (0, 8, 0), (0, 0, 0)), 3, frozenset())"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=7), 3, frozenset(len=6))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=12), 3, frozenset(len=14))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=12), 3, frozenset(len=15))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((0, 0, 0, 0, 0, 0), (0, 8, 0, 0, 0, 0), (0, 0, 0,, 3, frozenset())"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=7), 3, frozenset(len=8))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=10), 3, frozenset(len=12))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=12), 3, frozenset(len=20))"
          }
        ],
        "code_context": "x8 = fill(I, THREE, x7)"
      },
      "solvers.py:1488": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=9), 8, frozenset({(1, 2), (7, 2)}))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((0, 0, 0), (0, 8, 0), (0, 0, 0)), 8, frozenset({(1, 1)}))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=7), 8, frozenset({(3, 1), (6, 3), (1, 3)}))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=12), 8, frozenset({(4, 10), (9, 3), (4, 6), (5, 1), (1, 3))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=12), 8, frozenset({(8, 7), (8, 2), (1, 1), (1, 9)}))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((0, 0, 0, 0, 0, 0), (0, 8, 0, 0, 0, 0), (0, 0, 0,, 8, frozenset({(1, 1), (3, 4)}))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=7), 8, frozenset({(3, 2), (3, 9)}))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=10), 8, frozenset({(7, 4), (6, 8), (1, 4), (2, 8)}))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(tuple(len=12), 8, frozenset(len=7))"
          }
        ],
        "code_context": "O = fill(x8, EIGHT, x1)"
      }
    },
    "type_signatures": [
      "fill(tuple, int, frozenset)"
    ],
    "value_signatures": [
      "fill(((0, 0, 0), (0, 8, 0), (0, 0, 0)), 8, frozenset({(1, 1)}))",
      "fill(tuple(len=12), 8, frozenset(len=7))",
      "fill(tuple(len=7), 3, frozenset(len=6))",
      "fill(tuple(len=7), 8, frozenset({(3, 2), (3, 9)}))",
      "fill(((0, 0, 0, 0, 0, 0), (0, 8, 0, 0, 0, 0), (0, 0, 0,, 3, frozenset())",
      "fill(tuple(len=12), 3, frozenset(len=20))",
      "fill(((0, 0, 0, 0, 0, 0), (0, 8, 0, 0, 0, 0), (0, 0, 0,, 8, frozenset({(1, 1), (3, 4)}))",
      "fill(tuple(len=10), 3, frozenset(len=12))",
      "fill(tuple(len=10), 8, frozenset({(7, 4), (6, 8), (1, 4), (2, 8)}))",
      "fill(tuple(len=9), 3, frozenset(len=7))",
      "fill(tuple(len=12), 3, frozenset(len=15))",
      "fill(tuple(len=7), 3, frozenset(len=8))",
      "fill(tuple(len=9), 8, frozenset({(1, 2), (7, 2)}))",
      "fill(tuple(len=12), 8, frozenset({(8, 7), (8, 2), (1, 1), (1, 9)}))",
      "fill(tuple(len=12), 8, frozenset({(4, 10), (9, 3), (4, 6), (5, 1), (1, 3))",
      "fill(tuple(len=7), 8, frozenset({(3, 1), (6, 3), (1, 3)}))",
      "fill(((0, 0, 0), (0, 8, 0), (0, 0, 0)), 3, frozenset())",
      "fill(tuple(len=12), 3, frozenset(len=14))"
    ]
  },
  "toindices": {
    "calls": 18,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:1487": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=7))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset())"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=6))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=14))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=15))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=8))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=12))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=20))"
          }
        ],
        "code_context": "x8 = fill(I, THREE, x7)"
      },
      "solvers.py:1488": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, 2), (7, 2)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, 1)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, 1), (6, 3), (1, 3)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(4, 10), (9, 3), (4, 6), (5, 1), (1, 3))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(8, 7), (8, 2), (1, 1), (1, 9)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, 1), (3, 4)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, 2), (3, 9)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(7, 4), (6, 8), (1, 4), (2, 8)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=7))"
          }
        ],
        "code_context": "O = fill(x8, EIGHT, x1)"
      }
    },
    "type_signatures": [
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset(len=12))",
      "toindices(frozenset(len=20))",
      "toindices(frozenset(len=6))",
      "toindices(frozenset({(3, 2), (3, 9)}))",
      "toindices(frozenset(len=7))",
      "toindices(frozenset({(1, 1), (3, 4)}))",
      "toindices(frozenset({(1, 1)}))",
      "toindices(frozenset({(7, 4), (6, 8), (1, 4), (2, 8)}))",
      "toindices(frozenset(len=14))",
      "toindices(frozenset({(4, 10), (9, 3), (4, 6), (5, 1), (1, 3))",
      "toindices(frozenset({(8, 7), (8, 2), (1, 1), (1, 9)}))",
      "toindices(frozenset(len=15))",
      "toindices(frozenset(len=8))",
      "toindices(frozenset({(3, 1), (6, 3), (1, 3)}))",
      "toindices(frozenset())",
      "toindices(frozenset({(1, 2), (7, 2)}))"
    ]
  }
}