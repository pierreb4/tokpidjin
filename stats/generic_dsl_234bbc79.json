{
  "objects": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6172": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0), (2, 2, 2, 0, 5, False, False, True)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((0, 0, 0, 5, 1, 5, 0, 0, 0, 0, 0), (2, 2, 0, 0, 0, False, False, True)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((0, 1, 5, 0, 0, 0, 0, 0, 2, 2, 0), (1, 1, 0, 0, 5, False, False, True)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((0, 5, 0, 0, 0, 0, 0, 0, 0), (2, 2, 0, 5, 1, 0, 5, False, False, True)"
          },
          {
            "type_signature": "objects(tuple, bool, bool, bool)",
            "value_signature": "objects(((0, 5, 0, 5, 1, 0, 0, 5, 0, 5, 8), (2, 2, 0, 0, 1, False, False, True)"
          }
        ],
        "code_context": "x1 = objects(I, F, F, T)"
      }
    },
    "type_signatures": [
      "objects(tuple, bool, bool, bool)"
    ],
    "value_signatures": [
      "objects(((0, 0, 0, 5, 1, 5, 0, 0, 0, 0, 0), (2, 2, 0, 0, 0, False, False, True)",
      "objects(((0, 5, 0, 5, 1, 0, 0, 5, 0, 5, 8), (2, 2, 0, 0, 1, False, False, True)",
      "objects(((0, 1, 5, 0, 0, 0, 0, 0, 2, 2, 0), (1, 1, 0, 0, 5, False, False, True)",
      "objects(((0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0), (2, 2, 2, 0, 5, False, False, True)",
      "objects(((0, 5, 0, 0, 0, 0, 0, 0, 0), (2, 2, 0, 5, 1, 0, 5, False, False, True)"
    ]
  },
  "mostcolor_t": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6172": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(((0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0), (2, 2, 2, 0, 5)"
          },
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(((0, 0, 0, 5, 1, 5, 0, 0, 0, 0, 0), (2, 2, 0, 0, 0)"
          },
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(((0, 1, 5, 0, 0, 0, 0, 0, 2, 2, 0), (1, 1, 0, 0, 5)"
          },
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(((0, 5, 0, 0, 0, 0, 0, 0, 0), (2, 2, 0, 5, 1, 0, 5)"
          },
          {
            "type_signature": "mostcolor_t(tuple)",
            "value_signature": "mostcolor_t(((0, 5, 0, 5, 1, 0, 0, 5, 0, 5, 8), (2, 2, 0, 0, 1)"
          }
        ],
        "code_context": "x1 = objects(I, F, F, T)"
      }
    },
    "type_signatures": [
      "mostcolor_t(tuple)"
    ],
    "value_signatures": [
      "mostcolor_t(((0, 1, 5, 0, 0, 0, 0, 0, 2, 2, 0), (1, 1, 0, 0, 5)",
      "mostcolor_t(((0, 0, 0, 5, 1, 5, 0, 0, 0, 0, 0), (2, 2, 0, 0, 0)",
      "mostcolor_t(((0, 5, 0, 5, 1, 0, 0, 5, 0, 5, 8), (2, 2, 0, 0, 1)",
      "mostcolor_t(((0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0), (2, 2, 2, 0, 5)",
      "mostcolor_t(((0, 5, 0, 0, 0, 0, 0, 0, 0), (2, 2, 0, 5, 1, 0, 5)"
    ]
  },
  "asindices": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6172": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0), (2, 2, 2, 0, 5)"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((0, 0, 0, 5, 1, 5, 0, 0, 0, 0, 0), (2, 2, 0, 0, 0)"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((0, 1, 5, 0, 0, 0, 0, 0, 2, 2, 0), (1, 1, 0, 0, 5)"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((0, 5, 0, 0, 0, 0, 0, 0, 0), (2, 2, 0, 5, 1, 0, 5)"
          },
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(((0, 5, 0, 5, 1, 0, 0, 5, 0, 5, 8), (2, 2, 0, 0, 1)"
          }
        ],
        "code_context": "x1 = objects(I, F, F, T)"
      }
    },
    "type_signatures": [
      "asindices(tuple)"
    ],
    "value_signatures": [
      "asindices(((0, 5, 0, 5, 1, 0, 0, 5, 0, 5, 8), (2, 2, 0, 0, 1)",
      "asindices(((0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0), (2, 2, 2, 0, 5)",
      "asindices(((0, 0, 0, 5, 1, 5, 0, 0, 0, 0, 0), (2, 2, 0, 0, 0)",
      "asindices(((0, 5, 0, 0, 0, 0, 0, 0, 0), (2, 2, 0, 5, 1, 0, 5)",
      "asindices(((0, 1, 5, 0, 0, 0, 0, 0, 2, 2, 0), (1, 1, 0, 0, 5)"
    ]
  },
  "dneighbors": {
    "calls": 97,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6172": {
        "count": 29,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 10))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 9))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 10))"
          }
        ],
        "code_context": "x1 = objects(I, F, F, T)"
      },
      "solvers.py:6208": {
        "count": 21,
        "signatures": [
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, -1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 0))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 5))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 8))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 2))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 4))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 7))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 1))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((1, 6))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((2, 3))"
          },
          {
            "type_signature": "dneighbors(tuple)",
            "value_signature": "dneighbors((0, 9))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "dneighbors(tuple)"
    ],
    "value_signatures": [
      "dneighbors((0, 8))",
      "dneighbors((0, 3))",
      "dneighbors((0, 5))",
      "dneighbors((1, 10))",
      "dneighbors((0, 6))",
      "dneighbors((2, 2))",
      "dneighbors((2, 9))",
      "dneighbors((2, 4))",
      "dneighbors((2, 7))",
      "dneighbors((0, 9))",
      "dneighbors((1, -1))",
      "dneighbors((1, 9))",
      "dneighbors((1, 1))",
      "dneighbors((0, 2))",
      "dneighbors((2, 1))",
      "dneighbors((1, 3))",
      "dneighbors((1, 7))",
      "dneighbors((1, 2))",
      "dneighbors((2, 5))",
      "dneighbors((2, 10))",
      "dneighbors((0, 10))",
      "dneighbors((2, 3))",
      "dneighbors((2, 8))",
      "dneighbors((0, 4))",
      "dneighbors((0, 1))",
      "dneighbors((1, 5))",
      "dneighbors((0, 7))",
      "dneighbors((1, 4))",
      "dneighbors((1, 6))",
      "dneighbors((1, 8))",
      "dneighbors((1, 0))"
    ]
  },
  "rbind": {
    "calls": 42,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6173": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "rbind(function, int)",
            "value_signature": "rbind(<function other at 0x103751280>, 5)"
          }
        ],
        "code_context": "x2 = rbind(other, FIVE)"
      },
      "solvers.py:6185": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "rbind(function, function)",
            "value_signature": "rbind(<function chain at 0x103735d30>, <function compose.<locals>.<lambda> at 0x103887790)"
          },
          {
            "type_signature": "rbind(function, function)",
            "value_signature": "rbind(<function chain at 0x103735d30>, <function compose.<locals>.<lambda> at 0x103887670)"
          },
          {
            "type_signature": "rbind(function, function)",
            "value_signature": "rbind(<function chain at 0x103735d30>, <function compose.<locals>.<lambda> at 0x1038b6dc0)"
          },
          {
            "type_signature": "rbind(function, function)",
            "value_signature": "rbind(<function chain at 0x103735d30>, <function compose.<locals>.<lambda> at 0x103892160)"
          }
        ],
        "code_context": "x14 = rbind(chain, x13)"
      },
      "solvers.py:6208": {
        "count": 24,
        "signatures": [
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(1, -1)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(1, 0), (1, 1), (1, 2), (2, 2)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(1, 2), (1, 1), (1, -1), (2, 2), (1, 0))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(1, 6), (1, 5), (1, 4), (0, 6)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset(len=9))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(2, 9), (2, 10), (2, 8)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(1, 0), (1, 1), (2, 1)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(1, 0), (1, 1), (2, 1), (1, -1)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(0, 3), (0, 4), (0, 5)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset(len=7))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(2, 7), (1, 8), (1, 10), (1, 9), (2, 8))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(0, 1), (1, 0), (1, 1), (0, 2)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(0, 1), (1, 1), (1, -1), (0, 2), (1, 0))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(2, 5), (1, 4), (1, 5)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset(len=8))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(0, 8), (1, 8), (0, 9), (1, 7)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(1, 0), (1, 1), (0, 1)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(0, 1), (1, 0), (1, 1), (1, -1)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(2, 4), (1, 3), (1, 4)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(1, 6), (1, 7), (1, 8)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(2, 4), (0, 3), (0, 4), (1, 4)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(0, 7), (1, 6), (1, 7)}))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset(len=11))"
          },
          {
            "type_signature": "rbind(function, frozenset)",
            "value_signature": "rbind(<function intersection at 0x103745280>, frozenset({(0, 9), (0, 10), (1, 10)}))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "rbind(function, int)",
      "rbind(function, function)",
      "rbind(function, frozenset)"
    ],
    "value_signatures": [
      "rbind(<function intersection at 0x103745280>, frozenset({(1, -1)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(0, 1), (1, 0), (1, 1), (0, 2)}))",
      "rbind(<function chain at 0x103735d30>, <function compose.<locals>.<lambda> at 0x103887670)",
      "rbind(<function intersection at 0x103745280>, frozenset({(0, 1), (1, 0), (1, 1), (1, -1)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(1, 6), (1, 5), (1, 4), (0, 6)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(1, 6), (1, 7), (1, 8)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(1, 2), (1, 1), (1, -1), (2, 2), (1, 0))",
      "rbind(<function intersection at 0x103745280>, frozenset({(1, 0), (1, 1), (2, 1)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(0, 1), (1, 1), (1, -1), (0, 2), (1, 0))",
      "rbind(<function other at 0x103751280>, 5)",
      "rbind(<function intersection at 0x103745280>, frozenset({(1, 0), (1, 1), (2, 1), (1, -1)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(2, 4), (0, 3), (0, 4), (1, 4)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(0, 9), (0, 10), (1, 10)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(2, 7), (1, 8), (1, 10), (1, 9), (2, 8))",
      "rbind(<function intersection at 0x103745280>, frozenset(len=7))",
      "rbind(<function intersection at 0x103745280>, frozenset({(2, 4), (1, 3), (1, 4)}))",
      "rbind(<function chain at 0x103735d30>, <function compose.<locals>.<lambda> at 0x103892160)",
      "rbind(<function chain at 0x103735d30>, <function compose.<locals>.<lambda> at 0x1038b6dc0)",
      "rbind(<function intersection at 0x103745280>, frozenset(len=8))",
      "rbind(<function intersection at 0x103745280>, frozenset({(0, 3), (0, 4), (0, 5)}))",
      "rbind(<function intersection at 0x103745280>, frozenset(len=9))",
      "rbind(<function chain at 0x103735d30>, <function compose.<locals>.<lambda> at 0x103887790)",
      "rbind(<function intersection at 0x103745280>, frozenset({(1, 0), (1, 1), (0, 1)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(2, 5), (1, 4), (1, 5)}))",
      "rbind(<function intersection at 0x103745280>, frozenset(len=11))",
      "rbind(<function intersection at 0x103745280>, frozenset({(0, 7), (1, 6), (1, 7)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(0, 8), (1, 8), (0, 9), (1, 7)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(1, 0), (1, 1), (1, 2), (2, 2)}))",
      "rbind(<function intersection at 0x103745280>, frozenset({(2, 9), (2, 10), (2, 8)}))"
    ]
  },
  "compose": {
    "calls": 61,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6174": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x103871f70>, <function palette_f at 0x1037515e0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function rbind.<locals>.<lambda> at 0x103887dc0>, <function palette_f at 0x1037515e0>)"
          }
        ],
        "code_context": "x3 = compose(x2, palette_f)"
      },
      "solvers.py:6178": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function last at 0x103745430>, <function last at 0x103745430>)"
          }
        ],
        "code_context": "x7 = compose(last, last)"
      },
      "solvers.py:6180": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x103887310>, <function leftmost at 0x1037459d0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x103887af0>, <function leftmost at 0x1037459d0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x1038921f0>, <function leftmost at 0x1037459d0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x1038b6430>, <function leftmost at 0x1037459d0>)"
          }
        ],
        "code_context": "x9 = compose(x8, leftmost)"
      },
      "solvers.py:6181": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x103887310>, <function rightmost at 0x103756310>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x103887af0>, <function rightmost at 0x103756310>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x1038921f0>, <function rightmost at 0x103756310>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x1038b6430>, <function rightmost at 0x103756310>)"
          }
        ],
        "code_context": "x10 = compose(x8, rightmost)"
      },
      "solvers.py:6184": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function dneighbors at 0x10373eb80>, <function last at 0x103745430>)"
          }
        ],
        "code_context": "x13 = compose(dneighbors, last)"
      },
      "solvers.py:6191": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x103887b80>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x103892550>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x103887ca0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x1038b60d0>)"
          }
        ],
        "code_context": "x20 = compose(last, x18)"
      },
      "solvers.py:6192": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x103887c10>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x1038924c0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x103887940>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x1038b61f0>)"
          }
        ],
        "code_context": "x21 = compose(last, x19)"
      },
      "solvers.py:6197": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function compose.<locals>.<lambda> at 0x103887dc0, <function first at 0x103741160>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function compose.<locals>.<lambda> at 0x1038921f0, <function first at 0x103741160>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function compose.<locals>.<lambda> at 0x1038923a0, <function first at 0x103741160>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function compose.<locals>.<lambda> at 0x1038d0940, <function first at 0x103741160>)"
          }
        ],
        "code_context": "x26 = compose(x21, first)"
      },
      "solvers.py:6199": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function first at 0x103741160>, <function last at 0x103745430>)"
          }
        ],
        "code_context": "x28 = compose(first, last)"
      },
      "solvers.py:6200": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x103887ee0>, <function fork.<locals>.<lambda> at 0x103892160>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x103892160>, <function fork.<locals>.<lambda> at 0x103892dc0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x1038b6280>, <function fork.<locals>.<lambda> at 0x1038b6040>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x103892dc0>, <function fork.<locals>.<lambda> at 0x103892ee0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function lbind.<locals>.<lambda> at 0x1038d08b0>, <function fork.<locals>.<lambda> at 0x1038d0550>)"
          }
        ],
        "code_context": "x29 = compose(x24, x27)"
      },
      "solvers.py:6206": {
        "count": 11,
        "signatures": [
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x1038924c0>, <function fork.<locals>.<lambda> at 0x1038924c0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x1038924c0>, <function compose.<locals>.<lambda> at 0x103892550)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x1038b61f0>, <function fork.<locals>.<lambda> at 0x1038b61f0>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x1038b61f0>, <function compose.<locals>.<lambda> at 0x1038b6280)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x1038b6d30>, <function fork.<locals>.<lambda> at 0x1038b6d30>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x1038b6d30>, <function compose.<locals>.<lambda> at 0x1038b6dc0)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x1038d0820>, <function fork.<locals>.<lambda> at 0x1038d0820>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x1038d0820>, <function compose.<locals>.<lambda> at 0x1038d08b0)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x1038eb430>, <function fork.<locals>.<lambda> at 0x1038eb430>)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x1038eb430>, <function compose.<locals>.<lambda> at 0x1038eb4c0)"
          },
          {
            "type_signature": "compose(function, function)",
            "value_signature": "compose(<function fork.<locals>.<lambda> at 0x1038eb430>, <function compose.<locals>.<lambda> at 0x1038eb550)"
          }
        ],
        "code_context": "x35 = power(x33, x34)"
      }
    },
    "type_signatures": [
      "compose(function, function)"
    ],
    "value_signatures": [
      "compose(<function lbind.<locals>.<lambda> at 0x1038b6430>, <function leftmost at 0x1037459d0>)",
      "compose(<function fork.<locals>.<lambda> at 0x1038b61f0>, <function fork.<locals>.<lambda> at 0x1038b61f0>)",
      "compose(<function fork.<locals>.<lambda> at 0x1038b6d30>, <function compose.<locals>.<lambda> at 0x1038b6dc0)",
      "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x103887ca0>)",
      "compose(<function compose.<locals>.<lambda> at 0x1038d0940, <function first at 0x103741160>)",
      "compose(<function fork.<locals>.<lambda> at 0x1038d0820>, <function fork.<locals>.<lambda> at 0x1038d0820>)",
      "compose(<function compose.<locals>.<lambda> at 0x1038923a0, <function first at 0x103741160>)",
      "compose(<function lbind.<locals>.<lambda> at 0x103887310>, <function rightmost at 0x103756310>)",
      "compose(<function lbind.<locals>.<lambda> at 0x103887ee0>, <function fork.<locals>.<lambda> at 0x103892160>)",
      "compose(<function first at 0x103741160>, <function last at 0x103745430>)",
      "compose(<function fork.<locals>.<lambda> at 0x1038b61f0>, <function compose.<locals>.<lambda> at 0x1038b6280)",
      "compose(<function fork.<locals>.<lambda> at 0x1038eb430>, <function fork.<locals>.<lambda> at 0x1038eb430>)",
      "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x1038b61f0>)",
      "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x103892550>)",
      "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x103887b80>)",
      "compose(<function fork.<locals>.<lambda> at 0x1038eb430>, <function compose.<locals>.<lambda> at 0x1038eb4c0)",
      "compose(<function fork.<locals>.<lambda> at 0x1038b6d30>, <function fork.<locals>.<lambda> at 0x1038b6d30>)",
      "compose(<function fork.<locals>.<lambda> at 0x1038d0820>, <function compose.<locals>.<lambda> at 0x1038d08b0)",
      "compose(<function fork.<locals>.<lambda> at 0x1038924c0>, <function compose.<locals>.<lambda> at 0x103892550)",
      "compose(<function lbind.<locals>.<lambda> at 0x103887310>, <function leftmost at 0x1037459d0>)",
      "compose(<function lbind.<locals>.<lambda> at 0x1038921f0>, <function leftmost at 0x1037459d0>)",
      "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x103887c10>)",
      "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x1038924c0>)",
      "compose(<function lbind.<locals>.<lambda> at 0x1038b6280>, <function fork.<locals>.<lambda> at 0x1038b6040>)",
      "compose(<function compose.<locals>.<lambda> at 0x103887dc0, <function first at 0x103741160>)",
      "compose(<function last at 0x103745430>, <function last at 0x103745430>)",
      "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x1038b60d0>)",
      "compose(<function lbind.<locals>.<lambda> at 0x1038921f0>, <function rightmost at 0x103756310>)",
      "compose(<function rbind.<locals>.<lambda> at 0x103887dc0>, <function palette_f at 0x1037515e0>)",
      "compose(<function compose.<locals>.<lambda> at 0x1038921f0, <function first at 0x103741160>)",
      "compose(<function lbind.<locals>.<lambda> at 0x103887af0>, <function leftmost at 0x1037459d0>)",
      "compose(<function last at 0x103745430>, <function fork.<locals>.<lambda> at 0x103887940>)",
      "compose(<function dneighbors at 0x10373eb80>, <function last at 0x103745430>)",
      "compose(<function lbind.<locals>.<lambda> at 0x1038b6430>, <function rightmost at 0x103756310>)",
      "compose(<function lbind.<locals>.<lambda> at 0x1038d08b0>, <function fork.<locals>.<lambda> at 0x1038d0550>)",
      "compose(<function lbind.<locals>.<lambda> at 0x103887af0>, <function rightmost at 0x103756310>)",
      "compose(<function rbind.<locals>.<lambda> at 0x103871f70>, <function palette_f at 0x1037515e0>)",
      "compose(<function lbind.<locals>.<lambda> at 0x103892dc0>, <function fork.<locals>.<lambda> at 0x103892ee0>)",
      "compose(<function fork.<locals>.<lambda> at 0x1038924c0>, <function fork.<locals>.<lambda> at 0x1038924c0>)",
      "compose(<function lbind.<locals>.<lambda> at 0x103892160>, <function fork.<locals>.<lambda> at 0x103892dc0>)",
      "compose(<function fork.<locals>.<lambda> at 0x1038eb430>, <function compose.<locals>.<lambda> at 0x1038eb550)"
    ]
  },
  "fork": {
    "calls": 50,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6175": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_o at 0x103751ee0>, <function compose.<locals>.<lambda> at 0x103887040, <function identity at 0x103741e50>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_o at 0x103751ee0>, <function compose.<locals>.<lambda> at 0x103887c10, <function identity at 0x103741e50>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_o at 0x103751ee0>, <function compose.<locals>.<lambda> at 0x103892ee0, <function identity at 0x103741e50>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_o at 0x103751ee0>, <function compose.<locals>.<lambda> at 0x103887940, <function identity at 0x103741e50>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function recolor_o at 0x103751ee0>, <function compose.<locals>.<lambda> at 0x1038b61f0, <function identity at 0x103741e50>)"
          }
        ],
        "code_context": "x4 = fork(recolor_o, x3, identity)"
      },
      "solvers.py:6182": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x103887430)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x103887940)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x1038925e0)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x103887790)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x1038b6dc0)"
          }
        ],
        "code_context": "x11 = fork(sfilter, identity, x9)"
      },
      "solvers.py:6183": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x103887550)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x103887790)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x1038923a0)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x1038b60d0)"
          }
        ],
        "code_context": "x12 = fork(sfilter, identity, x10)"
      },
      "solvers.py:6189": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887670>, <function chain.<locals>.<lambda> at 0x103887af0>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887ca0>, <function chain.<locals>.<lambda> at 0x1038925e0>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103892160>, <function chain.<locals>.<lambda> at 0x103887670>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887ca0>, <function chain.<locals>.<lambda> at 0x1038b6040>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x1038925e0>, <function chain.<locals>.<lambda> at 0x103887790>)"
          }
        ],
        "code_context": "x18 = fork(argmin, x11, x17)"
      },
      "solvers.py:6190": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887700>, <function chain.<locals>.<lambda> at 0x103887af0>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887b80>, <function chain.<locals>.<lambda> at 0x1038925e0>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887b80>, <function chain.<locals>.<lambda> at 0x103887670>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x1038b6e50>, <function chain.<locals>.<lambda> at 0x1038b6040>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x1038923a0>, <function chain.<locals>.<lambda> at 0x103887790>)"
          }
        ],
        "code_context": "x19 = fork(argmin, x12, x17)"
      },
      "solvers.py:6198": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function subtract at 0x103756ee0>, <function compose.<locals>.<lambda> at 0x103892040, <function chain.<locals>.<lambda> at 0x103887f70>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function subtract at 0x103756ee0>, <function compose.<locals>.<lambda> at 0x103892430, <function chain.<locals>.<lambda> at 0x103892040>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function subtract at 0x103756ee0>, <function compose.<locals>.<lambda> at 0x1038b60d0, <function chain.<locals>.<lambda> at 0x1038b61f0>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function subtract at 0x103756ee0>, <function compose.<locals>.<lambda> at 0x1038925e0, <function chain.<locals>.<lambda> at 0x103892160>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function subtract at 0x103756ee0>, <function compose.<locals>.<lambda> at 0x1038d0700, <function chain.<locals>.<lambda> at 0x1038d0820>)"
          }
        ],
        "code_context": "x27 = fork(subtract, x26, x25)"
      },
      "solvers.py:6201": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function shift at 0x103756940>, <function compose.<locals>.<lambda> at 0x1038921f0, <function compose.<locals>.<lambda> at 0x103892280)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function shift at 0x103756940>, <function compose.<locals>.<lambda> at 0x103892ee0, <function compose.<locals>.<lambda> at 0x103892f70)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function shift at 0x103756940>, <function compose.<locals>.<lambda> at 0x1038b6160, <function compose.<locals>.<lambda> at 0x1038b6940)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function shift at 0x103756940>, <function compose.<locals>.<lambda> at 0x103871f70, <function compose.<locals>.<lambda> at 0x1038d0550)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function shift at 0x103756940>, <function compose.<locals>.<lambda> at 0x1038d0790, <function compose.<locals>.<lambda> at 0x1038d0f70)"
          }
        ],
        "code_context": "x30 = fork(shift, x28, x29)"
      },
      "solvers.py:6202": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function combine at 0x10373e160>, <function first at 0x103741160>, <function fork.<locals>.<lambda> at 0x103892310>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function combine at 0x10373e160>, <function first at 0x103741160>, <function fork.<locals>.<lambda> at 0x1038b6040>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function combine at 0x10373e160>, <function first at 0x103741160>, <function fork.<locals>.<lambda> at 0x1038b6430>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function combine at 0x10373e160>, <function first at 0x103741160>, <function fork.<locals>.<lambda> at 0x1038d01f0>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function combine at 0x10373e160>, <function first at 0x103741160>, <function fork.<locals>.<lambda> at 0x1038eb0d0>)"
          }
        ],
        "code_context": "x31 = fork(combine, first, x30)"
      },
      "solvers.py:6203": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function remove at 0x103751f70>, <function compose.<locals>.<lambda> at 0x1038921f0, <function last at 0x103745430>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function remove at 0x103751f70>, <function compose.<locals>.<lambda> at 0x103892ee0, <function last at 0x103745430>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function remove at 0x103751f70>, <function compose.<locals>.<lambda> at 0x1038b6160, <function last at 0x103745430>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function remove at 0x103751f70>, <function compose.<locals>.<lambda> at 0x103871f70, <function last at 0x103745430>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function remove at 0x103751f70>, <function compose.<locals>.<lambda> at 0x1038d0790, <function last at 0x103745430>)"
          }
        ],
        "code_context": "x32 = fork(remove, x28, last)"
      },
      "solvers.py:6204": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function astuple at 0x103735700>, <function fork.<locals>.<lambda> at 0x1038923a0>, <function fork.<locals>.<lambda> at 0x103892430>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function astuple at 0x103735700>, <function fork.<locals>.<lambda> at 0x1038b60d0>, <function fork.<locals>.<lambda> at 0x1038b6160>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function astuple at 0x103735700>, <function fork.<locals>.<lambda> at 0x1038b6c10>, <function fork.<locals>.<lambda> at 0x1038b6ca0>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function astuple at 0x103735700>, <function fork.<locals>.<lambda> at 0x1038d0700>, <function fork.<locals>.<lambda> at 0x1038d0790>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function astuple at 0x103735700>, <function fork.<locals>.<lambda> at 0x1038eb280>, <function fork.<locals>.<lambda> at 0x1038eb3a0>)"
          }
        ],
        "code_context": "x33 = fork(astuple, x31, x32)"
      }
    },
    "type_signatures": [
      "fork(function, function, function)"
    ],
    "value_signatures": [
      "fork(<function subtract at 0x103756ee0>, <function compose.<locals>.<lambda> at 0x1038b60d0, <function chain.<locals>.<lambda> at 0x1038b61f0>)",
      "fork(<function remove at 0x103751f70>, <function compose.<locals>.<lambda> at 0x103871f70, <function last at 0x103745430>)",
      "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x1038925e0>, <function chain.<locals>.<lambda> at 0x103887790>)",
      "fork(<function astuple at 0x103735700>, <function fork.<locals>.<lambda> at 0x1038b6c10>, <function fork.<locals>.<lambda> at 0x1038b6ca0>)",
      "fork(<function recolor_o at 0x103751ee0>, <function compose.<locals>.<lambda> at 0x1038b61f0, <function identity at 0x103741e50>)",
      "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887ca0>, <function chain.<locals>.<lambda> at 0x1038925e0>)",
      "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x103887550)",
      "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x1038b6e50>, <function chain.<locals>.<lambda> at 0x1038b6040>)",
      "fork(<function astuple at 0x103735700>, <function fork.<locals>.<lambda> at 0x1038d0700>, <function fork.<locals>.<lambda> at 0x1038d0790>)",
      "fork(<function subtract at 0x103756ee0>, <function compose.<locals>.<lambda> at 0x103892040, <function chain.<locals>.<lambda> at 0x103887f70>)",
      "fork(<function shift at 0x103756940>, <function compose.<locals>.<lambda> at 0x1038b6160, <function compose.<locals>.<lambda> at 0x1038b6940)",
      "fork(<function recolor_o at 0x103751ee0>, <function compose.<locals>.<lambda> at 0x103892ee0, <function identity at 0x103741e50>)",
      "fork(<function recolor_o at 0x103751ee0>, <function compose.<locals>.<lambda> at 0x103887040, <function identity at 0x103741e50>)",
      "fork(<function remove at 0x103751f70>, <function compose.<locals>.<lambda> at 0x103892ee0, <function last at 0x103745430>)",
      "fork(<function combine at 0x10373e160>, <function first at 0x103741160>, <function fork.<locals>.<lambda> at 0x1038b6040>)",
      "fork(<function combine at 0x10373e160>, <function first at 0x103741160>, <function fork.<locals>.<lambda> at 0x103892310>)",
      "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x1038b60d0)",
      "fork(<function remove at 0x103751f70>, <function compose.<locals>.<lambda> at 0x1038d0790, <function last at 0x103745430>)",
      "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x103887940)",
      "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887670>, <function chain.<locals>.<lambda> at 0x103887af0>)",
      "fork(<function remove at 0x103751f70>, <function compose.<locals>.<lambda> at 0x1038921f0, <function last at 0x103745430>)",
      "fork(<function combine at 0x10373e160>, <function first at 0x103741160>, <function fork.<locals>.<lambda> at 0x1038d01f0>)",
      "fork(<function recolor_o at 0x103751ee0>, <function compose.<locals>.<lambda> at 0x103887940, <function identity at 0x103741e50>)",
      "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x103887430)",
      "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x103887790)",
      "fork(<function subtract at 0x103756ee0>, <function compose.<locals>.<lambda> at 0x1038d0700, <function chain.<locals>.<lambda> at 0x1038d0820>)",
      "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887700>, <function chain.<locals>.<lambda> at 0x103887af0>)",
      "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x1038923a0)",
      "fork(<function subtract at 0x103756ee0>, <function compose.<locals>.<lambda> at 0x1038925e0, <function chain.<locals>.<lambda> at 0x103892160>)",
      "fork(<function astuple at 0x103735700>, <function fork.<locals>.<lambda> at 0x1038923a0>, <function fork.<locals>.<lambda> at 0x103892430>)",
      "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x1038b6dc0)",
      "fork(<function shift at 0x103756940>, <function compose.<locals>.<lambda> at 0x103871f70, <function compose.<locals>.<lambda> at 0x1038d0550)",
      "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887b80>, <function chain.<locals>.<lambda> at 0x1038925e0>)",
      "fork(<function astuple at 0x103735700>, <function fork.<locals>.<lambda> at 0x1038eb280>, <function fork.<locals>.<lambda> at 0x1038eb3a0>)",
      "fork(<function remove at 0x103751f70>, <function compose.<locals>.<lambda> at 0x1038b6160, <function last at 0x103745430>)",
      "fork(<function shift at 0x103756940>, <function compose.<locals>.<lambda> at 0x103892ee0, <function compose.<locals>.<lambda> at 0x103892f70)",
      "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103892160>, <function chain.<locals>.<lambda> at 0x103887670>)",
      "fork(<function recolor_o at 0x103751ee0>, <function compose.<locals>.<lambda> at 0x103887c10, <function identity at 0x103741e50>)",
      "fork(<function shift at 0x103756940>, <function compose.<locals>.<lambda> at 0x1038921f0, <function compose.<locals>.<lambda> at 0x103892280)",
      "fork(<function combine at 0x10373e160>, <function first at 0x103741160>, <function fork.<locals>.<lambda> at 0x1038eb0d0>)",
      "fork(<function sfilter at 0x103756670>, <function identity at 0x103741e50>, <function compose.<locals>.<lambda> at 0x1038925e0)",
      "fork(<function astuple at 0x103735700>, <function fork.<locals>.<lambda> at 0x1038b60d0>, <function fork.<locals>.<lambda> at 0x1038b6160>)",
      "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887b80>, <function chain.<locals>.<lambda> at 0x103887670>)",
      "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x1038923a0>, <function chain.<locals>.<lambda> at 0x103887790>)",
      "fork(<function argmin at 0x103735430>, <function fork.<locals>.<lambda> at 0x103887ca0>, <function chain.<locals>.<lambda> at 0x1038b6040>)",
      "fork(<function shift at 0x103756940>, <function compose.<locals>.<lambda> at 0x1038d0790, <function compose.<locals>.<lambda> at 0x1038d0f70)",
      "fork(<function combine at 0x10373e160>, <function first at 0x103741160>, <function fork.<locals>.<lambda> at 0x1038b6430>)",
      "fork(<function subtract at 0x103756ee0>, <function compose.<locals>.<lambda> at 0x103892430, <function chain.<locals>.<lambda> at 0x103892040>)"
    ]
  },
  "apply": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6176": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x103887160>, frozenset({frozenset({(5, (2, 2)), (2, (1, 0)), (2)"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x103887550>, frozenset({frozenset({(1, (0, 4)), (5, (0, 5)), (5)"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x103892f70>, frozenset({frozenset({(5, (0, 2)), (1, (0, 1)), (1)"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x103887b80>, frozenset({frozenset({(5, (1, 6)), (2, (1, 8)), (2)"
          },
          {
            "type_signature": "apply(function, frozenset)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x1038b6e50>, frozenset({frozenset({(1, (0, 4)), (1, (1, 4)), (5)"
          }
        ],
        "code_context": "x5 = apply(x4, x1)"
      }
    },
    "type_signatures": [
      "apply(function, frozenset)"
    ],
    "value_signatures": [
      "apply(<function fork.<locals>.<lambda> at 0x103887b80>, frozenset({frozenset({(5, (1, 6)), (2, (1, 8)), (2)",
      "apply(<function fork.<locals>.<lambda> at 0x1038b6e50>, frozenset({frozenset({(1, (0, 4)), (1, (1, 4)), (5)",
      "apply(<function fork.<locals>.<lambda> at 0x103887550>, frozenset({frozenset({(1, (0, 4)), (5, (0, 5)), (5)",
      "apply(<function fork.<locals>.<lambda> at 0x103892f70>, frozenset({frozenset({(5, (0, 2)), (1, (0, 1)), (1)",
      "apply(<function fork.<locals>.<lambda> at 0x103887160>, frozenset({frozenset({(5, (2, 2)), (2, (1, 0)), (2)"
    ]
  },
  "palette_f": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6176": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(5, (2, 2)), (2, (1, 0)), (2, (1, 2)), )"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(5, (2, 8)), (6, (2, 9)), (6, (2, 10))})"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(8, (1, 6)), (5, (1, 4)), (8, (1, 5)), )"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(1, (0, 4)), (5, (0, 5)), (5, (0, 3))}))"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(2, (1, 0)), (5, (2, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(3, (1, 10)), (5, (2, 7)), (3, (2, 8)),)"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(5, (0, 2)), (1, (0, 1)), (1, (1, 1)), )"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(5, (2, 5)), (2, (1, 5)), (5, (1, 4))}))"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(2, (0, 8)), (2, (1, 8)), (5, (1, 7)), )"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(5, (1, 6)), (2, (1, 8)), (2, (1, 7))}))"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(2, (1, 0)), (2, (1, 1)), (5, (0, 1))}))"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(1, (1, 4)), (5, (2, 4)), (5, (1, 3))}))"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(1, (0, 4)), (1, (1, 4)), (5, (2, 4)), )"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(5, (1, 6)), (5, (0, 7)), (3, (1, 7))}))"
          },
          {
            "type_signature": "palette_f(frozenset)",
            "value_signature": "palette_f(frozenset({(8, (0, 10)), (8, (1, 10)), (5, (0, 9)))"
          }
        ],
        "code_context": "x5 = apply(x4, x1)"
      }
    },
    "type_signatures": [
      "palette_f(frozenset)"
    ],
    "value_signatures": [
      "palette_f(frozenset({(3, (1, 10)), (5, (2, 7)), (3, (2, 8)),)",
      "palette_f(frozenset({(5, (0, 2)), (1, (0, 1)), (1, (1, 1)), )",
      "palette_f(frozenset({(5, (1, 6)), (5, (0, 7)), (3, (1, 7))}))",
      "palette_f(frozenset({(5, (2, 8)), (6, (2, 9)), (6, (2, 10))})",
      "palette_f(frozenset({(5, (2, 5)), (2, (1, 5)), (5, (1, 4))}))",
      "palette_f(frozenset({(1, (0, 4)), (1, (1, 4)), (5, (2, 4)), )",
      "palette_f(frozenset({(2, (1, 0)), (5, (2, 1)), (2, (1, 1))}))",
      "palette_f(frozenset({(8, (1, 6)), (5, (1, 4)), (8, (1, 5)), )",
      "palette_f(frozenset({(1, (1, 4)), (5, (2, 4)), (5, (1, 3))}))",
      "palette_f(frozenset({(8, (0, 10)), (8, (1, 10)), (5, (0, 9)))",
      "palette_f(frozenset({(2, (0, 8)), (2, (1, 8)), (5, (1, 7)), )",
      "palette_f(frozenset({(5, (1, 6)), (2, (1, 8)), (2, (1, 7))}))",
      "palette_f(frozenset({(5, (2, 2)), (2, (1, 0)), (2, (1, 2)), )",
      "palette_f(frozenset({(2, (1, 0)), (2, (1, 1)), (5, (0, 1))}))",
      "palette_f(frozenset({(1, (0, 4)), (5, (0, 5)), (5, (0, 3))}))"
    ]
  },
  "other": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6176": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "other(frozenset, int)",
            "value_signature": "other(frozenset({2, 5}), 5)"
          },
          {
            "type_signature": "other(frozenset, int)",
            "value_signature": "other(frozenset({5, 6}), 5)"
          },
          {
            "type_signature": "other(frozenset, int)",
            "value_signature": "other(frozenset({8, 5}), 5)"
          },
          {
            "type_signature": "other(frozenset, int)",
            "value_signature": "other(frozenset({1, 5}), 5)"
          },
          {
            "type_signature": "other(frozenset, int)",
            "value_signature": "other(frozenset({3, 5}), 5)"
          }
        ],
        "code_context": "x5 = apply(x4, x1)"
      }
    },
    "type_signatures": [
      "other(frozenset, int)"
    ],
    "value_signatures": [
      "other(frozenset({1, 5}), 5)",
      "other(frozenset({5, 6}), 5)",
      "other(frozenset({2, 5}), 5)",
      "other(frozenset({8, 5}), 5)",
      "other(frozenset({3, 5}), 5)"
    ]
  },
  "remove": {
    "calls": 32,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6176": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "remove(int, frozenset)",
            "value_signature": "remove(5, frozenset({2, 5}))"
          },
          {
            "type_signature": "remove(int, frozenset)",
            "value_signature": "remove(5, frozenset({5, 6}))"
          },
          {
            "type_signature": "remove(int, frozenset)",
            "value_signature": "remove(5, frozenset({8, 5}))"
          },
          {
            "type_signature": "remove(int, frozenset)",
            "value_signature": "remove(5, frozenset({1, 5}))"
          },
          {
            "type_signature": "remove(int, frozenset)",
            "value_signature": "remove(5, frozenset({3, 5}))"
          }
        ],
        "code_context": "x5 = apply(x4, x1)"
      },
      "solvers.py:6208": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), , (frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)),)"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), , (frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)),)"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))}, (frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10)))"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}), (frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))})"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}), (frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))})"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),, (frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)))"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), , (frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)),)"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}), (frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))})"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), , (frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)),)"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}), (frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))})"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}), (frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))})"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}), (frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))})"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), , (frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)),)"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}), (frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))})"
          },
          {
            "type_signature": "remove(frozenset, tuple)",
            "value_signature": "remove(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)), (frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "remove(frozenset, tuple)",
      "remove(int, frozenset)"
    ],
    "value_signatures": [
      "remove(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), , (frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)),)",
      "remove(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}), (frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))})",
      "remove(5, frozenset({5, 6}))",
      "remove(5, frozenset({8, 5}))",
      "remove(5, frozenset({3, 5}))",
      "remove(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),, (frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)))",
      "remove(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), , (frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)),)",
      "remove(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}), (frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))})",
      "remove(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}), (frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))})",
      "remove(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}), (frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))})",
      "remove(5, frozenset({1, 5}))",
      "remove(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)), (frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10))",
      "remove(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}), (frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))})",
      "remove(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), , (frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)),)",
      "remove(5, frozenset({2, 5}))",
      "remove(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), , (frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)),)",
      "remove(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}), (frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))})",
      "remove(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}), (frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))})",
      "remove(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))}, (frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10)))",
      "remove(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), , (frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)),)"
    ]
  },
  "first": {
    "calls": 101,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6176": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({2}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({6}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({8}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({1}))"
          },
          {
            "type_signature": "first(frozenset)",
            "value_signature": "first(frozenset({3}))"
          }
        ],
        "code_context": "x5 = apply(x4, x1)"
      },
      "solvers.py:6208": {
        "count": 25,
        "signatures": [
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(0, (1, -1))}), (frozenset({(2, (1, 0))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)),)"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)),)"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(2, (2, 2)), (8, (1, 5)), (0, (1, -1)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))})"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))})"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(0, (1, -1)), (1, (2, 4)), (1, (2, 2)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(0, (1, -1))}), (frozenset({(1, (0, 1))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)),)"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))})"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)),)"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))})"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))})"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(0, (1, -1)), (1, (0, 3)), (1, (0, 2)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))})"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)),)"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))})"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(3, (1, 5)), (0, (1, -1)), (2, (0, 1)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      },
      "solvers.py:6209": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(2, (2, 2)), (8, (1, 5)), (6, (1, 8)),)"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(0, (1, -1)), (1, (2, 4)), (1, (2, 2)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(1, (0, 1)), (1, (1, 1)), (2, (1, 5)),)"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(2, (1, 5)), (0, (1, -1)), (2, (0, 1)))"
          },
          {
            "type_signature": "first(tuple)",
            "value_signature": "first((frozenset({(3, (1, 5)), (0, (1, -1)), (1, (0, 3)))"
          }
        ],
        "code_context": "x38 = first(x37)"
      }
    },
    "type_signatures": [
      "first(frozenset)",
      "first(tuple)"
    ],
    "value_signatures": [
      "first((frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))})",
      "first(frozenset({1}))",
      "first((frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))})",
      "first((frozenset({(3, (1, 5)), (0, (1, -1)), (1, (0, 3)))",
      "first((frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)),)",
      "first((frozenset({(0, (1, -1)), (1, (0, 3)), (1, (0, 2)))",
      "first((frozenset({(2, (1, 5)), (0, (1, -1)), (2, (0, 1)))",
      "first((frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)))",
      "first((frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))})",
      "first((frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))})",
      "first(frozenset({6}))",
      "first((frozenset({(0, (1, -1))}), (frozenset({(1, (0, 1))",
      "first((frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)))",
      "first((frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10)))",
      "first((frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)))",
      "first((frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)))",
      "first((frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))})",
      "first((frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))})",
      "first((frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))})",
      "first(frozenset({8}))",
      "first((frozenset({(3, (1, 5)), (0, (1, -1)), (2, (0, 1)))",
      "first((frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)),)",
      "first((frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)),)",
      "first(frozenset({3}))",
      "first((frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)))",
      "first(frozenset({2}))",
      "first((frozenset({(2, (2, 2)), (8, (1, 5)), (6, (1, 8)),)",
      "first((frozenset({(0, (1, -1)), (1, (2, 4)), (1, (2, 2)))",
      "first((frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10))",
      "first((frozenset({(2, (2, 2)), (8, (1, 5)), (0, (1, -1)))",
      "first((frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)),)",
      "first((frozenset({(0, (1, -1))}), (frozenset({(2, (1, 0))",
      "first((frozenset({(1, (0, 1)), (1, (1, 1)), (2, (1, 5)),)",
      "first((frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)),)"
    ]
  },
  "identity": {
    "calls": 48,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6176": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(5, (2, 2)), (2, (1, 0)), (2, (1, 2)), )"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(5, (2, 8)), (6, (2, 9)), (6, (2, 10))})"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(8, (1, 6)), (5, (1, 4)), (8, (1, 5)), )"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(1, (0, 4)), (5, (0, 5)), (5, (0, 3))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(2, (1, 0)), (5, (2, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(3, (1, 10)), (5, (2, 7)), (3, (2, 8)),)"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(5, (0, 2)), (1, (0, 1)), (1, (1, 1)), )"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(5, (2, 5)), (2, (1, 5)), (5, (1, 4))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(2, (0, 8)), (2, (1, 8)), (5, (1, 7)), )"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(5, (1, 6)), (2, (1, 8)), (2, (1, 7))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(2, (1, 0)), (2, (1, 1)), (5, (0, 1))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(1, (1, 4)), (5, (2, 4)), (5, (1, 3))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(1, (0, 4)), (1, (1, 4)), (5, (2, 4)), )"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(5, (1, 6)), (5, (0, 7)), (3, (1, 7))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(8, (0, 10)), (8, (1, 10)), (5, (0, 9)))"
          }
        ],
        "code_context": "x5 = apply(x4, x1)"
      },
      "solvers.py:6208": {
        "count": 24,
        "signatures": [
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(0, (1, -1))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), )"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),)"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), )"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset(len=9))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))})"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),)"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset(len=7))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),)"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), )"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),)"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset(len=8))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), )"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),)"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), )"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset(len=11))"
          },
          {
            "type_signature": "identity(frozenset)",
            "value_signature": "identity(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "identity(frozenset)"
    ],
    "value_signatures": [
      "identity(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),)",
      "identity(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), )",
      "identity(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), )",
      "identity(frozenset({(5, (0, 2)), (1, (0, 1)), (1, (1, 1)), )",
      "identity(frozenset({(0, (1, -1))}))",
      "identity(frozenset({(2, (1, 0)), (5, (2, 1)), (2, (1, 1))}))",
      "identity(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),)",
      "identity(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),)",
      "identity(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), )",
      "identity(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),)",
      "identity(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))})",
      "identity(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}))",
      "identity(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}))",
      "identity(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)))",
      "identity(frozenset({(5, (2, 8)), (6, (2, 9)), (6, (2, 10))})",
      "identity(frozenset({(3, (1, 10)), (5, (2, 7)), (3, (2, 8)),)",
      "identity(frozenset(len=7))",
      "identity(frozenset({(5, (1, 6)), (2, (1, 8)), (2, (1, 7))}))",
      "identity(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), )",
      "identity(frozenset({(1, (1, 4)), (5, (2, 4)), (5, (1, 3))}))",
      "identity(frozenset({(2, (0, 8)), (2, (1, 8)), (5, (1, 7)), )",
      "identity(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), )",
      "identity(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}))",
      "identity(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}))",
      "identity(frozenset({(1, (0, 4)), (5, (0, 5)), (5, (0, 3))}))",
      "identity(frozenset({(1, (0, 4)), (1, (1, 4)), (5, (2, 4)), )",
      "identity(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}))",
      "identity(frozenset({(8, (1, 6)), (5, (1, 4)), (8, (1, 5)), )",
      "identity(frozenset({(5, (2, 2)), (2, (1, 0)), (2, (1, 2)), )",
      "identity(frozenset({(5, (1, 6)), (5, (0, 7)), (3, (1, 7))}))",
      "identity(frozenset({(5, (2, 5)), (2, (1, 5)), (5, (1, 4))}))",
      "identity(frozenset(len=9))",
      "identity(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}))",
      "identity(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),)",
      "identity(frozenset(len=11))",
      "identity(frozenset(len=8))",
      "identity(frozenset({(8, (0, 10)), (8, (1, 10)), (5, (0, 9)))",
      "identity(frozenset({(2, (1, 0)), (2, (1, 1)), (5, (0, 1))}))",
      "identity(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}))"
    ]
  },
  "recolor_o": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6176": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(2, frozenset({(5, (2, 2)), (2, (1, 0)), (2, (1, 2)), )"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(6, frozenset({(5, (2, 8)), (6, (2, 9)), (6, (2, 10))})"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(8, frozenset({(8, (1, 6)), (5, (1, 4)), (8, (1, 5)), )"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(1, frozenset({(1, (0, 4)), (5, (0, 5)), (5, (0, 3))}))"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(2, frozenset({(2, (1, 0)), (5, (2, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(3, frozenset({(3, (1, 10)), (5, (2, 7)), (3, (2, 8)),)"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(1, frozenset({(5, (0, 2)), (1, (0, 1)), (1, (1, 1)), )"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(2, frozenset({(5, (2, 5)), (2, (1, 5)), (5, (1, 4))}))"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(2, frozenset({(2, (0, 8)), (2, (1, 8)), (5, (1, 7)), )"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(2, frozenset({(5, (1, 6)), (2, (1, 8)), (2, (1, 7))}))"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(2, frozenset({(2, (1, 0)), (2, (1, 1)), (5, (0, 1))}))"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(1, frozenset({(1, (1, 4)), (5, (2, 4)), (5, (1, 3))}))"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(1, frozenset({(1, (0, 4)), (1, (1, 4)), (5, (2, 4)), )"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(3, frozenset({(5, (1, 6)), (5, (0, 7)), (3, (1, 7))}))"
          },
          {
            "type_signature": "recolor_o(int, frozenset)",
            "value_signature": "recolor_o(8, frozenset({(8, (0, 10)), (8, (1, 10)), (5, (0, 9)))"
          }
        ],
        "code_context": "x5 = apply(x4, x1)"
      }
    },
    "type_signatures": [
      "recolor_o(int, frozenset)"
    ],
    "value_signatures": [
      "recolor_o(2, frozenset({(5, (2, 2)), (2, (1, 0)), (2, (1, 2)), )",
      "recolor_o(6, frozenset({(5, (2, 8)), (6, (2, 9)), (6, (2, 10))})",
      "recolor_o(2, frozenset({(2, (0, 8)), (2, (1, 8)), (5, (1, 7)), )",
      "recolor_o(2, frozenset({(5, (1, 6)), (2, (1, 8)), (2, (1, 7))}))",
      "recolor_o(2, frozenset({(2, (1, 0)), (5, (2, 1)), (2, (1, 1))}))",
      "recolor_o(2, frozenset({(2, (1, 0)), (2, (1, 1)), (5, (0, 1))}))",
      "recolor_o(1, frozenset({(1, (0, 4)), (1, (1, 4)), (5, (2, 4)), )",
      "recolor_o(1, frozenset({(1, (0, 4)), (5, (0, 5)), (5, (0, 3))}))",
      "recolor_o(8, frozenset({(8, (1, 6)), (5, (1, 4)), (8, (1, 5)), )",
      "recolor_o(8, frozenset({(8, (0, 10)), (8, (1, 10)), (5, (0, 9)))",
      "recolor_o(2, frozenset({(5, (2, 5)), (2, (1, 5)), (5, (1, 4))}))",
      "recolor_o(3, frozenset({(3, (1, 10)), (5, (2, 7)), (3, (2, 8)),)",
      "recolor_o(3, frozenset({(5, (1, 6)), (5, (0, 7)), (3, (1, 7))}))",
      "recolor_o(1, frozenset({(1, (1, 4)), (5, (2, 4)), (5, (1, 3))}))",
      "recolor_o(1, frozenset({(5, (0, 2)), (1, (0, 1)), (1, (1, 1)), )"
    ]
  },
  "toindices_o": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6176": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(5, (2, 2)), (2, (1, 0)), (2, (1, 2)), )"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(5, (2, 8)), (6, (2, 9)), (6, (2, 10))})"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(8, (1, 6)), (5, (1, 4)), (8, (1, 5)), )"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(1, (0, 4)), (5, (0, 5)), (5, (0, 3))}))"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(2, (1, 0)), (5, (2, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(3, (1, 10)), (5, (2, 7)), (3, (2, 8)),)"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(5, (0, 2)), (1, (0, 1)), (1, (1, 1)), )"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(5, (2, 5)), (2, (1, 5)), (5, (1, 4))}))"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(2, (0, 8)), (2, (1, 8)), (5, (1, 7)), )"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(5, (1, 6)), (2, (1, 8)), (2, (1, 7))}))"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(2, (1, 0)), (2, (1, 1)), (5, (0, 1))}))"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(1, (1, 4)), (5, (2, 4)), (5, (1, 3))}))"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(1, (0, 4)), (1, (1, 4)), (5, (2, 4)), )"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(5, (1, 6)), (5, (0, 7)), (3, (1, 7))}))"
          },
          {
            "type_signature": "toindices_o(frozenset)",
            "value_signature": "toindices_o(frozenset({(8, (0, 10)), (8, (1, 10)), (5, (0, 9)))"
          }
        ],
        "code_context": "x5 = apply(x4, x1)"
      }
    },
    "type_signatures": [
      "toindices_o(frozenset)"
    ],
    "value_signatures": [
      "toindices_o(frozenset({(1, (1, 4)), (5, (2, 4)), (5, (1, 3))}))",
      "toindices_o(frozenset({(1, (0, 4)), (1, (1, 4)), (5, (2, 4)), )",
      "toindices_o(frozenset({(5, (1, 6)), (2, (1, 8)), (2, (1, 7))}))",
      "toindices_o(frozenset({(5, (0, 2)), (1, (0, 1)), (1, (1, 1)), )",
      "toindices_o(frozenset({(5, (1, 6)), (5, (0, 7)), (3, (1, 7))}))",
      "toindices_o(frozenset({(2, (1, 0)), (5, (2, 1)), (2, (1, 1))}))",
      "toindices_o(frozenset({(1, (0, 4)), (5, (0, 5)), (5, (0, 3))}))",
      "toindices_o(frozenset({(5, (2, 2)), (2, (1, 0)), (2, (1, 2)), )",
      "toindices_o(frozenset({(8, (0, 10)), (8, (1, 10)), (5, (0, 9)))",
      "toindices_o(frozenset({(5, (2, 8)), (6, (2, 9)), (6, (2, 10))})",
      "toindices_o(frozenset({(2, (0, 8)), (2, (1, 8)), (5, (1, 7)), )",
      "toindices_o(frozenset({(2, (1, 0)), (2, (1, 1)), (5, (0, 1))}))",
      "toindices_o(frozenset({(5, (2, 5)), (2, (1, 5)), (5, (1, 4))}))",
      "toindices_o(frozenset({(3, (1, 10)), (5, (2, 7)), (3, (2, 8)),)",
      "toindices_o(frozenset({(8, (1, 6)), (5, (1, 4)), (8, (1, 5)), )"
    ]
  },
  "order": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6177": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "order(frozenset, function)",
            "value_signature": "order(frozenset({frozenset({(2, (1, 0)), (2, (2, 2)), (2, <function leftmost at 0x1037459d0>)"
          },
          {
            "type_signature": "order(frozenset, function)",
            "value_signature": "order(frozenset({frozenset({(2, (1, 0)), (2, (2, 1)), (2, <function leftmost at 0x1037459d0>)"
          },
          {
            "type_signature": "order(frozenset, function)",
            "value_signature": "order(frozenset({frozenset({(2, (0, 8)), (2, (1, 8)), (2, <function leftmost at 0x1037459d0>)"
          },
          {
            "type_signature": "order(frozenset, function)",
            "value_signature": "order(frozenset({frozenset({(1, (2, 4)), (1, (1, 4)), (1, <function leftmost at 0x1037459d0>)"
          },
          {
            "type_signature": "order(frozenset, function)",
            "value_signature": "order(frozenset({frozenset({(3, (1, 6)), (3, (1, 7)), (3, <function leftmost at 0x1037459d0>)"
          }
        ],
        "code_context": "x6 = order(x5, leftmost)"
      }
    },
    "type_signatures": [
      "order(frozenset, function)"
    ],
    "value_signatures": [
      "order(frozenset({frozenset({(2, (1, 0)), (2, (2, 2)), (2, <function leftmost at 0x1037459d0>)",
      "order(frozenset({frozenset({(1, (2, 4)), (1, (1, 4)), (1, <function leftmost at 0x1037459d0>)",
      "order(frozenset({frozenset({(2, (1, 0)), (2, (2, 1)), (2, <function leftmost at 0x1037459d0>)",
      "order(frozenset({frozenset({(2, (0, 8)), (2, (1, 8)), (2, <function leftmost at 0x1037459d0>)",
      "order(frozenset({frozenset({(3, (1, 6)), (3, (1, 7)), (3, <function leftmost at 0x1037459d0>)"
    ]
  },
  "leftmost": {
    "calls": 37,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6177": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), )"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))})"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), )"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),)"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), )"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), )"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), )"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)))"
          }
        ],
        "code_context": "x6 = order(x5, leftmost)"
      },
      "solvers.py:6208": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), )"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), )"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))})"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),)"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), )"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), )"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), )"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      },
      "solvers.py:6210": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=12))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=10))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=14))"
          }
        ],
        "code_context": "x39 = width_f(x38)"
      }
    },
    "type_signatures": [
      "leftmost(frozenset)"
    ],
    "value_signatures": [
      "leftmost(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}))",
      "leftmost(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))})",
      "leftmost(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}))",
      "leftmost(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}))",
      "leftmost(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), )",
      "leftmost(frozenset(len=10))",
      "leftmost(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), )",
      "leftmost(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), )",
      "leftmost(frozenset(len=12))",
      "leftmost(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}))",
      "leftmost(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}))",
      "leftmost(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),)",
      "leftmost(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), )",
      "leftmost(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)))",
      "leftmost(frozenset(len=14))",
      "leftmost(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), )",
      "leftmost(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}))",
      "leftmost(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}))"
    ]
  },
  "toindices": {
    "calls": 90,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6177": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), )"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))})"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), )"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),)"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), )"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), )"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), )"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)))"
          }
        ],
        "code_context": "x6 = order(x5, leftmost)"
      },
      "solvers.py:6208": {
        "count": 24,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(0, (1, -1))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), )"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),)"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), )"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=9))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))})"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),)"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=7))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),)"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), )"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),)"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=8))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), )"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),)"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), )"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=11))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      },
      "solvers.py:6210": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=12))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=10))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=14))"
          }
        ],
        "code_context": "x39 = width_f(x38)"
      }
    },
    "type_signatures": [
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}))",
      "toindices(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}))",
      "toindices(frozenset(len=8))",
      "toindices(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))})",
      "toindices(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}))",
      "toindices(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), )",
      "toindices(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),)",
      "toindices(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),)",
      "toindices(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), )",
      "toindices(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), )",
      "toindices(frozenset(len=11))",
      "toindices(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}))",
      "toindices(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), )",
      "toindices(frozenset(len=10))",
      "toindices(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}))",
      "toindices(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),)",
      "toindices(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), )",
      "toindices(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)))",
      "toindices(frozenset(len=12))",
      "toindices(frozenset(len=7))",
      "toindices(frozenset(len=14))",
      "toindices(frozenset({(0, (1, -1))}))",
      "toindices(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),)",
      "toindices(frozenset(len=9))",
      "toindices(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}))",
      "toindices(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}))",
      "toindices(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),)"
    ]
  },
  "lbind": {
    "calls": 20,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6179": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function matcher at 0x10374e310>, <function compose.<locals>.<lambda> at 0x1038871f0)"
          },
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function matcher at 0x10374e310>, <function compose.<locals>.<lambda> at 0x103887310)"
          },
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function matcher at 0x10374e310>, <function compose.<locals>.<lambda> at 0x103892dc0)"
          },
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function matcher at 0x10374e310>, <function compose.<locals>.<lambda> at 0x103887670)"
          },
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function matcher at 0x10374e310>, <function compose.<locals>.<lambda> at 0x1038b6040)"
          }
        ],
        "code_context": "x8 = lbind(matcher, x7)"
      },
      "solvers.py:6186": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function rbind.<locals>.<lambda> at 0x103887820>, <function size at 0x103756af0>)"
          },
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function rbind.<locals>.<lambda> at 0x103887430>, <function size at 0x103756af0>)"
          },
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function rbind.<locals>.<lambda> at 0x103887af0>, <function size at 0x103756af0>)"
          },
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function rbind.<locals>.<lambda> at 0x1038b6d30>, <function size at 0x103756af0>)"
          },
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function rbind.<locals>.<lambda> at 0x103892dc0>, <function size at 0x103756af0>)"
          }
        ],
        "code_context": "x15 = lbind(x14, size)"
      },
      "solvers.py:6187": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "lbind(function, function)",
            "value_signature": "lbind(<function rbind at 0x103751dc0>, <function intersection at 0x103745280>)"
          }
        ],
        "code_context": "x16 = lbind(rbind, intersection)"
      },
      "solvers.py:6195": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function add at 0x1032f3f70>, (0, 1))"
          }
        ],
        "code_context": "x24 = lbind(add, RIGHT)"
      }
    },
    "type_signatures": [
      "lbind(function, function)",
      "lbind(function, tuple)"
    ],
    "value_signatures": [
      "lbind(<function matcher at 0x10374e310>, <function compose.<locals>.<lambda> at 0x103887310)",
      "lbind(<function matcher at 0x10374e310>, <function compose.<locals>.<lambda> at 0x1038b6040)",
      "lbind(<function rbind.<locals>.<lambda> at 0x103892dc0>, <function size at 0x103756af0>)",
      "lbind(<function rbind.<locals>.<lambda> at 0x103887af0>, <function size at 0x103756af0>)",
      "lbind(<function rbind at 0x103751dc0>, <function intersection at 0x103745280>)",
      "lbind(<function rbind.<locals>.<lambda> at 0x103887820>, <function size at 0x103756af0>)",
      "lbind(<function rbind.<locals>.<lambda> at 0x1038b6d30>, <function size at 0x103756af0>)",
      "lbind(<function rbind.<locals>.<lambda> at 0x103887430>, <function size at 0x103756af0>)",
      "lbind(<function matcher at 0x10374e310>, <function compose.<locals>.<lambda> at 0x103892dc0)",
      "lbind(<function matcher at 0x10374e310>, <function compose.<locals>.<lambda> at 0x1038871f0)",
      "lbind(<function matcher at 0x10374e310>, <function compose.<locals>.<lambda> at 0x103887670)",
      "lbind(<function add at 0x1032f3f70>, (0, 1))"
    ]
  },
  "chain": {
    "calls": 42,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6188": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function lbind.<locals>.<lambda> at 0x103887940>, <function lbind.<locals>.<lambda> at 0x103887a60>, <function toindices at 0x10375b040>)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function lbind.<locals>.<lambda> at 0x103887160>, <function lbind.<locals>.<lambda> at 0x103871f70>, <function toindices at 0x10375b040>)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function lbind.<locals>.<lambda> at 0x103887310>, <function lbind.<locals>.<lambda> at 0x103887430>, <function toindices at 0x10375b040>)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function lbind.<locals>.<lambda> at 0x1038b6430>, <function lbind.<locals>.<lambda> at 0x1038b6940>, <function toindices at 0x10375b040>)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function lbind.<locals>.<lambda> at 0x103887310>, <function lbind.<locals>.<lambda> at 0x103887ca0>, <function toindices at 0x10375b040>)"
          }
        ],
        "code_context": "x17 = chain(x15, x16, toindices)"
      },
      "solvers.py:6196": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function compose.<locals>.<lambda> at 0x103887ca0, <function first at 0x103741160>, <function last at 0x103745430>)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function compose.<locals>.<lambda> at 0x1038923a0, <function first at 0x103741160>, <function last at 0x103745430>)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function compose.<locals>.<lambda> at 0x103887550, <function first at 0x103741160>, <function last at 0x103745430>)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function compose.<locals>.<lambda> at 0x1038b6280, <function first at 0x103741160>, <function last at 0x103745430>)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function compose.<locals>.<lambda> at 0x103887dc0, <function first at 0x103741160>, <function last at 0x103745430>)"
          }
        ],
        "code_context": "x25 = chain(x20, first, last)"
      },
      "solvers.py:6208": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x103892700>, <function compose.<locals>.<lambda> at 0x103887790)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x103892820>, <function compose.<locals>.<lambda> at 0x103887790)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x103892af0>, <function compose.<locals>.<lambda> at 0x103887790)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x103892b80>, <function compose.<locals>.<lambda> at 0x103887790)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038b6430>, <function compose.<locals>.<lambda> at 0x103887670)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038b6940>, <function compose.<locals>.<lambda> at 0x103887670)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038b6f70>, <function compose.<locals>.<lambda> at 0x103887790)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038d01f0>, <function compose.<locals>.<lambda> at 0x103887790)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038d0430>, <function compose.<locals>.<lambda> at 0x103887790)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038d0a60>, <function compose.<locals>.<lambda> at 0x1038b6dc0)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038d0f70>, <function compose.<locals>.<lambda> at 0x1038b6dc0)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038eb670>, <function compose.<locals>.<lambda> at 0x103892160)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038eb790>, <function compose.<locals>.<lambda> at 0x103892160)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038eb9d0>, <function compose.<locals>.<lambda> at 0x103892160)"
          },
          {
            "type_signature": "chain(function, function, function)",
            "value_signature": "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038eba60>, <function compose.<locals>.<lambda> at 0x103892160)"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "chain(function, function, function)"
    ],
    "value_signatures": [
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038d0430>, <function compose.<locals>.<lambda> at 0x103887790)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038d01f0>, <function compose.<locals>.<lambda> at 0x103887790)",
      "chain(<function lbind.<locals>.<lambda> at 0x103887940>, <function lbind.<locals>.<lambda> at 0x103887a60>, <function toindices at 0x10375b040>)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x103892820>, <function compose.<locals>.<lambda> at 0x103887790)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038eb9d0>, <function compose.<locals>.<lambda> at 0x103892160)",
      "chain(<function compose.<locals>.<lambda> at 0x103887dc0, <function first at 0x103741160>, <function last at 0x103745430>)",
      "chain(<function compose.<locals>.<lambda> at 0x1038923a0, <function first at 0x103741160>, <function last at 0x103745430>)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x103892700>, <function compose.<locals>.<lambda> at 0x103887790)",
      "chain(<function compose.<locals>.<lambda> at 0x103887550, <function first at 0x103741160>, <function last at 0x103745430>)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038d0f70>, <function compose.<locals>.<lambda> at 0x1038b6dc0)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038eb670>, <function compose.<locals>.<lambda> at 0x103892160)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x103892af0>, <function compose.<locals>.<lambda> at 0x103887790)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038b6f70>, <function compose.<locals>.<lambda> at 0x103887790)",
      "chain(<function lbind.<locals>.<lambda> at 0x103887310>, <function lbind.<locals>.<lambda> at 0x103887ca0>, <function toindices at 0x10375b040>)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038eb790>, <function compose.<locals>.<lambda> at 0x103892160)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038b6940>, <function compose.<locals>.<lambda> at 0x103887670)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038b6430>, <function compose.<locals>.<lambda> at 0x103887670)",
      "chain(<function compose.<locals>.<lambda> at 0x1038b6280, <function first at 0x103741160>, <function last at 0x103745430>)",
      "chain(<function compose.<locals>.<lambda> at 0x103887ca0, <function first at 0x103741160>, <function last at 0x103745430>)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x103892b80>, <function compose.<locals>.<lambda> at 0x103887790)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038eba60>, <function compose.<locals>.<lambda> at 0x103892160)",
      "chain(<function lbind.<locals>.<lambda> at 0x103887160>, <function lbind.<locals>.<lambda> at 0x103871f70>, <function toindices at 0x10375b040>)",
      "chain(<function lbind.<locals>.<lambda> at 0x103887310>, <function lbind.<locals>.<lambda> at 0x103887430>, <function toindices at 0x10375b040>)",
      "chain(<function lbind.<locals>.<lambda> at 0x1038b6430>, <function lbind.<locals>.<lambda> at 0x1038b6940>, <function toindices at 0x10375b040>)",
      "chain(<function size at 0x103756af0>, <function rbind.<locals>.<lambda> at 0x1038d0a60>, <function compose.<locals>.<lambda> at 0x1038b6dc0)"
    ]
  },
  "astuple": {
    "calls": 31,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6193": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "astuple(int, tuple)",
            "value_signature": "astuple(0, (1, -1))"
          }
        ],
        "code_context": "x22 = astuple(ZERO, DOWN_LEFT)"
      },
      "solvers.py:6207": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset({(0, (1, -1))}), (frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)),)"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset({(0, (1, -1))}), (frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))})"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset({(0, (1, -1))}), (frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)),)"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset({(0, (1, -1))}), (frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))})"
          }
        ],
        "code_context": "x36 = astuple(x23, x6)"
      },
      "solvers.py:6208": {
        "count": 14,
        "signatures": [
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),, (frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)),)"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset(len=9), (frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10)))"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset(len=12), ())"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),, (frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))})"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset(len=7), (frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)))"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),, (frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))})"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset(len=8), (frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)),)"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, (frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))})"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset(len=7), (frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))})"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset(len=10), ())"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, (frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)),)"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset(len=8), (frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))})"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset(len=11), (frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10))"
          },
          {
            "type_signature": "astuple(frozenset, tuple)",
            "value_signature": "astuple(frozenset(len=14), ())"
          }
        ],
        "code_context": "x37 = x35(x36)"
      },
      "solvers.py:6212": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(3, 9)"
          },
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(3, 8)"
          },
          {
            "type_signature": "astuple(int, int)",
            "value_signature": "astuple(3, 7)"
          }
        ],
        "code_context": "x41 = astuple(THREE, x40)"
      }
    },
    "type_signatures": [
      "astuple(frozenset, tuple)",
      "astuple(int, tuple)",
      "astuple(int, int)"
    ],
    "value_signatures": [
      "astuple(frozenset(len=11), (frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10))",
      "astuple(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),, (frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))})",
      "astuple(3, 7)",
      "astuple(frozenset(len=8), (frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)),)",
      "astuple(3, 9)",
      "astuple(frozenset(len=14), ())",
      "astuple(frozenset(len=7), (frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))})",
      "astuple(frozenset(len=8), (frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))})",
      "astuple(frozenset({(0, (1, -1))}), (frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))})",
      "astuple(frozenset(len=9), (frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10)))",
      "astuple(frozenset(len=12), ())",
      "astuple(0, (1, -1))",
      "astuple(frozenset({(0, (1, -1))}), (frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))})",
      "astuple(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, (frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))})",
      "astuple(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, (frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)),)",
      "astuple(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),, (frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))})",
      "astuple(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),, (frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)),)",
      "astuple(frozenset({(0, (1, -1))}), (frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)),)",
      "astuple(frozenset(len=10), ())",
      "astuple(frozenset(len=7), (frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)))",
      "astuple(frozenset({(0, (1, -1))}), (frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)),)",
      "astuple(3, 8)"
    ]
  },
  "initset": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6194": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "initset(tuple)",
            "value_signature": "initset((0, (1, -1)))"
          }
        ],
        "code_context": "x23 = initset(x22)"
      }
    },
    "type_signatures": [
      "initset(tuple)"
    ],
    "value_signatures": [
      "initset((0, (1, -1)))"
    ]
  },
  "size_f": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6205": {
        "count": 5,
        "signatures": [
          {
            "type_signature": "size_f(frozenset)",
            "value_signature": "size_f(frozenset({frozenset({(5, (2, 2)), (2, (1, 0)), (2)"
          },
          {
            "type_signature": "size_f(frozenset)",
            "value_signature": "size_f(frozenset({frozenset({(1, (0, 4)), (5, (0, 5)), (5)"
          },
          {
            "type_signature": "size_f(frozenset)",
            "value_signature": "size_f(frozenset({frozenset({(5, (0, 2)), (1, (0, 1)), (1)"
          },
          {
            "type_signature": "size_f(frozenset)",
            "value_signature": "size_f(frozenset({frozenset({(5, (1, 6)), (2, (1, 8)), (2)"
          },
          {
            "type_signature": "size_f(frozenset)",
            "value_signature": "size_f(frozenset({frozenset({(1, (0, 4)), (1, (1, 4)), (5)"
          }
        ],
        "code_context": "x34 = size_f(x1)"
      }
    },
    "type_signatures": [
      "size_f(frozenset)"
    ],
    "value_signatures": [
      "size_f(frozenset({frozenset({(5, (1, 6)), (2, (1, 8)), (2)",
      "size_f(frozenset({frozenset({(5, (0, 2)), (1, (0, 1)), (1)",
      "size_f(frozenset({frozenset({(1, (0, 4)), (5, (0, 5)), (5)",
      "size_f(frozenset({frozenset({(5, (2, 2)), (2, (1, 0)), (2)",
      "size_f(frozenset({frozenset({(1, (0, 4)), (1, (1, 4)), (5)"
    ]
  },
  "power": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6206": {
        "count": 16,
        "signatures": [
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038924c0>, 3)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038924c0>, 2)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038924c0>, 1)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038b61f0>, 3)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038b61f0>, 2)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038b61f0>, 1)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038b6d30>, 3)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038b6d30>, 2)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038b6d30>, 1)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038d0820>, 3)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038d0820>, 2)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038d0820>, 1)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038eb430>, 4)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038eb430>, 3)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038eb430>, 2)"
          },
          {
            "type_signature": "power(function, int)",
            "value_signature": "power(<function fork.<locals>.<lambda> at 0x1038eb430>, 1)"
          }
        ],
        "code_context": "x35 = power(x33, x34)"
      }
    },
    "type_signatures": [
      "power(function, int)"
    ],
    "value_signatures": [
      "power(<function fork.<locals>.<lambda> at 0x1038b61f0>, 1)",
      "power(<function fork.<locals>.<lambda> at 0x1038eb430>, 3)",
      "power(<function fork.<locals>.<lambda> at 0x1038d0820>, 1)",
      "power(<function fork.<locals>.<lambda> at 0x1038b6d30>, 2)",
      "power(<function fork.<locals>.<lambda> at 0x1038924c0>, 2)",
      "power(<function fork.<locals>.<lambda> at 0x1038b6d30>, 3)",
      "power(<function fork.<locals>.<lambda> at 0x1038b6d30>, 1)",
      "power(<function fork.<locals>.<lambda> at 0x1038b61f0>, 2)",
      "power(<function fork.<locals>.<lambda> at 0x1038eb430>, 2)",
      "power(<function fork.<locals>.<lambda> at 0x1038924c0>, 3)",
      "power(<function fork.<locals>.<lambda> at 0x1038eb430>, 1)",
      "power(<function fork.<locals>.<lambda> at 0x1038eb430>, 4)",
      "power(<function fork.<locals>.<lambda> at 0x1038b61f0>, 3)",
      "power(<function fork.<locals>.<lambda> at 0x1038d0820>, 2)",
      "power(<function fork.<locals>.<lambda> at 0x1038d0820>, 3)",
      "power(<function fork.<locals>.<lambda> at 0x1038924c0>, 1)"
    ]
  },
  "last": {
    "calls": 402,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6208": {
        "count": 94,
        "signatures": [
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((frozenset({(0, (1, -1))}), (frozenset({(2, (1, 0))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, (1, -1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, -1))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (1, 0)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 0))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (2, 2)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 2))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (1, 2)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 2))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (1, 1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 1))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (0, 6)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 6))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (1, 6)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 6))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (1, 5)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 5))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (1, 4)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 4))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((frozenset({(2, (2, 2)), (8, (1, 5)), (0, (1, -1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (2, 4)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 4))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (2, 5)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 5))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (2, 3)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 3))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((6, (2, 9)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 9))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((6, (2, 8)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 8))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((6, (2, 10)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 10))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (2, 1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 1))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (0, 4)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 4))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (0, 3)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 3))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (0, 5)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 5))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((frozenset({(0, (1, -1)), (1, (2, 4)), (1, (2, 2)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (2, 4)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (2, 2)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (2, 3)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (1, 10)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 10))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (2, 7)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, 7))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (2, 8)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (1, 9)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 9))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (1, 8)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 8))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((frozenset({(0, (1, -1))}), (frozenset({(1, (0, 1))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (0, 1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 1))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (1, 1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (1, 0)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (0, 2)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 2))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (2, 5)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (1, 5)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (1, 4)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (0, 4)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (0, 3)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (0, 8)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 8))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (1, 8)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (1, 7)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 7))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (0, 9)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 9))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (0, 1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (1, 4)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, (1, 3)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((1, 3))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((frozenset({(0, (1, -1)), (1, (0, 3)), (1, (0, 2)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((2, (1, 6)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (1, 6)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (1, 7)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (0, 7)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 7))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((frozenset({(3, (1, 5)), (0, (1, -1)), (2, (0, 1)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (1, 5)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (2, 5)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((3, (2, 4)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (0, 9)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (0, 10)))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((0, 10))"
          },
          {
            "type_signature": "last(tuple)",
            "value_signature": "last((8, (1, 10)))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "last(tuple)"
    ],
    "value_signatures": [
      "last((1, 1))",
      "last((3, (2, 5)))",
      "last((8, (0, 6)))",
      "last((6, (2, 10)))",
      "last((0, 5))",
      "last((3, (1, 6)))",
      "last((3, (1, 5)))",
      "last((2, (1, 7)))",
      "last((2, (1, 0)))",
      "last((1, 5))",
      "last((2, 8))",
      "last((6, (2, 9)))",
      "last((1, (0, 1)))",
      "last((2, (1, 8)))",
      "last((frozenset({(0, (1, -1))}), (frozenset({(2, (1, 0))",
      "last((0, 8))",
      "last((0, 2))",
      "last((1, (0, 4)))",
      "last((2, (2, 5)))",
      "last((0, 1))",
      "last((3, (1, 10)))",
      "last((frozenset({(0, (1, -1)), (1, (2, 4)), (1, (2, 2)))",
      "last((2, (1, 6)))",
      "last((1, 7))",
      "last((frozenset({(2, (2, 2)), (8, (1, 5)), (0, (1, -1)))",
      "last((2, (1, 5)))",
      "last((1, (0, 5)))",
      "last((2, 1))",
      "last((2, 7))",
      "last((frozenset({(3, (1, 5)), (0, (1, -1)), (2, (0, 1)))",
      "last((3, (0, 7)))",
      "last((1, 2))",
      "last((8, (2, 5)))",
      "last((2, (0, 8)))",
      "last((0, 9))",
      "last((1, (0, 3)))",
      "last((1, (2, 2)))",
      "last((2, (1, 1)))",
      "last((3, (1, 9)))",
      "last((3, (2, 8)))",
      "last((6, (2, 8)))",
      "last((2, (0, 4)))",
      "last((1, (2, 3)))",
      "last((2, 9))",
      "last((1, (1, 1)))",
      "last((2, (0, 9)))",
      "last((1, 6))",
      "last((2, (1, 4)))",
      "last((frozenset({(0, (1, -1)), (1, (0, 3)), (1, (0, 2)))",
      "last((0, 4))",
      "last((1, 4))",
      "last((8, (2, 4)))",
      "last((0, 6))",
      "last((1, 0))",
      "last((2, 5))",
      "last((1, 3))",
      "last((2, (1, 2)))",
      "last((8, (0, 10)))",
      "last((frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)))",
      "last((2, 10))",
      "last((2, 4))",
      "last((8, (1, 10)))",
      "last((frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)))",
      "last((2, (2, 1)))",
      "last((1, -1))",
      "last((0, (1, -1)))",
      "last((3, (1, 7)))",
      "last((3, (2, 4)))",
      "last((frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)))",
      "last((0, 10))",
      "last((2, 2))",
      "last((1, (0, 2)))",
      "last((1, (1, 3)))",
      "last((2, (0, 1)))",
      "last((1, (1, 0)))",
      "last((1, 10))",
      "last((8, (1, 5)))",
      "last((1, 8))",
      "last((0, 3))",
      "last((1, (2, 4)))",
      "last((3, (1, 8)))",
      "last((8, (1, 6)))",
      "last((frozenset({(0, (1, -1))}), (frozenset({(1, (0, 1))",
      "last((0, 7))",
      "last((1, (1, 4)))",
      "last((3, (2, 7)))",
      "last((1, 9))",
      "last((frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)))",
      "last((8, (2, 3)))",
      "last((8, (1, 4)))",
      "last((8, (0, 9)))",
      "last((2, (2, 2)))",
      "last((2, 3))",
      "last((2, (0, 3)))"
    ]
  },
  "rightmost": {
    "calls": 21,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6208": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(0, (1, -1))}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),)"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=9))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),)"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=7))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),)"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=8))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),)"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=11))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      },
      "solvers.py:6210": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=12))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=10))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=14))"
          }
        ],
        "code_context": "x39 = width_f(x38)"
      }
    },
    "type_signatures": [
      "rightmost(frozenset)"
    ],
    "value_signatures": [
      "rightmost(frozenset(len=9))",
      "rightmost(frozenset(len=14))",
      "rightmost(frozenset(len=12))",
      "rightmost(frozenset(len=7))",
      "rightmost(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),)",
      "rightmost(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),)",
      "rightmost(frozenset(len=8))",
      "rightmost(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),)",
      "rightmost(frozenset(len=11))",
      "rightmost(frozenset(len=10))",
      "rightmost(frozenset({(0, (1, -1))}))",
      "rightmost(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),)"
    ]
  },
  "matcher": {
    "calls": 32,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6208": {
        "count": 29,
        "signatures": [
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, -1)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, 0)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, 2)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, 4)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, 5)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, 8)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103887310, -1)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103887310, 0)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103887310, 1)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103887310, 3)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103887310, 4)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103887310, 7)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103892dc0, -1)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103892dc0, 0)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103892dc0, 2)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103892dc0, 4)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103892dc0, 7)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103887670, -1)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103887670, 0)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103887670, 1)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103887670, 3)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x103887670, 6)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, -1)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 0)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 1)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 3)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 6)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 5)"
          },
          {
            "type_signature": "matcher(function, int)",
            "value_signature": "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 9)"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "matcher(function, int)"
    ],
    "value_signatures": [
      "matcher(<function compose.<locals>.<lambda> at 0x103892dc0, -1)",
      "matcher(<function compose.<locals>.<lambda> at 0x103887670, 6)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, 2)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, 0)",
      "matcher(<function compose.<locals>.<lambda> at 0x103887310, 1)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, -1)",
      "matcher(<function compose.<locals>.<lambda> at 0x103887310, 3)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 1)",
      "matcher(<function compose.<locals>.<lambda> at 0x103887310, -1)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, -1)",
      "matcher(<function compose.<locals>.<lambda> at 0x103887670, 0)",
      "matcher(<function compose.<locals>.<lambda> at 0x103887670, -1)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 9)",
      "matcher(<function compose.<locals>.<lambda> at 0x103892dc0, 0)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 5)",
      "matcher(<function compose.<locals>.<lambda> at 0x103892dc0, 7)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 0)",
      "matcher(<function compose.<locals>.<lambda> at 0x103887670, 1)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, 8)",
      "matcher(<function compose.<locals>.<lambda> at 0x103887310, 4)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 6)",
      "matcher(<function compose.<locals>.<lambda> at 0x103887310, 7)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, 4)",
      "matcher(<function compose.<locals>.<lambda> at 0x103887670, 3)",
      "matcher(<function compose.<locals>.<lambda> at 0x103887310, 0)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038871f0, 5)",
      "matcher(<function compose.<locals>.<lambda> at 0x103892dc0, 4)",
      "matcher(<function compose.<locals>.<lambda> at 0x103892dc0, 2)",
      "matcher(<function compose.<locals>.<lambda> at 0x1038b6040, 3)"
    ]
  },
  "sfilter": {
    "calls": 32,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6208": {
        "count": 32,
        "signatures": [
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(0, (1, -1))}), <function matcher.<locals>.<lambda> at 0x103892700)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), , <function matcher.<locals>.<lambda> at 0x103892820)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),, <function matcher.<locals>.<lambda> at 0x103892820)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), , <function matcher.<locals>.<lambda> at 0x103892af0)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(len=9), <function matcher.<locals>.<lambda> at 0x103892b80)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))}, <function matcher.<locals>.<lambda> at 0x103892af0)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(0, (1, -1))}), <function matcher.<locals>.<lambda> at 0x1038b6430)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}), <function matcher.<locals>.<lambda> at 0x1038b6550)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),, <function matcher.<locals>.<lambda> at 0x1038b6430)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}), <function matcher.<locals>.<lambda> at 0x1038b68b0)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(len=7), <function matcher.<locals>.<lambda> at 0x1038b6940)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),, <function matcher.<locals>.<lambda> at 0x1038b6430)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(0, (1, -1))}), <function matcher.<locals>.<lambda> at 0x1038b6f70)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), , <function matcher.<locals>.<lambda> at 0x1038b6f70)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),, <function matcher.<locals>.<lambda> at 0x1038d01f0)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}), <function matcher.<locals>.<lambda> at 0x1038d0310)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(len=8), <function matcher.<locals>.<lambda> at 0x1038d0430)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), , <function matcher.<locals>.<lambda> at 0x1038d01f0)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(0, (1, -1))}), <function matcher.<locals>.<lambda> at 0x1038d0a60)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}), <function matcher.<locals>.<lambda> at 0x1038d0b80)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, <function matcher.<locals>.<lambda> at 0x1038d0a60)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}), <function matcher.<locals>.<lambda> at 0x1038d0ee0)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(len=7), <function matcher.<locals>.<lambda> at 0x1038d0f70)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}), <function matcher.<locals>.<lambda> at 0x1038d0a60)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(0, (1, -1))}), <function matcher.<locals>.<lambda> at 0x1038eb670)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}), <function matcher.<locals>.<lambda> at 0x1038eb790)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, <function matcher.<locals>.<lambda> at 0x1038eb790)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), , <function matcher.<locals>.<lambda> at 0x1038eb670)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(len=8), <function matcher.<locals>.<lambda> at 0x1038eb9d0)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}), <function matcher.<locals>.<lambda> at 0x1038eb670)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset(len=11), <function matcher.<locals>.<lambda> at 0x1038eba60)"
          },
          {
            "type_signature": "sfilter(frozenset, function)",
            "value_signature": "sfilter(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)), <function matcher.<locals>.<lambda> at 0x1038eb9d0)"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "sfilter(frozenset, function)"
    ],
    "value_signatures": [
      "sfilter(frozenset({(0, (1, -1))}), <function matcher.<locals>.<lambda> at 0x103892700)",
      "sfilter(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))}, <function matcher.<locals>.<lambda> at 0x103892af0)",
      "sfilter(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}), <function matcher.<locals>.<lambda> at 0x1038d0b80)",
      "sfilter(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}), <function matcher.<locals>.<lambda> at 0x1038d0a60)",
      "sfilter(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), , <function matcher.<locals>.<lambda> at 0x1038eb670)",
      "sfilter(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}), <function matcher.<locals>.<lambda> at 0x1038b6550)",
      "sfilter(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}), <function matcher.<locals>.<lambda> at 0x1038d0310)",
      "sfilter(frozenset(len=11), <function matcher.<locals>.<lambda> at 0x1038eba60)",
      "sfilter(frozenset(len=7), <function matcher.<locals>.<lambda> at 0x1038d0f70)",
      "sfilter(frozenset({(0, (1, -1))}), <function matcher.<locals>.<lambda> at 0x1038d0a60)",
      "sfilter(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), , <function matcher.<locals>.<lambda> at 0x1038b6f70)",
      "sfilter(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), , <function matcher.<locals>.<lambda> at 0x103892af0)",
      "sfilter(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, <function matcher.<locals>.<lambda> at 0x1038d0a60)",
      "sfilter(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),, <function matcher.<locals>.<lambda> at 0x103892820)",
      "sfilter(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),, <function matcher.<locals>.<lambda> at 0x1038b6430)",
      "sfilter(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)), <function matcher.<locals>.<lambda> at 0x1038eb9d0)",
      "sfilter(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}), <function matcher.<locals>.<lambda> at 0x1038b68b0)",
      "sfilter(frozenset({(0, (1, -1))}), <function matcher.<locals>.<lambda> at 0x1038b6430)",
      "sfilter(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),, <function matcher.<locals>.<lambda> at 0x1038d01f0)",
      "sfilter(frozenset(len=8), <function matcher.<locals>.<lambda> at 0x1038d0430)",
      "sfilter(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, <function matcher.<locals>.<lambda> at 0x1038eb790)",
      "sfilter(frozenset({(0, (1, -1))}), <function matcher.<locals>.<lambda> at 0x1038eb670)",
      "sfilter(frozenset({(0, (1, -1))}), <function matcher.<locals>.<lambda> at 0x1038b6f70)",
      "sfilter(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}), <function matcher.<locals>.<lambda> at 0x1038eb670)",
      "sfilter(frozenset(len=7), <function matcher.<locals>.<lambda> at 0x1038b6940)",
      "sfilter(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), , <function matcher.<locals>.<lambda> at 0x103892820)",
      "sfilter(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), , <function matcher.<locals>.<lambda> at 0x1038d01f0)",
      "sfilter(frozenset(len=8), <function matcher.<locals>.<lambda> at 0x1038eb9d0)",
      "sfilter(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),, <function matcher.<locals>.<lambda> at 0x1038b6430)",
      "sfilter(frozenset(len=9), <function matcher.<locals>.<lambda> at 0x103892b80)",
      "sfilter(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}), <function matcher.<locals>.<lambda> at 0x1038d0ee0)",
      "sfilter(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}), <function matcher.<locals>.<lambda> at 0x1038eb790)"
    ]
  },
  "argmin": {
    "calls": 32,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6208": {
        "count": 32,
        "signatures": [
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(0, (1, -1))}), <function chain.<locals>.<lambda> at 0x103892820>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (1, 0))}), <function chain.<locals>.<lambda> at 0x1038929d0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (2, 2)), (2, (1, 2))}), <function chain.<locals>.<lambda> at 0x103892af0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(8, (1, 4))}), <function chain.<locals>.<lambda> at 0x103892b80>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(8, (2, 5)), (8, (1, 5))}), <function chain.<locals>.<lambda> at 0x103892af0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(6, (2, 8))}), <function chain.<locals>.<lambda> at 0x103892ca0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(0, (1, -1))}), <function chain.<locals>.<lambda> at 0x1038b6550>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (1, 0))}), <function chain.<locals>.<lambda> at 0x1038b6670>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (2, 1)), (2, (1, 1))}), <function chain.<locals>.<lambda> at 0x1038b68b0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(1, (0, 3))}), <function chain.<locals>.<lambda> at 0x1038b6940>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(1, (2, 4))}), <function chain.<locals>.<lambda> at 0x1038b6430>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(3, (2, 7))}), <function chain.<locals>.<lambda> at 0x1038b6940>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(0, (1, -1))}), <function chain.<locals>.<lambda> at 0x1038d00d0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(1, (1, 0))}), <function chain.<locals>.<lambda> at 0x1038d01f0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(1, (0, 2))}), <function chain.<locals>.<lambda> at 0x1038d0310>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (1, 4))}), <function chain.<locals>.<lambda> at 0x1038d0430>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (0, 4)), (2, (1, 4))}), <function chain.<locals>.<lambda> at 0x1038d01f0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (1, 7))}), <function chain.<locals>.<lambda> at 0x1038d0550>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(0, (1, -1))}), <function chain.<locals>.<lambda> at 0x1038d0b80>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (1, 0))}), <function chain.<locals>.<lambda> at 0x1038d0ca0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (0, 1)), (2, (1, 1))}), <function chain.<locals>.<lambda> at 0x1038d0ee0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(1, (1, 3))}), <function chain.<locals>.<lambda> at 0x1038d0f70>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(1, (1, 3)), (1, (0, 3))}), <function chain.<locals>.<lambda> at 0x1038d0a60>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (1, 6))}), <function chain.<locals>.<lambda> at 0x1038eb0d0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(0, (1, -1))}), <function chain.<locals>.<lambda> at 0x1038eb790>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (1, 0))}), <function chain.<locals>.<lambda> at 0x1038eb790>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(2, (0, 1)), (2, (1, 1))}), <function chain.<locals>.<lambda> at 0x1038eb670>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(1, (0, 3))}), <function chain.<locals>.<lambda> at 0x1038eb9d0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(1, (1, 3)), (1, (2, 3)), (1, (0, 3))}), <function chain.<locals>.<lambda> at 0x1038eb670>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(3, (1, 6))}), <function chain.<locals>.<lambda> at 0x1038eba60>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(3, (2, 5)), (3, (1, 5))}), <function chain.<locals>.<lambda> at 0x1038eb9d0>)"
          },
          {
            "type_signature": "argmin(frozenset, function)",
            "value_signature": "argmin(frozenset({(8, (0, 9))}), <function chain.<locals>.<lambda> at 0x1038ebb80>)"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "argmin(frozenset, function)"
    ],
    "value_signatures": [
      "argmin(frozenset({(0, (1, -1))}), <function chain.<locals>.<lambda> at 0x1038d00d0>)",
      "argmin(frozenset({(2, (1, 7))}), <function chain.<locals>.<lambda> at 0x1038d0550>)",
      "argmin(frozenset({(0, (1, -1))}), <function chain.<locals>.<lambda> at 0x1038eb790>)",
      "argmin(frozenset({(2, (2, 2)), (2, (1, 2))}), <function chain.<locals>.<lambda> at 0x103892af0>)",
      "argmin(frozenset({(2, (1, 0))}), <function chain.<locals>.<lambda> at 0x1038eb790>)",
      "argmin(frozenset({(2, (1, 6))}), <function chain.<locals>.<lambda> at 0x1038eb0d0>)",
      "argmin(frozenset({(2, (1, 0))}), <function chain.<locals>.<lambda> at 0x1038929d0>)",
      "argmin(frozenset({(8, (0, 9))}), <function chain.<locals>.<lambda> at 0x1038ebb80>)",
      "argmin(frozenset({(8, (2, 5)), (8, (1, 5))}), <function chain.<locals>.<lambda> at 0x103892af0>)",
      "argmin(frozenset({(3, (2, 5)), (3, (1, 5))}), <function chain.<locals>.<lambda> at 0x1038eb9d0>)",
      "argmin(frozenset({(2, (0, 1)), (2, (1, 1))}), <function chain.<locals>.<lambda> at 0x1038d0ee0>)",
      "argmin(frozenset({(0, (1, -1))}), <function chain.<locals>.<lambda> at 0x1038d0b80>)",
      "argmin(frozenset({(2, (0, 1)), (2, (1, 1))}), <function chain.<locals>.<lambda> at 0x1038eb670>)",
      "argmin(frozenset({(2, (0, 4)), (2, (1, 4))}), <function chain.<locals>.<lambda> at 0x1038d01f0>)",
      "argmin(frozenset({(8, (1, 4))}), <function chain.<locals>.<lambda> at 0x103892b80>)",
      "argmin(frozenset({(1, (1, 3)), (1, (2, 3)), (1, (0, 3))}), <function chain.<locals>.<lambda> at 0x1038eb670>)",
      "argmin(frozenset({(1, (1, 3))}), <function chain.<locals>.<lambda> at 0x1038d0f70>)",
      "argmin(frozenset({(2, (1, 0))}), <function chain.<locals>.<lambda> at 0x1038b6670>)",
      "argmin(frozenset({(1, (0, 3))}), <function chain.<locals>.<lambda> at 0x1038eb9d0>)",
      "argmin(frozenset({(1, (0, 2))}), <function chain.<locals>.<lambda> at 0x1038d0310>)",
      "argmin(frozenset({(1, (1, 0))}), <function chain.<locals>.<lambda> at 0x1038d01f0>)",
      "argmin(frozenset({(3, (1, 6))}), <function chain.<locals>.<lambda> at 0x1038eba60>)",
      "argmin(frozenset({(2, (1, 4))}), <function chain.<locals>.<lambda> at 0x1038d0430>)",
      "argmin(frozenset({(0, (1, -1))}), <function chain.<locals>.<lambda> at 0x1038b6550>)",
      "argmin(frozenset({(0, (1, -1))}), <function chain.<locals>.<lambda> at 0x103892820>)",
      "argmin(frozenset({(1, (1, 3)), (1, (0, 3))}), <function chain.<locals>.<lambda> at 0x1038d0a60>)",
      "argmin(frozenset({(1, (0, 3))}), <function chain.<locals>.<lambda> at 0x1038b6940>)",
      "argmin(frozenset({(3, (2, 7))}), <function chain.<locals>.<lambda> at 0x1038b6940>)",
      "argmin(frozenset({(2, (1, 0))}), <function chain.<locals>.<lambda> at 0x1038d0ca0>)",
      "argmin(frozenset({(6, (2, 8))}), <function chain.<locals>.<lambda> at 0x103892ca0>)",
      "argmin(frozenset({(2, (2, 1)), (2, (1, 1))}), <function chain.<locals>.<lambda> at 0x1038b68b0>)",
      "argmin(frozenset({(1, (2, 4))}), <function chain.<locals>.<lambda> at 0x1038b6430>)"
    ]
  },
  "intersection": {
    "calls": 42,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6208": {
        "count": 35,
        "signatures": [
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 0), (2, -1), (0, -1), (1, -2)}), frozenset({(1, -1)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 1), (2, 0), (1, -1), (0, 0)}), frozenset({(1, 0), (1, 1), (1, 2), (2, 2)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(2, 3), (3, 2), (1, 2), (2, 1)}), frozenset({(1, 2), (1, 1), (1, -1), (2, 2), (1, 0))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 1), (0, 2), (1, 3), (2, 2)}), frozenset({(1, 2), (1, 1), (1, -1), (2, 2), (1, 0))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 3), (2, 4), (0, 4), (1, 5)}), frozenset({(1, 6), (1, 5), (1, 4), (0, 6)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(2, 4), (2, 6), (3, 5), (1, 5)}), frozenset(len=9))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 6), (1, 4), (2, 5), (0, 5)}), frozenset(len=9))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(2, 9), (3, 8), (1, 8), (2, 7)}), frozenset({(2, 9), (2, 10), (2, 8)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 1), (2, 0), (1, -1), (0, 0)}), frozenset({(1, 0), (1, 1), (2, 1)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(3, 1), (1, 1), (2, 0), (2, 2)}), frozenset({(1, 0), (1, 1), (2, 1), (1, -1)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(0, 1), (1, 0), (1, 2), (2, 1)}), frozenset({(1, 0), (1, 1), (2, 1), (1, -1)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 3), (0, 2), (-1, 3), (0, 4)}), frozenset({(0, 3), (0, 4), (0, 5)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(2, 3), (2, 5), (3, 4), (1, 4)}), frozenset(len=7))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(3, 7), (1, 7), (2, 6), (2, 8)}), frozenset({(2, 7), (1, 8), (1, 10), (1, 9), (2, 8))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 1), (2, 0), (1, -1), (0, 0)}), frozenset({(0, 1), (1, 0), (1, 1), (0, 2)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(0, 1), (1, 2), (-1, 2), (0, 3)}), frozenset({(0, 1), (1, 1), (1, -1), (0, 2), (1, 0))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 3), (2, 4), (0, 4), (1, 5)}), frozenset({(2, 5), (1, 4), (1, 5)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 4), (0, 3), (-1, 4), (0, 5)}), frozenset(len=8))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 3), (2, 4), (0, 4), (1, 5)}), frozenset(len=8))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(0, 7), (1, 6), (1, 8), (2, 7)}), frozenset({(0, 8), (1, 8), (0, 9), (1, 7)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 1), (2, 0), (1, -1), (0, 0)}), frozenset({(1, 0), (1, 1), (0, 1)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(-1, 1), (1, 1), (0, 2), (0, 0)}), frozenset({(0, 1), (1, 0), (1, 1), (1, -1)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(0, 1), (1, 0), (1, 2), (2, 1)}), frozenset({(0, 1), (1, 0), (1, 1), (1, -1)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(2, 3), (1, 2), (0, 3), (1, 4)}), frozenset({(2, 4), (1, 3), (1, 4)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(2, 3), (1, 2), (0, 3), (1, 4)}), frozenset(len=7))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 3), (0, 2), (-1, 3), (0, 4)}), frozenset(len=7))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 5), (2, 6), (1, 7), (0, 6)}), frozenset({(1, 6), (1, 7), (1, 8)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 3), (0, 2), (-1, 3), (0, 4)}), frozenset({(2, 4), (0, 3), (0, 4), (1, 4)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(2, 3), (1, 2), (0, 3), (1, 4)}), frozenset(len=8))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(2, 4), (3, 3), (1, 3), (2, 2)}), frozenset(len=8))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 3), (0, 2), (-1, 3), (0, 4)}), frozenset(len=8))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 5), (2, 6), (1, 7), (0, 6)}), frozenset({(0, 7), (1, 6), (1, 7)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(2, 4), (2, 6), (3, 5), (1, 5)}), frozenset(len=11))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(1, 6), (1, 4), (2, 5), (0, 5)}), frozenset(len=11))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(0, 10), (1, 9), (-1, 9), (0, 8)}), frozenset({(0, 9), (0, 10), (1, 10)}))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "intersection(frozenset, frozenset)"
    ],
    "value_signatures": [
      "intersection(frozenset({(2, 3), (3, 2), (1, 2), (2, 1)}), frozenset({(1, 2), (1, 1), (1, -1), (2, 2), (1, 0))",
      "intersection(frozenset({(1, 1), (0, 2), (1, 3), (2, 2)}), frozenset({(1, 2), (1, 1), (1, -1), (2, 2), (1, 0))",
      "intersection(frozenset({(1, 3), (0, 2), (-1, 3), (0, 4)}), frozenset({(0, 3), (0, 4), (0, 5)}))",
      "intersection(frozenset({(1, 6), (1, 4), (2, 5), (0, 5)}), frozenset(len=11))",
      "intersection(frozenset({(-1, 1), (1, 1), (0, 2), (0, 0)}), frozenset({(0, 1), (1, 0), (1, 1), (1, -1)}))",
      "intersection(frozenset({(3, 7), (1, 7), (2, 6), (2, 8)}), frozenset({(2, 7), (1, 8), (1, 10), (1, 9), (2, 8))",
      "intersection(frozenset({(1, 1), (2, 0), (1, -1), (0, 0)}), frozenset({(0, 1), (1, 0), (1, 1), (0, 2)}))",
      "intersection(frozenset({(2, 4), (3, 3), (1, 3), (2, 2)}), frozenset(len=8))",
      "intersection(frozenset({(1, 3), (2, 4), (0, 4), (1, 5)}), frozenset({(1, 6), (1, 5), (1, 4), (0, 6)}))",
      "intersection(frozenset({(0, 10), (1, 9), (-1, 9), (0, 8)}), frozenset({(0, 9), (0, 10), (1, 10)}))",
      "intersection(frozenset({(0, 1), (1, 0), (1, 2), (2, 1)}), frozenset({(1, 0), (1, 1), (2, 1), (1, -1)}))",
      "intersection(frozenset({(2, 3), (1, 2), (0, 3), (1, 4)}), frozenset({(2, 4), (1, 3), (1, 4)}))",
      "intersection(frozenset({(1, 3), (0, 2), (-1, 3), (0, 4)}), frozenset({(2, 4), (0, 3), (0, 4), (1, 4)}))",
      "intersection(frozenset({(1, 0), (2, -1), (0, -1), (1, -2)}), frozenset({(1, -1)}))",
      "intersection(frozenset({(2, 4), (2, 6), (3, 5), (1, 5)}), frozenset(len=9))",
      "intersection(frozenset({(0, 1), (1, 2), (-1, 2), (0, 3)}), frozenset({(0, 1), (1, 1), (1, -1), (0, 2), (1, 0))",
      "intersection(frozenset({(2, 3), (2, 5), (3, 4), (1, 4)}), frozenset(len=7))",
      "intersection(frozenset({(1, 4), (0, 3), (-1, 4), (0, 5)}), frozenset(len=8))",
      "intersection(frozenset({(1, 3), (2, 4), (0, 4), (1, 5)}), frozenset(len=8))",
      "intersection(frozenset({(1, 1), (2, 0), (1, -1), (0, 0)}), frozenset({(1, 0), (1, 1), (0, 1)}))",
      "intersection(frozenset({(1, 5), (2, 6), (1, 7), (0, 6)}), frozenset({(1, 6), (1, 7), (1, 8)}))",
      "intersection(frozenset({(0, 1), (1, 0), (1, 2), (2, 1)}), frozenset({(0, 1), (1, 0), (1, 1), (1, -1)}))",
      "intersection(frozenset({(1, 3), (0, 2), (-1, 3), (0, 4)}), frozenset(len=7))",
      "intersection(frozenset({(1, 3), (2, 4), (0, 4), (1, 5)}), frozenset({(2, 5), (1, 4), (1, 5)}))",
      "intersection(frozenset({(2, 3), (1, 2), (0, 3), (1, 4)}), frozenset(len=8))",
      "intersection(frozenset({(1, 3), (0, 2), (-1, 3), (0, 4)}), frozenset(len=8))",
      "intersection(frozenset({(2, 3), (1, 2), (0, 3), (1, 4)}), frozenset(len=7))",
      "intersection(frozenset({(1, 5), (2, 6), (1, 7), (0, 6)}), frozenset({(0, 7), (1, 6), (1, 7)}))",
      "intersection(frozenset({(1, 6), (1, 4), (2, 5), (0, 5)}), frozenset(len=9))",
      "intersection(frozenset({(3, 1), (1, 1), (2, 0), (2, 2)}), frozenset({(1, 0), (1, 1), (2, 1), (1, -1)}))",
      "intersection(frozenset({(1, 1), (2, 0), (1, -1), (0, 0)}), frozenset({(1, 0), (1, 1), (1, 2), (2, 2)}))",
      "intersection(frozenset({(0, 7), (1, 6), (1, 8), (2, 7)}), frozenset({(0, 8), (1, 8), (0, 9), (1, 7)}))",
      "intersection(frozenset({(2, 4), (2, 6), (3, 5), (1, 5)}), frozenset(len=11))",
      "intersection(frozenset({(1, 1), (2, 0), (1, -1), (0, 0)}), frozenset({(1, 0), (1, 1), (2, 1)}))",
      "intersection(frozenset({(2, 9), (3, 8), (1, 8), (2, 7)}), frozenset({(2, 9), (2, 10), (2, 8)}))"
    ]
  },
  "size": {
    "calls": 42,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6208": {
        "count": 23,
        "signatures": [
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset())"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 1)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 2)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 1), (2, 2)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 5)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(2, 4), (1, 5)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(2, 5)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(2, 9)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 0), (2, 1)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(0, 4)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(2, 3)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(2, 8)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(0, 1)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(0, 3), (1, 4)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 8)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(0, 1), (1, 0)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 4)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(0, 3)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(0, 2), (1, 3)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 7)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(2, 3), (0, 3)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(1, 3)}))"
          },
          {
            "type_signature": "size(frozenset)",
            "value_signature": "size(frozenset({(0, 10)}))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "size(frozenset)"
    ],
    "value_signatures": [
      "size(frozenset({(1, 3)}))",
      "size(frozenset({(2, 9)}))",
      "size(frozenset())",
      "size(frozenset({(1, 1), (2, 2)}))",
      "size(frozenset({(0, 4)}))",
      "size(frozenset({(2, 4), (1, 5)}))",
      "size(frozenset({(1, 7)}))",
      "size(frozenset({(0, 10)}))",
      "size(frozenset({(1, 1)}))",
      "size(frozenset({(1, 5)}))",
      "size(frozenset({(1, 8)}))",
      "size(frozenset({(0, 2), (1, 3)}))",
      "size(frozenset({(0, 1)}))",
      "size(frozenset({(2, 3), (0, 3)}))",
      "size(frozenset({(2, 3)}))",
      "size(frozenset({(2, 5)}))",
      "size(frozenset({(0, 3)}))",
      "size(frozenset({(1, 0), (2, 1)}))",
      "size(frozenset({(1, 4)}))",
      "size(frozenset({(0, 3), (1, 4)}))",
      "size(frozenset({(2, 8)}))",
      "size(frozenset({(1, 2)}))",
      "size(frozenset({(0, 1), (1, 0)}))"
    ]
  },
  "subtract": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6208": {
        "count": 12,
        "signatures": [
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((1, -1), (1, 0))"
          },
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((2, 2), (1, 4))"
          },
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((1, 5), (2, 8))"
          },
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((2, 1), (0, 3))"
          },
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((2, 4), (2, 7))"
          },
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((0, 2), (1, 4))"
          },
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((1, 4), (1, 7))"
          },
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((0, 1), (1, 3))"
          },
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((1, 3), (1, 6))"
          },
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((0, 1), (0, 3))"
          },
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((2, 3), (1, 6))"
          },
          {
            "type_signature": "subtract(tuple, tuple)",
            "value_signature": "subtract((1, 5), (0, 9))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "subtract(tuple, tuple)"
    ],
    "value_signatures": [
      "subtract((2, 3), (1, 6))",
      "subtract((2, 2), (1, 4))",
      "subtract((0, 1), (1, 3))",
      "subtract((2, 1), (0, 3))",
      "subtract((1, -1), (1, 0))",
      "subtract((1, 3), (1, 6))",
      "subtract((2, 4), (2, 7))",
      "subtract((0, 1), (0, 3))",
      "subtract((1, 5), (0, 9))",
      "subtract((0, 2), (1, 4))",
      "subtract((1, 5), (2, 8))",
      "subtract((1, 4), (1, 7))"
    ]
  },
  "add": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6208": {
        "count": 9,
        "signatures": [
          {
            "type_signature": "add(tuple, tuple)",
            "value_signature": "add((0, 1), (0, -1))"
          },
          {
            "type_signature": "add(tuple, tuple)",
            "value_signature": "add((0, 1), (1, -2))"
          },
          {
            "type_signature": "add(tuple, tuple)",
            "value_signature": "add((0, 1), (-1, -3))"
          },
          {
            "type_signature": "add(tuple, tuple)",
            "value_signature": "add((0, 1), (2, -2))"
          },
          {
            "type_signature": "add(tuple, tuple)",
            "value_signature": "add((0, 1), (0, -3))"
          },
          {
            "type_signature": "add(tuple, tuple)",
            "value_signature": "add((0, 1), (-1, -2))"
          },
          {
            "type_signature": "add(tuple, tuple)",
            "value_signature": "add((0, 1), (0, -2))"
          },
          {
            "type_signature": "add(tuple, tuple)",
            "value_signature": "add((0, 1), (1, -3))"
          },
          {
            "type_signature": "add(tuple, tuple)",
            "value_signature": "add((0, 1), (1, -4))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "add(tuple, tuple)"
    ],
    "value_signatures": [
      "add((0, 1), (0, -3))",
      "add((0, 1), (1, -4))",
      "add((0, 1), (0, -1))",
      "add((0, 1), (1, -2))",
      "add((0, 1), (-1, -2))",
      "add((0, 1), (0, -2))",
      "add((0, 1), (2, -2))",
      "add((0, 1), (1, -3))",
      "add((0, 1), (-1, -3))"
    ]
  },
  "shift": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6208": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), , (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), , (1, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))}, (-1, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}), (2, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),, (0, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), , (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}), (-1, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), , (0, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}), (0, 0))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}), (-1, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}), (0, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), , (0, -1))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}), (1, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)), (1, -3))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "shift(frozenset, tuple)"
    ],
    "value_signatures": [
      "shift(frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), , (0, 0))",
      "shift(frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}), (0, 0))",
      "shift(frozenset({(8, (0, 9)), (8, (0, 10)), (8, (1, 10)), (1, -3))",
      "shift(frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}), (0, 0))",
      "shift(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (0, 3)), , (0, -1))",
      "shift(frozenset({(2, (0, 8)), (2, (1, 8)), (2, (1, 7)), , (0, -2))",
      "shift(frozenset({(3, (1, 6)), (3, (1, 7)), (3, (0, 7))}), (1, -2))",
      "shift(frozenset({(1, (2, 4)), (1, (1, 4)), (1, (1, 3))}), (-1, -1))",
      "shift(frozenset({(2, (1, 6)), (2, (1, 8)), (2, (1, 7))}), (0, -2))",
      "shift(frozenset({(2, (2, 5)), (2, (1, 5)), (2, (1, 4))}), (-1, -1))",
      "shift(frozenset({(8, (0, 6)), (8, (1, 6)), (8, (1, 5)), , (1, -1))",
      "shift(frozenset({(6, (2, 9)), (6, (2, 8)), (6, (2, 10))}, (-1, -2))",
      "shift(frozenset({(3, (1, 10)), (3, (2, 7)), (3, (2, 8)),, (0, -2))",
      "shift(frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), , (0, 0))",
      "shift(frozenset({(1, (0, 4)), (1, (0, 3)), (1, (0, 5))}), (2, -1))"
    ]
  },
  "combine": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6208": {
        "count": 15,
        "signatures": [
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset({(0, (1, -1))}), frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), )"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),, frozenset({(8, (2, 5)), (8, (1, 5)), (8, (2, 4)), )"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset(len=9), frozenset({(6, (1, 6)), (6, (1, 8)), (6, (1, 7))}))"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset({(0, (1, -1))}), frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),, frozenset({(1, (2, 4)), (1, (2, 3)), (1, (2, 2))}))"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset(len=7), frozenset({(3, (1, 7)), (3, (2, 6)), (3, (1, 6)), )"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset({(0, (1, -1))}), frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), )"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),, frozenset({(2, (0, 4)), (2, (1, 4)), (2, (0, 3))}))"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset(len=8), frozenset({(2, (1, 6)), (2, (1, 5)), (2, (0, 7)), )"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset({(0, (1, -1))}), frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}))"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, frozenset({(1, (1, 3)), (1, (0, 2)), (1, (0, 3))}))"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset(len=7), frozenset({(2, (1, 6)), (2, (1, 5)), (2, (1, 4))}))"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, frozenset({(1, (2, 3)), (1, (1, 3)), (1, (0, 2)), )"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset(len=8), frozenset({(3, (2, 5)), (3, (1, 5)), (3, (2, 4))}))"
          },
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset(len=11), frozenset({(8, (1, 6)), (8, (2, 7)), (8, (1, 7))}))"
          }
        ],
        "code_context": "x37 = x35(x36)"
      }
    },
    "type_signatures": [
      "combine(frozenset, frozenset)"
    ],
    "value_signatures": [
      "combine(frozenset(len=8), frozenset({(3, (2, 5)), (3, (1, 5)), (3, (2, 4))}))",
      "combine(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, frozenset({(1, (2, 3)), (1, (1, 3)), (1, (0, 2)), )",
      "combine(frozenset(len=11), frozenset({(8, (1, 6)), (8, (2, 7)), (8, (1, 7))}))",
      "combine(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (0, 1)),, frozenset({(1, (1, 3)), (1, (0, 2)), (1, (0, 3))}))",
      "combine(frozenset({(0, (1, -1))}), frozenset({(2, (1, 0)), (2, (2, 2)), (2, (1, 2)), )",
      "combine(frozenset({(0, (1, -1))}), frozenset({(2, (1, 0)), (2, (0, 1)), (2, (1, 1))}))",
      "combine(frozenset(len=7), frozenset({(2, (1, 6)), (2, (1, 5)), (2, (1, 4))}))",
      "combine(frozenset({(0, (1, -1)), (2, (1, 1)), (2, (2, 1)),, frozenset({(1, (2, 4)), (1, (2, 3)), (1, (2, 2))}))",
      "combine(frozenset({(0, (1, -1))}), frozenset({(1, (0, 1)), (1, (1, 1)), (1, (1, 0)), )",
      "combine(frozenset(len=7), frozenset({(3, (1, 7)), (3, (2, 6)), (3, (1, 6)), )",
      "combine(frozenset(len=9), frozenset({(6, (1, 6)), (6, (1, 8)), (6, (1, 7))}))",
      "combine(frozenset(len=8), frozenset({(2, (1, 6)), (2, (1, 5)), (2, (0, 7)), )",
      "combine(frozenset({(0, (1, -1))}), frozenset({(2, (1, 0)), (2, (2, 1)), (2, (1, 1))}))",
      "combine(frozenset({(1, (0, 1)), (1, (1, 1)), (0, (1, -1)),, frozenset({(2, (0, 4)), (2, (1, 4)), (2, (0, 3))}))",
      "combine(frozenset({(2, (2, 2)), (0, (1, -1)), (2, (1, 2)),, frozenset({(8, (2, 5)), (8, (1, 5)), (8, (2, 4)), )"
    ]
  },
  "width_f": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6210": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=12))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=10))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=14))"
          }
        ],
        "code_context": "x39 = width_f(x38)"
      }
    },
    "type_signatures": [
      "width_f(frozenset)"
    ],
    "value_signatures": [
      "width_f(frozenset(len=10))",
      "width_f(frozenset(len=14))",
      "width_f(frozenset(len=12))"
    ]
  },
  "decrement": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6211": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "decrement(int)",
            "value_signature": "decrement(10)"
          },
          {
            "type_signature": "decrement(int)",
            "value_signature": "decrement(9)"
          },
          {
            "type_signature": "decrement(int)",
            "value_signature": "decrement(8)"
          }
        ],
        "code_context": "x40 = decrement(x39)"
      }
    },
    "type_signatures": [
      "decrement(int)"
    ],
    "value_signatures": [
      "decrement(8)",
      "decrement(10)",
      "decrement(9)"
    ]
  },
  "canvas": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6213": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(0, (3, 9))"
          },
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(0, (3, 8))"
          },
          {
            "type_signature": "canvas(int, tuple)",
            "value_signature": "canvas(0, (3, 7))"
          }
        ],
        "code_context": "x42 = canvas(ZERO, x41)"
      }
    },
    "type_signatures": [
      "canvas(int, tuple)"
    ],
    "value_signatures": [
      "canvas(0, (3, 8))",
      "canvas(0, (3, 7))",
      "canvas(0, (3, 9))"
    ]
  },
  "paint": {
    "calls": 5,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:6214": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(((0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, frozenset(len=12))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(((0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, frozenset(len=12))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(((0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0), (0,, frozenset(len=10))"
          },
          {
            "type_signature": "paint(tuple, frozenset)",
            "value_signature": "paint(((0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, frozenset(len=14))"
          }
        ],
        "code_context": "O = paint(x42, x38)"
      }
    },
    "type_signatures": [
      "paint(tuple, frozenset)"
    ],
    "value_signatures": [
      "paint(((0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, frozenset(len=14))",
      "paint(((0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, frozenset(len=12))",
      "paint(((0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, frozenset(len=12))",
      "paint(((0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0), (0,, frozenset(len=10))"
    ]
  }
}