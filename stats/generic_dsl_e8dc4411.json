{
  "leastcolor_t": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3899": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(tuple(len=13))"
          },
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(tuple(len=12))"
          },
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(tuple(len=18))"
          }
        ],
        "code_context": "x1 = leastcolor_t(I)"
      }
    },
    "type_signatures": [
      "leastcolor_t(tuple)"
    ],
    "value_signatures": [
      "leastcolor_t(tuple(len=12))",
      "leastcolor_t(tuple(len=13))",
      "leastcolor_t(tuple(len=18))"
    ]
  },
  "f_ofcolor": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3900": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=13), 0)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=12), 0)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=18), 0)"
          }
        ],
        "code_context": "x2 = f_ofcolor(I, ZERO)"
      },
      "solvers.py:3901": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=13), 3)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=12), 2)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=12), 8)"
          },
          {
            "type_signature": "f_ofcolor(tuple, int)",
            "value_signature": "f_ofcolor(tuple(len=18), 6)"
          }
        ],
        "code_context": "x3 = f_ofcolor(I, x1)"
      }
    },
    "type_signatures": [
      "f_ofcolor(tuple, int)"
    ],
    "value_signatures": [
      "f_ofcolor(tuple(len=13), 3)",
      "f_ofcolor(tuple(len=12), 2)",
      "f_ofcolor(tuple(len=18), 0)",
      "f_ofcolor(tuple(len=12), 0)",
      "f_ofcolor(tuple(len=12), 8)",
      "f_ofcolor(tuple(len=13), 0)",
      "f_ofcolor(tuple(len=18), 6)"
    ]
  },
  "position": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3902": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "position(frozenset, frozenset)",
            "value_signature": "position(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, frozenset({(7, 4)}))"
          },
          {
            "type_signature": "position(frozenset, frozenset)",
            "value_signature": "position(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), frozenset({(5, 6)}))"
          },
          {
            "type_signature": "position(frozenset, frozenset)",
            "value_signature": "position(frozenset(len=17), frozenset({(4, 11)}))"
          },
          {
            "type_signature": "position(frozenset, frozenset)",
            "value_signature": "position(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, frozenset({(5, 3)}))"
          }
        ],
        "code_context": "x4 = position(x2, x3)"
      }
    },
    "type_signatures": [
      "position(frozenset, frozenset)"
    ],
    "value_signatures": [
      "position(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), frozenset({(5, 6)}))",
      "position(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, frozenset({(5, 3)}))",
      "position(frozenset(len=17), frozenset({(4, 11)}))",
      "position(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, frozenset({(7, 4)}))"
    ]
  },
  "toindices": {
    "calls": 84,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3902": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(7, 4)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(5, 6)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=17))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(4, 11)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(5, 3)}))"
          }
        ],
        "code_context": "x4 = position(x2, x3)"
      },
      "solvers.py:3904": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=17))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x6 = x5(x2)"
      },
      "solvers.py:3910": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=17))"
          },
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x12 = shape_f(x2)"
      },
      "solvers.py:3918": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "toindices(tuple)",
            "value_signature": "toindices(tuple(len=20))"
          },
          {
            "type_signature": "toindices(tuple)",
            "value_signature": "toindices(tuple(len=16))"
          },
          {
            "type_signature": "toindices(tuple)",
            "value_signature": "toindices(tuple(len=68))"
          }
        ],
        "code_context": "O = fill(I, x1, x19)"
      }
    },
    "type_signatures": [
      "toindices(tuple)",
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset(len=17))",
      "toindices(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})",
      "toindices(frozenset({(4, 11)}))",
      "toindices(frozenset({(5, 3)}))",
      "toindices(frozenset({(7, 4)}))",
      "toindices(frozenset({(5, 6)}))",
      "toindices(tuple(len=20))",
      "toindices(tuple(len=16))",
      "toindices(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})",
      "toindices(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "toindices(tuple(len=68))"
    ]
  },
  "center": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3902": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(7, 4)}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(5, 6)}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset(len=17))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(4, 11)}))"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          },
          {
            "type_signature": "center(frozenset)",
            "value_signature": "center(frozenset({(5, 3)}))"
          }
        ],
        "code_context": "x4 = position(x2, x3)"
      }
    },
    "type_signatures": [
      "center(frozenset)"
    ],
    "value_signatures": [
      "center(frozenset({(5, 3)}))",
      "center(frozenset({(4, 11)}))",
      "center(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})",
      "center(frozenset({(5, 6)}))",
      "center(frozenset({(7, 4)}))",
      "center(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})",
      "center(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "center(frozenset(len=17))"
    ]
  },
  "uppermost": {
    "calls": 20,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3902": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(7, 4)}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(5, 6)}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=17))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(4, 11)}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(5, 3)}))"
          }
        ],
        "code_context": "x4 = position(x2, x3)"
      },
      "solvers.py:3910": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset(len=17))"
          },
          {
            "type_signature": "uppermost(frozenset)",
            "value_signature": "uppermost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x12 = shape_f(x2)"
      }
    },
    "type_signatures": [
      "uppermost(frozenset)"
    ],
    "value_signatures": [
      "uppermost(frozenset({(7, 4)}))",
      "uppermost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})",
      "uppermost(frozenset({(5, 3)}))",
      "uppermost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "uppermost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})",
      "uppermost(frozenset(len=17))",
      "uppermost(frozenset({(4, 11)}))",
      "uppermost(frozenset({(5, 6)}))"
    ]
  },
  "height_f": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3902": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(7, 4)}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(5, 6)}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset(len=17))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(4, 11)}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(5, 3)}))"
          }
        ],
        "code_context": "x4 = position(x2, x3)"
      },
      "solvers.py:3910": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset(len=17))"
          },
          {
            "type_signature": "height_f(frozenset)",
            "value_signature": "height_f(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x12 = shape_f(x2)"
      }
    },
    "type_signatures": [
      "height_f(frozenset)"
    ],
    "value_signatures": [
      "height_f(frozenset({(5, 3)}))",
      "height_f(frozenset({(5, 6)}))",
      "height_f(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})",
      "height_f(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})",
      "height_f(frozenset(len=17))",
      "height_f(frozenset({(7, 4)}))",
      "height_f(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "height_f(frozenset({(4, 11)}))"
    ]
  },
  "lowermost": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3902": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(7, 4)}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(5, 6)}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset(len=17))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(4, 11)}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(5, 3)}))"
          }
        ],
        "code_context": "x4 = position(x2, x3)"
      },
      "solvers.py:3910": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset(len=17))"
          },
          {
            "type_signature": "lowermost(frozenset)",
            "value_signature": "lowermost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x12 = shape_f(x2)"
      }
    },
    "type_signatures": [
      "lowermost(frozenset)"
    ],
    "value_signatures": [
      "lowermost(frozenset({(7, 4)}))",
      "lowermost(frozenset(len=17))",
      "lowermost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})",
      "lowermost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})",
      "lowermost(frozenset({(4, 11)}))",
      "lowermost(frozenset({(5, 3)}))",
      "lowermost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "lowermost(frozenset({(5, 6)}))"
    ]
  },
  "leftmost": {
    "calls": 20,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3902": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(7, 4)}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(5, 6)}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=17))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(4, 11)}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(5, 3)}))"
          }
        ],
        "code_context": "x4 = position(x2, x3)"
      },
      "solvers.py:3910": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset(len=17))"
          },
          {
            "type_signature": "leftmost(frozenset)",
            "value_signature": "leftmost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x12 = shape_f(x2)"
      }
    },
    "type_signatures": [
      "leftmost(frozenset)"
    ],
    "value_signatures": [
      "leftmost(frozenset({(5, 3)}))",
      "leftmost(frozenset({(5, 6)}))",
      "leftmost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})",
      "leftmost(frozenset({(4, 11)}))",
      "leftmost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})",
      "leftmost(frozenset({(7, 4)}))",
      "leftmost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "leftmost(frozenset(len=17))"
    ]
  },
  "width_f": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3902": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(7, 4)}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(5, 6)}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=17))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(4, 11)}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(5, 3)}))"
          }
        ],
        "code_context": "x4 = position(x2, x3)"
      },
      "solvers.py:3910": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset(len=17))"
          },
          {
            "type_signature": "width_f(frozenset)",
            "value_signature": "width_f(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x12 = shape_f(x2)"
      }
    },
    "type_signatures": [
      "width_f(frozenset)"
    ],
    "value_signatures": [
      "width_f(frozenset({(4, 11)}))",
      "width_f(frozenset(len=17))",
      "width_f(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "width_f(frozenset({(7, 4)}))",
      "width_f(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})",
      "width_f(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})",
      "width_f(frozenset({(5, 6)}))",
      "width_f(frozenset({(5, 3)}))"
    ]
  },
  "rightmost": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3902": {
        "count": 8,
        "signatures": [
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(7, 4)}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(5, 6)}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=17))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(4, 11)}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(5, 3)}))"
          }
        ],
        "code_context": "x4 = position(x2, x3)"
      },
      "solvers.py:3910": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset(len=17))"
          },
          {
            "type_signature": "rightmost(frozenset)",
            "value_signature": "rightmost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x12 = shape_f(x2)"
      }
    },
    "type_signatures": [
      "rightmost(frozenset)"
    ],
    "value_signatures": [
      "rightmost(frozenset({(5, 6)}))",
      "rightmost(frozenset({(5, 3)}))",
      "rightmost(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "rightmost(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})",
      "rightmost(frozenset({(7, 4)}))",
      "rightmost(frozenset({(4, 11)}))",
      "rightmost(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})",
      "rightmost(frozenset(len=17))"
    ]
  },
  "fork": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3903": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function connect at 0x100fcc790>, <function ulcorner at 0x100fed8b0>, <function lrcorner at 0x100fe0280>)"
          }
        ],
        "code_context": "x5 = fork(connect, ulcorner, lrcorner)"
      },
      "solvers.py:3907": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function subtract at 0x100fed280>, <function identity at 0x100fd41f0>, <function crement at 0x100fcc9d0>)"
          }
        ],
        "code_context": "x9 = fork(subtract, identity, crement)"
      },
      "solvers.py:3908": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function add at 0x100f0ff70>, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa430>)"
          },
          {
            "type_signature": "fork(function, function, function)",
            "value_signature": "fork(<function add at 0x100f0ff70>, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa550>)"
          }
        ],
        "code_context": "x10 = fork(add, identity, x9)"
      }
    },
    "type_signatures": [
      "fork(function, function, function)"
    ],
    "value_signatures": [
      "fork(<function add at 0x100f0ff70>, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa430>)",
      "fork(<function subtract at 0x100fed280>, <function identity at 0x100fd41f0>, <function crement at 0x100fcc9d0>)",
      "fork(<function add at 0x100f0ff70>, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa550>)",
      "fork(<function connect at 0x100fcc790>, <function ulcorner at 0x100fed8b0>, <function lrcorner at 0x100fe0280>)"
    ]
  },
  "ulcorner": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3904": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset(len=17))"
          },
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x6 = x5(x2)"
      }
    },
    "type_signatures": [
      "ulcorner(frozenset)"
    ],
    "value_signatures": [
      "ulcorner(frozenset(len=17))",
      "ulcorner(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})",
      "ulcorner(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "ulcorner(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
    ]
  },
  "lrcorner": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3904": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "lrcorner(frozenset)",
            "value_signature": "lrcorner(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "lrcorner(frozenset)",
            "value_signature": "lrcorner(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "lrcorner(frozenset)",
            "value_signature": "lrcorner(frozenset(len=17))"
          },
          {
            "type_signature": "lrcorner(frozenset)",
            "value_signature": "lrcorner(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x6 = x5(x2)"
      }
    },
    "type_signatures": [
      "lrcorner(frozenset)"
    ],
    "value_signatures": [
      "lrcorner(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})",
      "lrcorner(frozenset(len=17))",
      "lrcorner(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "lrcorner(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
    ]
  },
  "connect": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3904": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 5), (7, 7))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((3, 3), (5, 5))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((5, 6), (9, 10))"
          },
          {
            "type_signature": "connect(tuple, tuple)",
            "value_signature": "connect((6, 4), (8, 6))"
          }
        ],
        "code_context": "x6 = x5(x2)"
      }
    },
    "type_signatures": [
      "connect(tuple, tuple)"
    ],
    "value_signatures": [
      "connect((3, 3), (5, 5))",
      "connect((6, 4), (8, 6))",
      "connect((5, 6), (9, 10))",
      "connect((5, 5), (7, 7))"
    ]
  },
  "intersection": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3905": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, frozenset({(6, 6), (5, 5), (7, 7)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), frozenset({(4, 4), (3, 3), (5, 5)}))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset(len=17), frozenset({(9, 10), (6, 7), (8, 9), (5, 6), (7, 8))"
          },
          {
            "type_signature": "intersection(frozenset, frozenset)",
            "value_signature": "intersection(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, frozenset({(7, 5), (6, 4), (8, 6)}))"
          }
        ],
        "code_context": "x7 = intersection(x2, x6)"
      }
    },
    "type_signatures": [
      "intersection(frozenset, frozenset)"
    ],
    "value_signatures": [
      "intersection(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), frozenset({(4, 4), (3, 3), (5, 5)}))",
      "intersection(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, frozenset({(6, 6), (5, 5), (7, 7)}))",
      "intersection(frozenset(len=17), frozenset({(9, 10), (6, 7), (8, 9), (5, 6), (7, 8))",
      "intersection(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, frozenset({(7, 5), (6, 4), (8, 6)}))"
    ]
  },
  "equality": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3906": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "equality(frozenset, frozenset)",
            "value_signature": "equality(frozenset({(6, 6), (5, 5), (7, 7)}), frozenset({(6, 6)}))"
          },
          {
            "type_signature": "equality(frozenset, frozenset)",
            "value_signature": "equality(frozenset({(4, 4), (3, 3), (5, 5)}), frozenset())"
          },
          {
            "type_signature": "equality(frozenset, frozenset)",
            "value_signature": "equality(frozenset({(9, 10), (6, 7), (8, 9), (5, 6), (7, 8), frozenset({(9, 10), (6, 7), (8, 9), (5, 6), (7, 8))"
          },
          {
            "type_signature": "equality(frozenset, frozenset)",
            "value_signature": "equality(frozenset({(7, 5), (6, 4), (8, 6)}), frozenset({(7, 5), (6, 4), (8, 6)}))"
          }
        ],
        "code_context": "x8 = equality(x6, x7)"
      }
    },
    "type_signatures": [
      "equality(frozenset, frozenset)"
    ],
    "value_signatures": [
      "equality(frozenset({(7, 5), (6, 4), (8, 6)}), frozenset({(7, 5), (6, 4), (8, 6)}))",
      "equality(frozenset({(6, 6), (5, 5), (7, 7)}), frozenset({(6, 6)}))",
      "equality(frozenset({(4, 4), (3, 3), (5, 5)}), frozenset())",
      "equality(frozenset({(9, 10), (6, 7), (8, 9), (5, 6), (7, 8), frozenset({(9, 10), (6, 7), (8, 9), (5, 6), (7, 8))"
    ]
  },
  "branch": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3909": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "branch(bool, function, function)",
            "value_signature": "branch(False, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa4c0>)"
          },
          {
            "type_signature": "branch(bool, function, function)",
            "value_signature": "branch(False, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa430>)"
          },
          {
            "type_signature": "branch(bool, function, function)",
            "value_signature": "branch(True, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa550>)"
          },
          {
            "type_signature": "branch(bool, function, function)",
            "value_signature": "branch(True, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa940>)"
          }
        ],
        "code_context": "x11 = branch(x8, identity, x10)"
      }
    },
    "type_signatures": [
      "branch(bool, function, function)"
    ],
    "value_signatures": [
      "branch(False, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa4c0>)",
      "branch(True, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa940>)",
      "branch(False, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa430>)",
      "branch(True, <function identity at 0x100fd41f0>, <function fork.<locals>.<lambda> at 0x1014aa550>)"
    ]
  },
  "shape_f": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3910": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "shape_f(frozenset)",
            "value_signature": "shape_f(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "shape_f(frozenset)",
            "value_signature": "shape_f(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "shape_f(frozenset)",
            "value_signature": "shape_f(frozenset(len=17))"
          },
          {
            "type_signature": "shape_f(frozenset)",
            "value_signature": "shape_f(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x12 = shape_f(x2)"
      }
    },
    "type_signatures": [
      "shape_f(frozenset)"
    ],
    "value_signatures": [
      "shape_f(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})",
      "shape_f(frozenset(len=17))",
      "shape_f(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "shape_f(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
    ]
  },
  "multiply": {
    "calls": 20,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3911": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((3, 3), (1, -1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((3, 3), (1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((5, 5), (-1, 1))"
          },
          {
            "type_signature": "multiply(tuple, tuple)",
            "value_signature": "multiply((3, 3), (-1, -1))"
          }
        ],
        "code_context": "x13 = multiply(x12, x4)"
      },
      "solvers.py:3915": {
        "count": 16,
        "signatures": [
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((2, -2), 1)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((2, -2), 2)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((2, -2), 3)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((2, -2), 4)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((2, 2), 1)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((2, 2), 2)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((2, 2), 3)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((2, 2), 4)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-5, 5), 1)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-5, 5), 2)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-5, 5), 3)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-5, 5), 4)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-3, -3), 1)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-3, -3), 2)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-3, -3), 3)"
          },
          {
            "type_signature": "multiply(tuple, int)",
            "value_signature": "multiply((-3, -3), 4)"
          }
        ],
        "code_context": "x17 = apply(x16, x15)"
      }
    },
    "type_signatures": [
      "multiply(tuple, int)",
      "multiply(tuple, tuple)"
    ],
    "value_signatures": [
      "multiply((-3, -3), 2)",
      "multiply((-5, 5), 1)",
      "multiply((-5, 5), 4)",
      "multiply((2, -2), 3)",
      "multiply((2, 2), 4)",
      "multiply((5, 5), (-1, 1))",
      "multiply((2, -2), 4)",
      "multiply((3, 3), (1, -1))",
      "multiply((2, -2), 2)",
      "multiply((-5, 5), 3)",
      "multiply((-3, -3), 3)",
      "multiply((2, 2), 2)",
      "multiply((2, -2), 1)",
      "multiply((2, 2), 1)",
      "multiply((-3, -3), 4)",
      "multiply((-5, 5), 2)",
      "multiply((-3, -3), 1)",
      "multiply((3, 3), (1, 1))",
      "multiply((3, 3), (-1, -1))",
      "multiply((2, 2), 3)"
    ]
  },
  "apply": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3912": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x1014aa4c0>, (3, -3))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function fork.<locals>.<lambda> at 0x1014aa430>, (3, 3))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function identity at 0x100fd41f0>, (-5, 5))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function identity at 0x100fd41f0>, (-3, -3))"
          }
        ],
        "code_context": "x14 = apply(x11, x13)"
      },
      "solvers.py:3915": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x1014aa550>, (1, 2, 3, 4))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x1014aa3a0>, (1, 2, 3, 4))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x1014aa5e0>, (1, 2, 3, 4))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x1014aaca0>, (1, 2, 3, 4))"
          }
        ],
        "code_context": "x17 = apply(x16, x15)"
      },
      "solvers.py:3917": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x1014aa5e0>, ((2, -2), (4, -4), (6, -6), (8, -8)))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x1014aa940>, ((2, 2), (4, 4), (6, 6), (8, 8)))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x1014aab80>, ((-5, 5), (-10, 10), (-15, 15), (-20, 20)))"
          },
          {
            "type_signature": "apply(function, tuple)",
            "value_signature": "apply(<function lbind.<locals>.<lambda> at 0x1014aad30>, ((-3, -3), (-6, -6), (-9, -9), (-12, -12)))"
          }
        ],
        "code_context": "x19 = mapply(x18, x17)"
      }
    },
    "type_signatures": [
      "apply(function, tuple)"
    ],
    "value_signatures": [
      "apply(<function lbind.<locals>.<lambda> at 0x1014aa550>, (1, 2, 3, 4))",
      "apply(<function lbind.<locals>.<lambda> at 0x1014aaca0>, (1, 2, 3, 4))",
      "apply(<function identity at 0x100fd41f0>, (-5, 5))",
      "apply(<function lbind.<locals>.<lambda> at 0x1014aab80>, ((-5, 5), (-10, 10), (-15, 15), (-20, 20)))",
      "apply(<function lbind.<locals>.<lambda> at 0x1014aa940>, ((2, 2), (4, 4), (6, 6), (8, 8)))",
      "apply(<function fork.<locals>.<lambda> at 0x1014aa430>, (3, 3))",
      "apply(<function fork.<locals>.<lambda> at 0x1014aa4c0>, (3, -3))",
      "apply(<function lbind.<locals>.<lambda> at 0x1014aa5e0>, (1, 2, 3, 4))",
      "apply(<function identity at 0x100fd41f0>, (-3, -3))",
      "apply(<function lbind.<locals>.<lambda> at 0x1014aa5e0>, ((2, -2), (4, -4), (6, -6), (8, -8)))",
      "apply(<function lbind.<locals>.<lambda> at 0x1014aad30>, ((-3, -3), (-6, -6), (-9, -9), (-12, -12)))",
      "apply(<function lbind.<locals>.<lambda> at 0x1014aa3a0>, (1, 2, 3, 4))"
    ]
  },
  "identity": {
    "calls": 12,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3912": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(3)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(-3)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(-5)"
          },
          {
            "type_signature": "identity(int)",
            "value_signature": "identity(5)"
          }
        ],
        "code_context": "x14 = apply(x11, x13)"
      }
    },
    "type_signatures": [
      "identity(int)"
    ],
    "value_signatures": [
      "identity(-3)",
      "identity(-5)",
      "identity(3)",
      "identity(5)"
    ]
  },
  "crement": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3912": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "crement(int)",
            "value_signature": "crement(3)"
          },
          {
            "type_signature": "crement(int)",
            "value_signature": "crement(-3)"
          }
        ],
        "code_context": "x14 = apply(x11, x13)"
      }
    },
    "type_signatures": [
      "crement(int)"
    ],
    "value_signatures": [
      "crement(3)",
      "crement(-3)"
    ]
  },
  "subtract": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3912": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "subtract(int, int)",
            "value_signature": "subtract(3, 4)"
          },
          {
            "type_signature": "subtract(int, int)",
            "value_signature": "subtract(-3, -4)"
          }
        ],
        "code_context": "x14 = apply(x11, x13)"
      }
    },
    "type_signatures": [
      "subtract(int, int)"
    ],
    "value_signatures": [
      "subtract(3, 4)",
      "subtract(-3, -4)"
    ]
  },
  "add": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3912": {
        "count": 2,
        "signatures": [
          {
            "type_signature": "add(int, int)",
            "value_signature": "add(3, -1)"
          },
          {
            "type_signature": "add(int, int)",
            "value_signature": "add(-3, 1)"
          }
        ],
        "code_context": "x14 = apply(x11, x13)"
      }
    },
    "type_signatures": [
      "add(int, int)"
    ],
    "value_signatures": [
      "add(-3, 1)",
      "add(3, -1)"
    ]
  },
  "interval": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3913": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "interval(int, int, int)",
            "value_signature": "interval(1, 5, 1)"
          }
        ],
        "code_context": "x15 = interval(ONE, FIVE, ONE)"
      }
    },
    "type_signatures": [
      "interval(int, int, int)"
    ],
    "value_signatures": [
      "interval(1, 5, 1)"
    ]
  },
  "lbind": {
    "calls": 8,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3914": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function multiply at 0x100fe0f70>, (2, -2))"
          },
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function multiply at 0x100fe0f70>, (2, 2))"
          },
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function multiply at 0x100fe0f70>, (-5, 5))"
          },
          {
            "type_signature": "lbind(function, tuple)",
            "value_signature": "lbind(<function multiply at 0x100fe0f70>, (-3, -3))"
          }
        ],
        "code_context": "x16 = lbind(multiply, x14)"
      },
      "solvers.py:3916": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x100fe9ca0>, frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x100fe9ca0>, frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x100fe9ca0>, frozenset(len=17))"
          },
          {
            "type_signature": "lbind(function, frozenset)",
            "value_signature": "lbind(<function shift at 0x100fe9ca0>, frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})"
          }
        ],
        "code_context": "x18 = lbind(shift, x2)"
      }
    },
    "type_signatures": [
      "lbind(function, frozenset)",
      "lbind(function, tuple)"
    ],
    "value_signatures": [
      "lbind(<function shift at 0x100fe9ca0>, frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)})",
      "lbind(<function multiply at 0x100fe0f70>, (2, 2))",
      "lbind(<function shift at 0x100fe9ca0>, frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}))",
      "lbind(<function shift at 0x100fe9ca0>, frozenset(len=17))",
      "lbind(<function multiply at 0x100fe0f70>, (2, -2))",
      "lbind(<function multiply at 0x100fe0f70>, (-3, -3))",
      "lbind(<function shift at 0x100fe9ca0>, frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)})",
      "lbind(<function multiply at 0x100fe0f70>, (-5, 5))"
    ]
  },
  "mapply": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3917": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "mapply(function, tuple)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x1014aa5e0>, ((2, -2), (4, -4), (6, -6), (8, -8)))"
          },
          {
            "type_signature": "mapply(function, tuple)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x1014aa940>, ((2, 2), (4, 4), (6, 6), (8, 8)))"
          },
          {
            "type_signature": "mapply(function, tuple)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x1014aab80>, ((-5, 5), (-10, 10), (-15, 15), (-20, 20)))"
          },
          {
            "type_signature": "mapply(function, tuple)",
            "value_signature": "mapply(<function lbind.<locals>.<lambda> at 0x1014aad30>, ((-3, -3), (-6, -6), (-9, -9), (-12, -12)))"
          }
        ],
        "code_context": "x19 = mapply(x18, x17)"
      }
    },
    "type_signatures": [
      "mapply(function, tuple)"
    ],
    "value_signatures": [
      "mapply(<function lbind.<locals>.<lambda> at 0x1014aab80>, ((-5, 5), (-10, 10), (-15, 15), (-20, 20)))",
      "mapply(<function lbind.<locals>.<lambda> at 0x1014aa5e0>, ((2, -2), (4, -4), (6, -6), (8, -8)))",
      "mapply(<function lbind.<locals>.<lambda> at 0x1014aad30>, ((-3, -3), (-6, -6), (-9, -9), (-12, -12)))",
      "mapply(<function lbind.<locals>.<lambda> at 0x1014aa940>, ((2, 2), (4, 4), (6, 6), (8, 8)))"
    ]
  },
  "shift": {
    "calls": 16,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3917": {
        "count": 16,
        "signatures": [
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, (2, -2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, (4, -4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, (6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, (8, -8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), (2, 2))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), (4, 4))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), (6, 6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), (8, 8))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=17), (-5, 5))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=17), (-10, 10))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=17), (-15, 15))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset(len=17), (-20, 20))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, (-3, -3))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, (-6, -6))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, (-9, -9))"
          },
          {
            "type_signature": "shift(frozenset, tuple)",
            "value_signature": "shift(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, (-12, -12))"
          }
        ],
        "code_context": "x19 = mapply(x18, x17)"
      }
    },
    "type_signatures": [
      "shift(frozenset, tuple)"
    ],
    "value_signatures": [
      "shift(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), (8, 8))",
      "shift(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, (-6, -6))",
      "shift(frozenset(len=17), (-5, 5))",
      "shift(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), (4, 4))",
      "shift(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, (-12, -12))",
      "shift(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, (-3, -3))",
      "shift(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, (4, -4))",
      "shift(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), (6, 6))",
      "shift(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, (8, -8))",
      "shift(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, (2, -2))",
      "shift(frozenset({(6, 5), (6, 7), (7, 6), (5, 6), (6, 6)}, (6, -6))",
      "shift(frozenset({(8, 4), (6, 4), (8, 6), (6, 6), (7, 5)}, (-9, -9))",
      "shift(frozenset({(4, 5), (5, 4), (3, 4), (4, 3)}), (2, 2))",
      "shift(frozenset(len=17), (-15, 15))",
      "shift(frozenset(len=17), (-10, 10))",
      "shift(frozenset(len=17), (-20, 20))"
    ]
  },
  "merge": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3917": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "merge(tuple)",
            "value_signature": "merge((frozenset({(7, 4), (8, 4), (8, 3), (8, 5), (9, 4))"
          },
          {
            "type_signature": "merge(tuple)",
            "value_signature": "merge((frozenset({(6, 7), (7, 6), (5, 6), (6, 5)}), froz)"
          },
          {
            "type_signature": "merge(tuple)",
            "value_signature": "merge((frozenset({(1, 12), (3, 14), (1, 15), (1, 11), (4)"
          },
          {
            "type_signature": "merge(tuple)",
            "value_signature": "merge((frozenset({(3, 1), (5, 1), (4, 2), (3, 3), (5, 3))"
          }
        ],
        "code_context": "x19 = mapply(x18, x17)"
      }
    },
    "type_signatures": [
      "merge(tuple)"
    ],
    "value_signatures": [
      "merge((frozenset({(1, 12), (3, 14), (1, 15), (1, 11), (4)",
      "merge((frozenset({(3, 1), (5, 1), (4, 2), (3, 3), (5, 3))",
      "merge((frozenset({(6, 7), (7, 6), (5, 6), (6, 5)}), froz)",
      "merge((frozenset({(7, 4), (8, 4), (8, 3), (8, 5), (9, 4))"
    ]
  },
  "fill": {
    "calls": 4,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:3918": {
        "count": 4,
        "signatures": [
          {
            "type_signature": "fill(tuple, int, tuple)",
            "value_signature": "fill(tuple(len=13), 3, tuple(len=20))"
          },
          {
            "type_signature": "fill(tuple, int, tuple)",
            "value_signature": "fill(tuple(len=12), 2, tuple(len=16))"
          },
          {
            "type_signature": "fill(tuple, int, tuple)",
            "value_signature": "fill(tuple(len=12), 8, tuple(len=68))"
          },
          {
            "type_signature": "fill(tuple, int, tuple)",
            "value_signature": "fill(tuple(len=18), 6, tuple(len=20))"
          }
        ],
        "code_context": "O = fill(I, x1, x19)"
      }
    },
    "type_signatures": [
      "fill(tuple, int, tuple)"
    ],
    "value_signatures": [
      "fill(tuple(len=12), 8, tuple(len=68))",
      "fill(tuple(len=13), 3, tuple(len=20))",
      "fill(tuple(len=18), 6, tuple(len=20))",
      "fill(tuple(len=12), 2, tuple(len=16))"
    ]
  }
}