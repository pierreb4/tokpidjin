{
  "asindices": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2802": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "asindices(tuple)",
            "value_signature": "asindices(tuple(len=10))"
          }
        ],
        "code_context": "x1 = asindices(I)"
      }
    },
    "type_signatures": [
      "asindices(tuple)"
    ],
    "value_signatures": [
      "asindices(tuple(len=10))"
    ]
  },
  "tophalf": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2803": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "tophalf(tuple)",
            "value_signature": "tophalf(tuple(len=10))"
          }
        ],
        "code_context": "x2 = tophalf(I)"
      }
    },
    "type_signatures": [
      "tophalf(tuple)"
    ],
    "value_signatures": [
      "tophalf(tuple(len=10))"
    ]
  },
  "bottomhalf": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2804": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "bottomhalf(tuple)",
            "value_signature": "bottomhalf(tuple(len=10))"
          }
        ],
        "code_context": "x3 = bottomhalf(I)"
      }
    },
    "type_signatures": [
      "bottomhalf(tuple)"
    ],
    "value_signatures": [
      "bottomhalf(tuple(len=10))"
    ]
  },
  "leastcolor_t": {
    "calls": 6,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2805": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(((0, 0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0)"
          }
        ],
        "code_context": "x4 = leastcolor_t(x2)"
      },
      "solvers.py:2806": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "leastcolor_t(tuple)",
            "value_signature": "leastcolor_t(((0, 0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0)"
          }
        ],
        "code_context": "x5 = leastcolor_t(x3)"
      }
    },
    "type_signatures": [
      "leastcolor_t(tuple)"
    ],
    "value_signatures": [
      "leastcolor_t(((0, 0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0)"
    ]
  },
  "hfrontier": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2807": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "hfrontier(tuple)",
            "value_signature": "hfrontier((2, 0))"
          }
        ],
        "code_context": "x6 = hfrontier(TWO_BY_ZERO)"
      }
    },
    "type_signatures": [
      "hfrontier(tuple)"
    ],
    "value_signatures": [
      "hfrontier((2, 0))"
    ]
  },
  "box": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2808": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "box(frozenset)",
            "value_signature": "box(frozenset(len=100))"
          }
        ],
        "code_context": "x7 = box(x1)"
      }
    },
    "type_signatures": [
      "box(frozenset)"
    ],
    "value_signatures": [
      "box(frozenset(len=100))"
    ]
  },
  "ulcorner": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2808": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "ulcorner(frozenset)",
            "value_signature": "ulcorner(frozenset(len=100))"
          }
        ],
        "code_context": "x7 = box(x1)"
      }
    },
    "type_signatures": [
      "ulcorner(frozenset)"
    ],
    "value_signatures": [
      "ulcorner(frozenset(len=100))"
    ]
  },
  "toindices": {
    "calls": 9,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2808": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=100))"
          }
        ],
        "code_context": "x7 = box(x1)"
      },
      "solvers.py:2810": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "toindices(frozenset)",
            "value_signature": "toindices(frozenset(len=64))"
          }
        ],
        "code_context": "x9 = fill(x2, x4, x8)"
      }
    },
    "type_signatures": [
      "toindices(frozenset)"
    ],
    "value_signatures": [
      "toindices(frozenset(len=100))",
      "toindices(frozenset(len=64))"
    ]
  },
  "lrcorner": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2808": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "lrcorner(frozenset)",
            "value_signature": "lrcorner(frozenset(len=100))"
          }
        ],
        "code_context": "x7 = box(x1)"
      }
    },
    "type_signatures": [
      "lrcorner(frozenset)"
    ],
    "value_signatures": [
      "lrcorner(frozenset(len=100))"
    ]
  },
  "combine": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2809": {
        "count": 1,
        "signatures": [
          {
            "type_signature": "combine(frozenset, frozenset)",
            "value_signature": "combine(frozenset(len=30), frozenset(len=36))"
          }
        ],
        "code_context": "x8 = combine(x6, x7)"
      }
    },
    "type_signatures": [
      "combine(frozenset, frozenset)"
    ],
    "value_signatures": [
      "combine(frozenset(len=30), frozenset(len=36))"
    ]
  },
  "fill": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2810": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((0, 0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, frozenset(len=64))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((0, 0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 6, frozenset(len=64))"
          },
          {
            "type_signature": "fill(tuple, int, frozenset)",
            "value_signature": "fill(((0, 0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 2, frozenset(len=64))"
          }
        ],
        "code_context": "x9 = fill(x2, x4, x8)"
      }
    },
    "type_signatures": [
      "fill(tuple, int, frozenset)"
    ],
    "value_signatures": [
      "fill(((0, 0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 6, frozenset(len=64))",
      "fill(((0, 0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 2, frozenset(len=64))",
      "fill(((0, 0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 1, frozenset(len=64))"
    ]
  },
  "hmirror_t": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2811": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "hmirror_t(tuple)",
            "value_signature": "hmirror_t(((1, 1, 1, 1, 1, 1, 1, 1, 1, 1), (1, 0, 0, 0, 0, 0)"
          },
          {
            "type_signature": "hmirror_t(tuple)",
            "value_signature": "hmirror_t(((6, 6, 6, 6, 6, 6, 6, 6, 6, 6), (6, 0, 0, 0, 0, 0)"
          },
          {
            "type_signature": "hmirror_t(tuple)",
            "value_signature": "hmirror_t(((2, 2, 2, 2, 2, 2, 2, 2, 2, 2), (2, 0, 0, 0, 0, 0)"
          }
        ],
        "code_context": "x10 = hmirror_t(x9)"
      }
    },
    "type_signatures": [
      "hmirror_t(tuple)"
    ],
    "value_signatures": [
      "hmirror_t(((2, 2, 2, 2, 2, 2, 2, 2, 2, 2), (2, 0, 0, 0, 0, 0)",
      "hmirror_t(((1, 1, 1, 1, 1, 1, 1, 1, 1, 1), (1, 0, 0, 0, 0, 0)",
      "hmirror_t(((6, 6, 6, 6, 6, 6, 6, 6, 6, 6), (6, 0, 0, 0, 0, 0)"
    ]
  },
  "replace": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2812": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "replace(tuple, int, int)",
            "value_signature": "replace(((1, 0, 0, 0, 0, 0, 0, 0, 0, 1), (1, 0, 0, 0, 0, 0, 1, 4)"
          },
          {
            "type_signature": "replace(tuple, int, int)",
            "value_signature": "replace(((6, 0, 0, 0, 0, 0, 0, 0, 0, 6), (6, 0, 0, 0, 0, 0, 6, 7)"
          },
          {
            "type_signature": "replace(tuple, int, int)",
            "value_signature": "replace(((2, 0, 0, 0, 0, 0, 0, 0, 0, 2), (2, 0, 0, 0, 0, 0, 2, 8)"
          }
        ],
        "code_context": "x11 = replace(x10, x4, x5)"
      }
    },
    "type_signatures": [
      "replace(tuple, int, int)"
    ],
    "value_signatures": [
      "replace(((1, 0, 0, 0, 0, 0, 0, 0, 0, 1), (1, 0, 0, 0, 0, 0, 1, 4)",
      "replace(((2, 0, 0, 0, 0, 0, 0, 0, 0, 2), (2, 0, 0, 0, 0, 0, 2, 8)",
      "replace(((6, 0, 0, 0, 0, 0, 0, 0, 0, 6), (6, 0, 0, 0, 0, 0, 6, 7)"
    ]
  },
  "vconcat": {
    "calls": 3,
    "execution_time": 0.0,
    "call_sites": {
      "solvers.py:2813": {
        "count": 3,
        "signatures": [
          {
            "type_signature": "vconcat(tuple, tuple)",
            "value_signature": "vconcat(((1, 1, 1, 1, 1, 1, 1, 1, 1, 1), (1, 0, 0, 0, 0, 0, ((4, 0, 0, 0, 0, 0, 0, 0, 0, 4), (4, 0, 0, 0, 0, 0)"
          },
          {
            "type_signature": "vconcat(tuple, tuple)",
            "value_signature": "vconcat(((6, 6, 6, 6, 6, 6, 6, 6, 6, 6), (6, 0, 0, 0, 0, 0, ((7, 0, 0, 0, 0, 0, 0, 0, 0, 7), (7, 0, 0, 0, 0, 0)"
          },
          {
            "type_signature": "vconcat(tuple, tuple)",
            "value_signature": "vconcat(((2, 2, 2, 2, 2, 2, 2, 2, 2, 2), (2, 0, 0, 0, 0, 0, ((8, 0, 0, 0, 0, 0, 0, 0, 0, 8), (8, 0, 0, 0, 0, 0)"
          }
        ],
        "code_context": "O = vconcat(x9, x11)"
      }
    },
    "type_signatures": [
      "vconcat(tuple, tuple)"
    ],
    "value_signatures": [
      "vconcat(((1, 1, 1, 1, 1, 1, 1, 1, 1, 1), (1, 0, 0, 0, 0, 0, ((4, 0, 0, 0, 0, 0, 0, 0, 0, 4), (4, 0, 0, 0, 0, 0)",
      "vconcat(((6, 6, 6, 6, 6, 6, 6, 6, 6, 6), (6, 0, 0, 0, 0, 0, ((7, 0, 0, 0, 0, 0, 0, 0, 0, 7), (7, 0, 0, 0, 0, 0)",
      "vconcat(((2, 2, 2, 2, 2, 2, 2, 2, 2, 2), (2, 0, 0, 0, 0, 0, ((8, 0, 0, 0, 0, 0, 0, 0, 0, 8), (8, 0, 0, 0, 0, 0)"
    ]
  }
}