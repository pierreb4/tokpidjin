def solve(S, I, C):
    return paint(I, mapply(fork(recolor_i, color, fork(intersection, fork(intersection, chain(lbind(sfilter, asindices(I)), lbind(compose, compose(chain(even, rbind(get_rank, F0), lbind(apply, fork(multiply, sign, identity))), fork(subtract, mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))))), compose(center, fill(replace(I, THREE, MAGENTA), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F1)), mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0)))))))))), lbind(rbind, astuple)), chain(lbind(sfilter, asindices(I)), rbind(compose, compose(lbind(rbind(get_arg_rank, L1), f_ofcolor(I, get_nth_f(apply(color, difference(o_g(I, R4), sizefilter(o_g(I, R4), ONE))), F0))), compose(lbind(compose, chain(fork(add, mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))))), fill(replace(I, THREE, MAGENTA), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F1)), mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))))))), lbind(apply, fork(multiply, sign, identity)), fork(subtract, mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))))), compose(center, fill(replace(I, THREE, MAGENTA), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F1)), mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0)))))))))), lbind(lbind, astuple)))), lbind(rbind, equality))), compose(lbind(sfilter, asindices(I)), fork(lbind(fork, greater), chain(rbind(compose, compose(lbind(compose, chain(fork(add, mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))))), fill(replace(I, THREE, MAGENTA), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F1)), mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))))))), lbind(apply, fork(multiply, sign, identity)), fork(subtract, mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))))), compose(center, fill(replace(I, THREE, MAGENTA), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F1)), mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0)))))))))), lbind(lbind, astuple))), lbind(lbind, rbind(get_val_rank, L1)), rbind(remove, f_ofcolor(I, get_nth_f(apply(color, difference(o_g(I, R4), sizefilter(o_g(I, R4), ONE))), F0)))), compose(lbind(compose, chain(fork(add, mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))))), fill(replace(I, THREE, MAGENTA), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F1)), mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))))))), lbind(apply, fork(multiply, sign, identity)), fork(subtract, mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))))), compose(center, fill(replace(I, THREE, MAGENTA), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F1)), mfilter_f(sizefilter(o_g(I, R4), ONE), compose(lbind(contained, THREE), chain(palette_t, trim, center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0)))))))))), lbind(rbind, astuple)))))), f_ofcolor(I, get_nth_f(apply(color, difference(o_g(I, R4), sizefilter(o_g(I, R4), ONE))), F0))))