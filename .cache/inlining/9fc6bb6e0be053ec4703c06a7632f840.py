def solve(S, I, C):
    return underfill(I, BLUE, mapply(fork(rbind(get_arg_rank, F0), chain(rbind(apply, apply(tojvec, interval(TWO, NEG_ONE, NEG_ONE))), lbind(lbind, shift), compose(lbind(shift, normalize(get_nth_t(order(canvas(BLACK, astuple(THREE, subtract(multiply(multiply(colorcount_t(I, BLACK), THREE), colorcount_t(I, BLACK)), THREE))), rbind(col_row, R1)), F0))), rbind(corner, R0))), compose(lbind(compose, size), lbind(lbind, intersection))), remove_f(get_nth_t(order(canvas(BLACK, astuple(THREE, subtract(multiply(multiply(colorcount_t(I, BLACK), THREE), colorcount_t(I, BLACK)), THREE))), rbind(col_row, R1)), F0), order(canvas(BLACK, astuple(THREE, subtract(multiply(multiply(colorcount_t(I, BLACK), THREE), colorcount_t(I, BLACK)), THREE))), rbind(col_row, R1)))))