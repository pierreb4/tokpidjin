def solve(S, I, C):
    return underfill(I, other_f(remove(ZERO, palette_t(I)), color(get_arg_rank_f(get_arg_rank_f(get_nth_f(normalize_o, F0), size, F0), fill(replace(I, FIVE, YELLOW), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F0)), get_arg_rank_f(get_nth_f(normalize_o, F0), size, F0)), F0))), combine(combine(shoot(corner(get_arg_rank_f(get_arg_rank_f(get_nth_f(normalize_o, F0), size, F0), fill(replace(I, FIVE, YELLOW), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F0)), get_arg_rank_f(get_nth_f(normalize_o, F0), size, F0)), F0), R3), UNITY), shoot(corner(get_arg_rank_f(get_arg_rank_f(get_nth_f(normalize_o, F0), size, F0), fill(replace(I, FIVE, YELLOW), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F0)), get_arg_rank_f(get_nth_f(normalize_o, F0), size, F0)), F0), R2), DOWN_LEFT)), combine(shoot(corner(get_arg_rank_f(get_arg_rank_f(get_nth_f(normalize_o, F0), size, F0), fill(replace(I, FIVE, YELLOW), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F0)), get_arg_rank_f(get_nth_f(normalize_o, F0), size, F0)), F0), R1), UP_RIGHT), shoot(corner(get_arg_rank_f(get_arg_rank_f(get_nth_f(normalize_o, F0), size, F0), fill(replace(I, FIVE, YELLOW), get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F0)), get_arg_rank_f(get_nth_f(normalize_o, F0), size, F0)), F0), R0), NEG_UNITY))))