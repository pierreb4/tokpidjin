def solve(S, I, C):
    return fill(I, get_nth_t(difference_tuple(dedupe(mapply(p_g(apply(second(S)))))()(dedupe(mapply(p_g(apply(first(S)))))()))(F0)), mapply(rbind(subgrid, I), sfilter_t(pair(order(colorfilter(fork(multiply, height_f, width_f), BLACK), compose(rbind(get_nth_f, L1), center)), interval(size_t(order(colorfilter(fork(multiply, height_f, width_f), BLACK), compose(rbind(get_nth_f, L1), center))), size_t(order(colorfilter(fork(multiply, height_f, width_f), BLACK), compose(rbind(get_nth_f, L1), center))), ONE)), compose(rbind(contained, interval(ZERO, size_t(order(colorfilter(fork(multiply, height_f, width_f), BLACK), compose(rbind(get_nth_f, L1), center))), THREE)), rbind(get_nth_f, L1)))))