def solve_6d0160f0_one(S, I):
    return paint(paint(I, mapply(lbind(shift, recolor_i(ZERO, asindices(crop(I, ORIGIN, THREE_BY_THREE)))), product(insert(EIGHT, insert(FOUR, initset(ZERO))), insert(EIGHT, insert(FOUR, initset(ZERO)))))), shift(toobject(asindices(replace(crop(I, astuple(branch(greater(get_nth_f(get_nth_f(f_ofcolor(I, FOUR), F0), F0), SEVEN), EIGHT, branch(greater(get_nth_f(get_nth_f(f_ofcolor(I, FOUR), F0), F0), THREE), FOUR, ZERO)), branch(greater(get_nth_t(get_nth_f(f_ofcolor(I, FOUR), F0), L1), SEVEN), EIGHT, branch(greater(get_nth_t(get_nth_f(f_ofcolor(I, FOUR), F0), L1), THREE), FOUR, ZERO))), THREE_BY_THREE), FIVE, ZERO)), replace(crop(I, astuple(branch(greater(get_nth_f(get_nth_f(f_ofcolor(I, FOUR), F0), F0), SEVEN), EIGHT, branch(greater(get_nth_f(get_nth_f(f_ofcolor(I, FOUR), F0), F0), THREE), FOUR, ZERO)), branch(greater(get_nth_t(get_nth_f(f_ofcolor(I, FOUR), F0), L1), SEVEN), EIGHT, branch(greater(get_nth_t(get_nth_f(f_ofcolor(I, FOUR), F0), L1), THREE), FOUR, ZERO))), THREE_BY_THREE), FIVE, ZERO)), multiply(get_nth_f(f_ofcolor(replace(crop(I, astuple(branch(greater(get_nth_f(get_nth_f(f_ofcolor(I, FOUR), F0), F0), SEVEN), EIGHT, branch(greater(get_nth_f(get_nth_f(f_ofcolor(I, FOUR), F0), F0), THREE), FOUR, ZERO)), branch(greater(get_nth_t(get_nth_f(f_ofcolor(I, FOUR), F0), L1), SEVEN), EIGHT, branch(greater(get_nth_t(get_nth_f(f_ofcolor(I, FOUR), F0), L1), THREE), FOUR, ZERO))), THREE_BY_THREE), FIVE, ZERO), FOUR), F0), FOUR)))


def solve_6d0160f0(S, I):
    x1 = crop(I, ORIGIN, THREE_BY_THREE)
    x2 = asindices(x1)
    x3 = recolor_i(ZERO, x2)
    x4 = lbind(shift, x3)
    x5 = initset(ZERO)
    x6 = insert(FOUR, x5)
    x7 = insert(EIGHT, x6)
    x8 = product(x7, x7)
    x9 = mapply(x4, x8)
    x10 = paint(I, x9)
    x11 = f_ofcolor(I, FOUR)
    x12 = get_nth_f(x11, F0)
    x13 = get_nth_f(x12, F0)
    x14 = greater(x13, SEVEN)
    x15 = greater(x13, THREE)
    x16 = branch(x15, FOUR, ZERO)
    x17 = branch(x14, EIGHT, x16)
    x18 = get_nth_t(x12, L1)
    x19 = greater(x18, SEVEN)
    x20 = greater(x18, THREE)
    x21 = branch(x20, FOUR, ZERO)
    x22 = branch(x19, EIGHT, x21)
    x23 = astuple(x17, x22)
    x24 = crop(I, x23, THREE_BY_THREE)
    x25 = replace(x24, FIVE, ZERO)
    x26 = asindices(x25)
    x27 = toobject(x26, x25)
    x28 = f_ofcolor(x25, FOUR)
    x29 = get_nth_f(x28, F0)
    x30 = multiply(x29, FOUR)
    x31 = shift(x27, x30)
    O = paint(x10, x31)
    return O
