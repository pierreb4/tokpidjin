def solve_97a05b5b_one(S, I):
    return paint(paint(subgrid(get_arg_rank_f(o_g(I, R3), size, F0), I), mapply(fork(mapply, compose(lbind(lbind, shift), normalize), fork(apply, chain(compose(lbind(rbind, subtract), rbind(corner, R0)), fork(combine, compose(lbind(recolor_o, ZERO), rbind(sfilter, compose(flip, matcher(rbind(get_nth_f, F0), TWO)))), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), normalize), fork(sfilter, compose(rbind(sfilter, chain(compose(positive, size), lbind(sfilter, apply(toindices, o_g(switch(subgrid(get_arg_rank_f(o_g(I, R3), size, F0), I), TWO, ZERO), R7))), lbind(lbind, contained))), chain(lbind(occurrences, switch(subgrid(get_arg_rank_f(o_g(I, R3), size, F0), I), TWO, ZERO)), fork(combine, compose(lbind(recolor_o, ZERO), rbind(sfilter, compose(flip, matcher(rbind(get_nth_f, F0), TWO)))), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), normalize)), chain(rbind(compose, compose(chain(size, rbind(get_nth_f, F0), lbind(sfilter, apply(toindices, o_g(switch(subgrid(get_arg_rank_f(o_g(I, R3), size, F0), I), TWO, ZERO), R7)))), lbind(lbind, contained))), lbind(rbind, equality), rbind(colorcount_f, TWO))))), mapply(lbind(rapply, apply(fork(compose, rbind(get_nth_f, F0), rbind(get_nth_f, L1)), product(combine(astuple(rbind(mir_rot_f, R3), rbind(mir_rot_f, R1)), astuple(rbind(mir_rot_f, R0), rbind(mir_rot_f, R2))), combine(astuple(rbind(mir_rot_f, R3), rbind(mir_rot_f, R1)), astuple(rbind(mir_rot_f, R0), rbind(mir_rot_f, R2)))))), sfilter_f(o_g(I, R3), compose(rbind(greater, ONE), numcolors_f))))), mapply(fork(mapply, compose(lbind(lbind, shift), normalize), fork(apply, chain(compose(lbind(rbind, subtract), rbind(corner, R0)), fork(combine, compose(lbind(recolor_o, ZERO), rbind(sfilter, compose(flip, matcher(rbind(get_nth_f, F0), TWO)))), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), normalize), chain(lbind(occurrences, switch(subgrid(get_arg_rank_f(o_g(I, R3), size, F0), I), TWO, ZERO)), fork(combine, compose(lbind(recolor_o, ZERO), rbind(sfilter, compose(flip, matcher(rbind(get_nth_f, F0), TWO)))), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), normalize))), mapply(lbind(rapply, apply(fork(compose, rbind(get_nth_f, F0), rbind(get_nth_f, L1)), product(combine(astuple(rbind(mir_rot_f, R3), rbind(mir_rot_f, R1)), astuple(rbind(mir_rot_f, R0), rbind(mir_rot_f, R2))), combine(astuple(rbind(mir_rot_f, R3), rbind(mir_rot_f, R1)), astuple(rbind(mir_rot_f, R0), rbind(mir_rot_f, R2)))))), sfilter_f(sfilter_f(o_g(I, R3), compose(rbind(greater, ONE), numcolors_f)), chain(flip, rbind(contained, lbind(remove, TWO)(palette_t(mapply(fork(mapply, compose(lbind(lbind, shift), normalize), fork(apply, chain(compose(lbind(rbind, subtract), rbind(corner, R0)), fork(combine, compose(lbind(recolor_o, ZERO), rbind(sfilter, compose(flip, matcher(rbind(get_nth_f, F0), TWO)))), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), normalize), fork(sfilter, compose(rbind(sfilter, chain(compose(positive, size), lbind(sfilter, apply(toindices, o_g(switch(subgrid(get_arg_rank_f(o_g(I, R3), size, F0), I), TWO, ZERO), R7))), lbind(lbind, contained))), chain(lbind(occurrences, switch(subgrid(get_arg_rank_f(o_g(I, R3), size, F0), I), TWO, ZERO)), fork(combine, compose(lbind(recolor_o, ZERO), rbind(sfilter, compose(flip, matcher(rbind(get_nth_f, F0), TWO)))), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), normalize)), chain(rbind(compose, compose(chain(size, rbind(get_nth_f, F0), lbind(sfilter, apply(toindices, o_g(switch(subgrid(get_arg_rank_f(o_g(I, R3), size, F0), I), TWO, ZERO), R7)))), lbind(lbind, contained))), lbind(rbind, equality), rbind(colorcount_f, TWO))))), mapply(lbind(rapply, apply(fork(compose, rbind(get_nth_f, F0), rbind(get_nth_f, L1)), product(combine(astuple(rbind(mir_rot_f, R3), rbind(mir_rot_f, R1)), astuple(rbind(mir_rot_f, R0), rbind(mir_rot_f, R2))), combine(astuple(rbind(mir_rot_f, R3), rbind(mir_rot_f, R1)), astuple(rbind(mir_rot_f, R0), rbind(mir_rot_f, R2)))))), sfilter_f(o_g(I, R3), compose(rbind(greater, ONE), numcolors_f))))))), chain(rbind(get_nth_f, F0), lbind(remove, TWO), palette_f))))))


def solve_97a05b5b(S, I):
    x1 = o_g(I, R3)
    x2 = get_arg_rank_f(x1, size, F0)
    x3 = subgrid(x2, I)
    x4 = lbind(lbind, shift)
    x5 = compose(x4, normalize)
    x6 = lbind(rbind, subtract)
    x7 = rbind(corner, R0)
    x8 = compose(x6, x7)
    x9 = lbind(recolor_o, ZERO)
    x10 = rbind(get_nth_f, F0)
    x11 = matcher(x10, TWO)
    x12 = compose(flip, x11)
    x13 = rbind(sfilter, x12)
    x14 = compose(x9, x13)
    x15 = rbind(sfilter, x11)
    x16 = fork(combine, x14, x15)
    x17 = chain(x8, x16, normalize)
    x18 = compose(positive, size)
    x19 = switch(x3, TWO, ZERO)
    x20 = o_g(x19, R7)
    x21 = apply(toindices, x20)
    x22 = lbind(sfilter, x21)
    x23 = lbind(lbind, contained)
    x24 = chain(x18, x22, x23)
    x25 = rbind(sfilter, x24)
    x26 = lbind(occurrences, x19)
    x27 = chain(x26, x16, normalize)
    x28 = compose(x25, x27)
    x29 = chain(size, x10, x22)
    x30 = compose(x29, x23)
    x31 = rbind(compose, x30)
    x32 = lbind(rbind, equality)
    x33 = rbind(colorcount_f, TWO)
    x34 = chain(x31, x32, x33)
    x35 = fork(sfilter, x28, x34)
    x36 = fork(apply, x17, x35)
    x37 = fork(mapply, x5, x36)
    x38 = rbind(get_nth_f, L1)
    x39 = fork(compose, x10, x38)
    x40 = rbind(mir_rot_f, R3)
    x41 = rbind(mir_rot_f, R1)
    x42 = astuple(x40, x41)
    x43 = rbind(mir_rot_f, R0)
    x44 = rbind(mir_rot_f, R2)
    x45 = astuple(x43, x44)
    x46 = combine(x42, x45)
    x47 = product(x46, x46)
    x48 = apply(x39, x47)
    x49 = lbind(rapply, x48)
    x50 = rbind(greater, ONE)
    x51 = compose(x50, numcolors_f)
    x52 = sfilter_f(x1, x51)
    x53 = mapply(x49, x52)
    x54 = mapply(x37, x53)
    x55 = paint(x3, x54)
    x56 = fork(apply, x17, x27)
    x57 = fork(mapply, x5, x56)
    x58 = lbind(remove, TWO)
    x59 = palette_t(x54)
    x60 = x58(x59)
    x61 = rbind(contained, x60)
    x62 = chain(x10, x58, palette_f)
    x63 = chain(flip, x61, x62)
    x64 = sfilter_f(x52, x63)
    x65 = mapply(x49, x64)
    x66 = mapply(x57, x65)
    O = paint(x55, x66)
    return O
