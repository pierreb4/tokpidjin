def solve_f15e1fac(S, I):
    return chain(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1)), branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2)), branch(equality(col_row(f_ofcolor(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I)), EIGHT), R1), ZERO), identity, rbind(mir_rot_t, R0)))(fill(branch(equality(col_row(f_ofcolor(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I)), EIGHT), R1), ZERO), identity, rbind(mir_rot_t, R0))(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I))), EIGHT, merge(papply(shift, apply(chain(lbind(sfilter, mapply(rbind(shoot, DOWN), f_ofcolor(branch(equality(col_row(f_ofcolor(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I)), EIGHT), R1), ZERO), identity, rbind(mir_rot_t, R0))(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I))), EIGHT))), lbind(compose, fork(both, fork(greater, compose(rbind(get_nth_f, F0), rbind(get_nth_f, L1)), chain(decrement, rbind(get_nth_f, F0), rbind(get_nth_f, F0))), fork(greater, chain(increment, rbind(get_nth_f, L1), rbind(get_nth_f, F0)), compose(rbind(get_nth_f, F0), rbind(get_nth_f, L1))))), lbind(lbind, astuple)), pair(order(insert(ZERO, apply(rbind(get_nth_f, F0), f_ofcolor(branch(equality(col_row(f_ofcolor(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I)), EIGHT), R1), ZERO), identity, rbind(mir_rot_t, R0))(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I))), TWO))), identity), order(apply(decrement, insert(height_t(branch(equality(col_row(f_ofcolor(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I)), EIGHT), R1), ZERO), identity, rbind(mir_rot_t, R0))(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I)))), apply(rbind(get_nth_f, F0), f_ofcolor(branch(equality(col_row(f_ofcolor(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I)), EIGHT), R1), ZERO), identity, rbind(mir_rot_t, R0))(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I))), TWO)))), identity))), apply(tojvec, interval(ZERO, increment(size_f(f_ofcolor(branch(equality(col_row(f_ofcolor(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I)), EIGHT), R1), ZERO), identity, rbind(mir_rot_t, R0))(branch(equality(col_row(f_ofcolor(I, TWO), R2), ZERO), identity, rbind(mir_rot_t, R2))(branch(portrait_f(f_ofcolor(I, TWO)), identity, rbind(mir_rot_t, R1))(I))), TWO))), ONE))))))
