def solve_aba27056(S, I):
    return fill(fill(fill(I, FOUR, delta(mapply(toindices, o_g(I, R5)))), FOUR, mapply(lbind(shift, difference(box(mapply(toindices, o_g(I, R5))), mapply(toindices, o_g(I, R5)))), apply(lbind(multiply, position(delta(mapply(toindices, o_g(I, R5))), difference(box(mapply(toindices, o_g(I, R5))), mapply(toindices, o_g(I, R5))))), interval(ZERO, NINE, ONE)))), FOUR, mapply(fork(shoot, rbind(get_nth_f, F0), fork(subtract, rbind(get_nth_f, L1), rbind(get_nth_f, F0))), product(corners(difference(box(mapply(toindices, o_g(I, R5))), mapply(toindices, o_g(I, R5)))), sfilter_f(sfilter_f(f_ofcolor(fill(fill(I, FOUR, delta(mapply(toindices, o_g(I, R5)))), FOUR, mapply(lbind(shift, difference(box(mapply(toindices, o_g(I, R5))), mapply(toindices, o_g(I, R5)))), apply(lbind(multiply, position(delta(mapply(toindices, o_g(I, R5))), difference(box(mapply(toindices, o_g(I, R5))), mapply(toindices, o_g(I, R5))))), interval(ZERO, NINE, ONE)))), ZERO), matcher(chain(rbind(colorcount_f, ZERO), rbind(toobject, fill(fill(I, FOUR, delta(mapply(toindices, o_g(I, R5)))), FOUR, mapply(lbind(shift, difference(box(mapply(toindices, o_g(I, R5))), mapply(toindices, o_g(I, R5)))), apply(lbind(multiply, position(delta(mapply(toindices, o_g(I, R5))), difference(box(mapply(toindices, o_g(I, R5))), mapply(toindices, o_g(I, R5))))), interval(ZERO, NINE, ONE))))), dneighbors), TWO)), compose(fork(both, rbind(adjacent, mapply(toindices, o_g(I, R5))), rbind(adjacent, mapply(lbind(shift, difference(box(mapply(toindices, o_g(I, R5))), mapply(toindices, o_g(I, R5)))), apply(lbind(multiply, position(delta(mapply(toindices, o_g(I, R5))), difference(box(mapply(toindices, o_g(I, R5))), mapply(toindices, o_g(I, R5))))), interval(ZERO, NINE, ONE))))), initset)))))
