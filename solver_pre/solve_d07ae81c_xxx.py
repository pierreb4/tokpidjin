def solve_d07ae81c_one(S, I):
    return fill(fill(I, branch(equality(get_color_rank_f(toobject(neighbors(center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))), I), F0), get_nth_f(apply(color, difference(o_g(I, R4), sizefilter(o_g(I, R4), ONE))), F0)), color(get_nth_f(sizefilter(o_g(I, R4), ONE), F0)), other_f(apply(color, sizefilter(o_g(I, R4), ONE)), color(get_nth_f(sizefilter(o_g(I, R4), ONE), F0)))), intersection(f_ofcolor(I, get_nth_f(apply(color, difference(o_g(I, R4), sizefilter(o_g(I, R4), ONE))), F0)), mapply(compose(fork(combine, fork(combine, rbind(shoot, UNITY), rbind(shoot, NEG_UNITY)), fork(combine, rbind(shoot, DOWN_LEFT), rbind(shoot, UP_RIGHT))), center), sizefilter(o_g(I, R4), ONE)))), branch(equality(get_color_rank_f(toobject(neighbors(center(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))), I), F0), get_nth_f(apply(color, difference(o_g(I, R4), sizefilter(o_g(I, R4), ONE))), F0)), other_f(apply(color, sizefilter(o_g(I, R4), ONE)), color(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))), color(get_nth_f(sizefilter(o_g(I, R4), ONE), F0))), intersection(f_ofcolor(I, get_nth_f(apply(color, difference(o_g(I, R4), sizefilter(o_g(I, R4), ONE))), L1)), mapply(compose(fork(combine, fork(combine, rbind(shoot, UNITY), rbind(shoot, NEG_UNITY)), fork(combine, rbind(shoot, DOWN_LEFT), rbind(shoot, UP_RIGHT))), center), sizefilter(o_g(I, R4), ONE))))


def solve_d07ae81c(S, I):
    x1 = o_g(I, R4)
    x2 = sizefilter(x1, ONE)
    x3 = get_nth_f(x2, F0)
    x4 = center(x3)
    x5 = neighbors(x4)
    x6 = toobject(x5, I)
    x7 = get_color_rank_f(x6, F0)
    x8 = difference(x1, x2)
    x9 = apply(color, x8)
    x10 = get_nth_f(x9, F0)
    x11 = equality(x7, x10)
    x12 = color(x3)
    x13 = apply(color, x2)
    x14 = other_f(x13, x12)
    x15 = branch(x11, x12, x14)
    x16 = f_ofcolor(I, x10)
    x17 = rbind(shoot, UNITY)
    x18 = rbind(shoot, NEG_UNITY)
    x19 = fork(combine, x17, x18)
    x20 = rbind(shoot, DOWN_LEFT)
    x21 = rbind(shoot, UP_RIGHT)
    x22 = fork(combine, x20, x21)
    x23 = fork(combine, x19, x22)
    x24 = compose(x23, center)
    x25 = mapply(x24, x2)
    x26 = intersection(x16, x25)
    x27 = fill(I, x15, x26)
    x28 = branch(x11, x14, x12)
    x29 = get_nth_f(x9, L1)
    x30 = f_ofcolor(I, x29)
    x31 = intersection(x30, x25)
    O = fill(x27, x28, x31)
    return O
