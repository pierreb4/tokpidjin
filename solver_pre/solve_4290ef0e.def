def solve_4290ef0e(S, I):
    return paint(mir_rot_t(paint(mir_rot_t(paint(mir_rot_t(paint(canvas(get_color_rank_t(I, F0), astuple(decrement(double(branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))))), decrement(double(branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))))))), mpapply(shift, apply(normalize, apply(compose(rbind(rbind(get_arg_rank, L1), centerofmass), fork(insert, rbind(mir_rot_f, R0), fork(insert, rbind(mir_rot_f, R3), fork(insert, rbind(mir_rot_f, R1), compose(initset, rbind(mir_rot_f, R2)))))), order(fgpartition(I), compose(invert, compose(fork(add, chain(fork(rbind(branch, NEG_TWO), positive, decrement), rbind(get_rank, L1), compose(lbind(remove, ZERO), fork(lbind(prapply, manhattan), identity, identity))), compose(double, rbind(rbind(get_val_rank, F0), width_f))), compose(lbind(colorfilter, o_g(I, R5)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE)))), R4), mpapply(shift, apply(normalize, apply(compose(rbind(rbind(get_arg_rank, L1), centerofmass), fork(insert, rbind(mir_rot_f, R0), fork(insert, rbind(mir_rot_f, R3), fork(insert, rbind(mir_rot_f, R1), compose(initset, rbind(mir_rot_f, R2)))))), order(fgpartition(I), compose(invert, compose(fork(add, chain(fork(rbind(branch, NEG_TWO), positive, decrement), rbind(get_rank, L1), compose(lbind(remove, ZERO), fork(lbind(prapply, manhattan), identity, identity))), compose(double, rbind(rbind(get_val_rank, F0), width_f))), compose(lbind(colorfilter, o_g(I, R5)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE)))), R4), mpapply(shift, apply(normalize, apply(compose(rbind(rbind(get_arg_rank, L1), centerofmass), fork(insert, rbind(mir_rot_f, R0), fork(insert, rbind(mir_rot_f, R3), fork(insert, rbind(mir_rot_f, R1), compose(initset, rbind(mir_rot_f, R2)))))), order(fgpartition(I), compose(invert, compose(fork(add, chain(fork(rbind(branch, NEG_TWO), positive, decrement), rbind(get_rank, L1), compose(lbind(remove, ZERO), fork(lbind(prapply, manhattan), identity, identity))), compose(double, rbind(rbind(get_val_rank, F0), width_f))), compose(lbind(colorfilter, o_g(I, R5)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE)))), R4), mpapply(shift, apply(normalize, apply(compose(rbind(rbind(get_arg_rank, L1), centerofmass), fork(insert, rbind(mir_rot_f, R0), fork(insert, rbind(mir_rot_f, R3), fork(insert, rbind(mir_rot_f, R1), compose(initset, rbind(mir_rot_f, R2)))))), order(fgpartition(I), compose(invert, compose(fork(add, chain(fork(rbind(branch, NEG_TWO), positive, decrement), rbind(get_rank, L1), compose(lbind(remove, ZERO), fork(lbind(prapply, manhattan), identity, identity))), compose(double, rbind(rbind(get_val_rank, F0), width_f))), compose(lbind(colorfilter, o_g(I, R5)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE))))
