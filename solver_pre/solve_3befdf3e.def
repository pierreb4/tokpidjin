def solve_3befdf3e(S, I):
    return fill(underfill(switch(I, get_color_rank_t(I, L1), other_f(remove(ZERO, palette_t(I)), get_color_rank_t(I, L1))), other_f(remove(ZERO, palette_t(I)), get_color_rank_t(I, L1)), mapply(compose(backdrop, compose(rbind(get_nth_f, F0), fork(rapply, chain(initset, rbind(get_nth_f, F0), lbind(rapply, initset(compose(lbind(power, outbox), compose(width_f, inbox))))), identity))), o_g(I, R1))), ZERO, mapply(fork(intersection, compose(backdrop, compose(rbind(get_nth_f, F0), fork(rapply, chain(initset, rbind(get_nth_f, F0), lbind(rapply, initset(compose(lbind(power, outbox), compose(width_f, inbox))))), identity))), fork(mapply, compose(lbind(lbind(chain, backdrop), inbox), compose(lbind(power, outbox), compose(width_f, inbox))), chain(lbind(apply, initset), corners, compose(backdrop, compose(rbind(get_nth_f, F0), fork(rapply, chain(initset, rbind(get_nth_f, F0), lbind(rapply, initset(compose(lbind(power, outbox), compose(width_f, inbox))))), identity)))))), o_g(I, R1)))
