def solve_4290ef0e_one(S, I):
    return paint(mir_rot_t(paint(mir_rot_t(paint(mir_rot_t(paint(canvas(get_color_rank_t(I, F0), astuple(decrement(double(branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))))), decrement(double(branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))))))), mpapply(shift, apply(normalize, apply(compose(rbind(rbind(get_arg_rank, L1), centerofmass), fork(insert, rbind(mir_rot_f, R0), fork(insert, rbind(mir_rot_f, R3), fork(insert, rbind(mir_rot_f, R1), compose(initset, rbind(mir_rot_f, R2)))))), order(fgpartition(I), compose(invert, compose(fork(add, chain(fork(rbind(branch, NEG_TWO), positive, decrement), rbind(get_rank, L1), compose(lbind(remove, ZERO), fork(lbind(prapply, manhattan), identity, identity))), compose(double, rbind(rbind(get_val_rank, F0), width_f))), compose(lbind(colorfilter, o_g(I, R5)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE)))), R4), mpapply(shift, apply(normalize, apply(compose(rbind(rbind(get_arg_rank, L1), centerofmass), fork(insert, rbind(mir_rot_f, R0), fork(insert, rbind(mir_rot_f, R3), fork(insert, rbind(mir_rot_f, R1), compose(initset, rbind(mir_rot_f, R2)))))), order(fgpartition(I), compose(invert, compose(fork(add, chain(fork(rbind(branch, NEG_TWO), positive, decrement), rbind(get_rank, L1), compose(lbind(remove, ZERO), fork(lbind(prapply, manhattan), identity, identity))), compose(double, rbind(rbind(get_val_rank, F0), width_f))), compose(lbind(colorfilter, o_g(I, R5)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE)))), R4), mpapply(shift, apply(normalize, apply(compose(rbind(rbind(get_arg_rank, L1), centerofmass), fork(insert, rbind(mir_rot_f, R0), fork(insert, rbind(mir_rot_f, R3), fork(insert, rbind(mir_rot_f, R1), compose(initset, rbind(mir_rot_f, R2)))))), order(fgpartition(I), compose(invert, compose(fork(add, chain(fork(rbind(branch, NEG_TWO), positive, decrement), rbind(get_rank, L1), compose(lbind(remove, ZERO), fork(lbind(prapply, manhattan), identity, identity))), compose(double, rbind(rbind(get_val_rank, F0), width_f))), compose(lbind(colorfilter, o_g(I, R5)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE)))), R4), mpapply(shift, apply(normalize, apply(compose(rbind(rbind(get_arg_rank, L1), centerofmass), fork(insert, rbind(mir_rot_f, R0), fork(insert, rbind(mir_rot_f, R3), fork(insert, rbind(mir_rot_f, R1), compose(initset, rbind(mir_rot_f, R2)))))), order(fgpartition(I), compose(invert, compose(fork(add, chain(fork(rbind(branch, NEG_TWO), positive, decrement), rbind(get_rank, L1), compose(lbind(remove, ZERO), fork(lbind(prapply, manhattan), identity, identity))), compose(double, rbind(rbind(get_val_rank, F0), width_f))), compose(lbind(colorfilter, o_g(I, R5)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size_f(fgpartition(I)), increment(size_f(fgpartition(I)))), ONE))))


def solve_4290ef0e(S, I):
    x1 = get_color_rank_t(I, F0)
    x2 = fgpartition(I)
    x3 = apply(size, x2)
    x4 = contained(ONE, x3)
    x5 = size_f(x2)
    x6 = increment(x5)
    x7 = branch(x4, x5, x6)
    x8 = double(x7)
    x9 = decrement(x8)
    x10 = astuple(x9, x9)
    x11 = canvas(x1, x10)
    x12 = rbind(get_arg_rank, L1)
    x13 = rbind(x12, centerofmass)
    x14 = rbind(mir_rot_f, R0)
    x15 = rbind(mir_rot_f, R3)
    x16 = rbind(mir_rot_f, R1)
    x17 = rbind(mir_rot_f, R2)
    x18 = compose(initset, x17)
    x19 = fork(insert, x16, x18)
    x20 = fork(insert, x15, x19)
    x21 = fork(insert, x14, x20)
    x22 = compose(x13, x21)
    x23 = rbind(branch, NEG_TWO)
    x24 = fork(x23, positive, decrement)
    x25 = rbind(get_rank, L1)
    x26 = lbind(remove, ZERO)
    x27 = lbind(prapply, manhattan)
    x28 = fork(x27, identity, identity)
    x29 = compose(x26, x28)
    x30 = chain(x24, x25, x29)
    x31 = rbind(get_val_rank, F0)
    x32 = rbind(x31, width_f)
    x33 = compose(double, x32)
    x34 = fork(add, x30, x33)
    x35 = o_g(I, R5)
    x36 = lbind(colorfilter, x35)
    x37 = compose(x36, color)
    x38 = compose(x34, x37)
    x39 = compose(invert, x38)
    x40 = order(x2, x39)
    x41 = apply(x22, x40)
    x42 = apply(normalize, x41)
    x43 = interval(ZERO, x7, ONE)
    x44 = pair(x43, x43)
    x45 = mpapply(shift, x42, x44)
    x46 = paint(x11, x45)
    x47 = mir_rot_t(x46, R4)
    x48 = paint(x47, x45)
    x49 = mir_rot_t(x48, R4)
    x50 = paint(x49, x45)
    x51 = mir_rot_t(x50, R4)
    O = paint(x51, x45)
    return O
