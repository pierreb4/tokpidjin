def solve_447fd412_one(S, I):
    return paint(I, mapply(fork(mapply, lbind(lbind, shift), compose(lbind(apply, increment), fork(apply, chain(lbind(rbind, subtract), rbind(corner, R0), fork(difference, identity, fork(sfilter, identity, compose(lbind(matcher, rbind(get_nth_f, F0)), rbind(get_color_rank_f, F0))))), chain(lbind(occurrences, I), fork(combine, identity, compose(lbind(recolor_i, ZERO), outbox)), fork(difference, identity, fork(sfilter, identity, compose(lbind(matcher, rbind(get_nth_f, F0)), rbind(get_color_rank_f, F0)))))))), rapply_t(apply(lbind(rbind, upscale_f), interval(ONE, FOUR, ONE)), normalize(get_arg_rank_f(o_g(I, R3), numcolors_f, F0)))))


def solve_447fd412(S, I):
    x1 = lbind(lbind, shift)
    x2 = lbind(apply, increment)
    x3 = lbind(rbind, subtract)
    x4 = rbind(corner, R0)
    x5 = rbind(get_nth_f, F0)
    x6 = lbind(matcher, x5)
    x7 = rbind(get_color_rank_f, F0)
    x8 = compose(x6, x7)
    x9 = fork(sfilter, identity, x8)
    x10 = fork(difference, identity, x9)
    x11 = chain(x3, x4, x10)
    x12 = lbind(occurrences, I)
    x13 = lbind(recolor_i, ZERO)
    x14 = compose(x13, outbox)
    x15 = fork(combine, identity, x14)
    x16 = chain(x12, x15, x10)
    x17 = fork(apply, x11, x16)
    x18 = compose(x2, x17)
    x19 = fork(mapply, x1, x18)
    x20 = lbind(rbind, upscale_f)
    x21 = interval(ONE, FOUR, ONE)
    x22 = apply(x20, x21)
    x23 = o_g(I, R3)
    x24 = get_arg_rank_f(x23, numcolors_f, F0)
    x25 = normalize(x24)
    x26 = rapply_t(x22, x25)
    x27 = mapply(x19, x26)
    O = paint(I, x27)
    return O
