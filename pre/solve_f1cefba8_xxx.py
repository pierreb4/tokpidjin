def solve_f1cefba8_one(S, I):
    return fill(fill(I, other_f(remove(ZERO, palette_t(I)), get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), combine_f(mapply(vfrontier, sfilter_f(shift(f_ofcolor(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), corner(get_nth_f(o_g(I, R1), F0), R0)), fork(either, matcher(rbind(get_nth_f, F0), col_row(f_ofcolor(I, get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), R1)), matcher(rbind(get_nth_f, F0), col_row(f_ofcolor(I, get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), R0))))), mapply(hfrontier, difference(shift(f_ofcolor(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), corner(get_nth_f(o_g(I, R1), F0), R0)), sfilter_f(shift(f_ofcolor(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), corner(get_nth_f(o_g(I, R1), F0), R0)), fork(either, matcher(rbind(get_nth_f, F0), col_row(f_ofcolor(I, get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), R1)), matcher(rbind(get_nth_f, F0), col_row(f_ofcolor(I, get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), R0)))))))), get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1), intersection(f_ofcolor(I, ZERO), combine_f(mapply(vfrontier, sfilter_f(shift(f_ofcolor(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), corner(get_nth_f(o_g(I, R1), F0), R0)), fork(either, matcher(rbind(get_nth_f, F0), col_row(f_ofcolor(I, get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), R1)), matcher(rbind(get_nth_f, F0), col_row(f_ofcolor(I, get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), R0))))), mapply(hfrontier, difference(shift(f_ofcolor(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), corner(get_nth_f(o_g(I, R1), F0), R0)), sfilter_f(shift(f_ofcolor(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), corner(get_nth_f(o_g(I, R1), F0), R0)), fork(either, matcher(rbind(get_nth_f, F0), col_row(f_ofcolor(I, get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), R1)), matcher(rbind(get_nth_f, F0), col_row(f_ofcolor(I, get_color_rank_t(fill(subgrid(get_nth_f(o_g(I, R1), F0), I), ZERO, shift(asindices(power(trim, TWO)(subgrid(get_nth_f(o_g(I, R1), F0), I))), TWO_BY_TWO)), L1)), R0)))))))))


def solve_f1cefba8(S, I):
    x1 = palette_t(I)
    x2 = remove(ZERO, x1)
    x3 = o_g(I, R1)
    x4 = get_nth_f(x3, F0)
    x5 = subgrid(x4, I)
    x6 = power(trim, TWO)
    x7 = x6(x5)
    x8 = asindices(x7)
    x9 = shift(x8, TWO_BY_TWO)
    x10 = fill(x5, ZERO, x9)
    x11 = get_color_rank_t(x10, L1)
    x12 = other_f(x2, x11)
    x13 = f_ofcolor(x10, x11)
    x14 = corner(x4, R0)
    x15 = shift(x13, x14)
    x16 = rbind(get_nth_f, F0)
    x17 = f_ofcolor(I, x11)
    x18 = col_row(x17, R1)
    x19 = matcher(x16, x18)
    x20 = col_row(x17, R0)
    x21 = matcher(x16, x20)
    x22 = fork(either, x19, x21)
    x23 = sfilter_f(x15, x22)
    x24 = mapply(vfrontier, x23)
    x25 = difference(x15, x23)
    x26 = mapply(hfrontier, x25)
    x27 = combine_f(x24, x26)
    x28 = fill(I, x12, x27)
    x29 = f_ofcolor(I, ZERO)
    x30 = intersection(x29, x27)
    O = fill(x28, x11, x30)
    return O
