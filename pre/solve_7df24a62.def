def solve_7df24a62(S, I):
    return fill(I, ONE, mpapply(mapply, apply(chain(lbind(lbind, shift), rbind(shift, NEG_UNITY), compose(normalize, rbind(f_ofcolor, ONE))), combine(astuple(subgrid(f_ofcolor(I, ONE), I), mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R4)), astuple(mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R5), mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R6)))), papply(sfilter, apply(fork(product, compose(lbind(rbind(interval, ONE), ZERO), chain(increment, lbind(subtract, height_t(I)), height_f)), compose(lbind(rbind(interval, ONE), ZERO), chain(increment, lbind(subtract, width_t(I)), width_f))), apply(normalize, apply(compose(rbind(shift, corner(f_ofcolor(I, ONE), R0)), rbind(f_ofcolor, FOUR)), combine(astuple(subgrid(f_ofcolor(I, ONE), I), mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R4)), astuple(mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R5), mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R6)))))), apply(lbind(compose, matcher(size, ZERO)), papply(compose, apply(lbind(rbind, difference), apply(lbind(difference, f_ofcolor(I, FOUR)), apply(compose(rbind(shift, corner(f_ofcolor(I, ONE), R0)), rbind(f_ofcolor, FOUR)), combine(astuple(subgrid(f_ofcolor(I, ONE), I), mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R4)), astuple(mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R5), mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R6)))))), apply(lbind(lbind, shift), apply(normalize, apply(compose(rbind(shift, corner(f_ofcolor(I, ONE), R0)), rbind(f_ofcolor, FOUR)), combine(astuple(subgrid(f_ofcolor(I, ONE), I), mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R4)), astuple(mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R5), mir_rot_t(subgrid(f_ofcolor(I, ONE), I), R6)))))))))))
