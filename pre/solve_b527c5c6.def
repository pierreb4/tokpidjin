def solve_b527c5c6(S, I):
    return underfill(fill(I, TWO, mapply(fork(shoot, compose(center, rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), fork(astuple, fork(add, compose(invert, fork(equality, compose(rbind(col_row, R1), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R1))), fork(equality, compose(rbind(col_row, R0), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R0))), fork(add, compose(invert, fork(equality, compose(rbind(col_row, R2), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R2))), fork(equality, compose(rbind(col_row, R3), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R3))))), o_g(I, R1))), THREE, combine_f(mapply(fork(mapply, compose(lbind(lbind, shift), fork(shoot, compose(center, rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), fork(astuple, fork(add, compose(invert, fork(equality, compose(rbind(col_row, R1), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R1))), fork(equality, compose(rbind(col_row, R0), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R0))), fork(add, compose(invert, fork(equality, compose(rbind(col_row, R2), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R2))), fork(equality, compose(rbind(col_row, R3), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R3)))))), compose(lbind(apply, toivec), fork(rbind(interval, ONE), compose(invert, chain(decrement, rbind(get_rank, L1), shape_f)), compose(increment, chain(decrement, rbind(get_rank, L1), shape_f))))), difference(o_g(I, R1), sfilter_f(o_g(I, R1), compose(vline_i, fork(shoot, compose(center, rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), fork(astuple, fork(add, compose(invert, fork(equality, compose(rbind(col_row, R1), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R1))), fork(equality, compose(rbind(col_row, R0), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R0))), fork(add, compose(invert, fork(equality, compose(rbind(col_row, R2), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R2))), fork(equality, compose(rbind(col_row, R3), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R3))))))))), mapply(fork(mapply, compose(lbind(lbind, shift), fork(shoot, compose(center, rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), fork(astuple, fork(add, compose(invert, fork(equality, compose(rbind(col_row, R1), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R1))), fork(equality, compose(rbind(col_row, R0), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R0))), fork(add, compose(invert, fork(equality, compose(rbind(col_row, R2), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R2))), fork(equality, compose(rbind(col_row, R3), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R3)))))), compose(lbind(apply, tojvec), fork(rbind(interval, ONE), compose(invert, chain(decrement, rbind(get_rank, L1), shape_f)), compose(increment, chain(decrement, rbind(get_rank, L1), shape_f))))), sfilter_f(o_g(I, R1), compose(vline_i, fork(shoot, compose(center, rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), fork(astuple, fork(add, compose(invert, fork(equality, compose(rbind(col_row, R1), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R1))), fork(equality, compose(rbind(col_row, R0), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R0))), fork(add, compose(invert, fork(equality, compose(rbind(col_row, R2), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R2))), fork(equality, compose(rbind(col_row, R3), rbind(sfilter, matcher(rbind(get_nth_f, F0), TWO))), rbind(col_row, R3))))))))))
