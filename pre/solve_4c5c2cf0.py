def solve_4c5c2cf0_one(S, I):
    return paint(paint(I, shift(get_nth_f(o_g(mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0), R3), F0), subtract(center(extract(o_g(I, R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, I)))), center(extract(o_g(mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0), R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0)))))))), shift(get_nth_f(o_g(mir_rot_t(subgrid(get_nth_f(o_g(paint(I, shift(get_nth_f(o_g(mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0), R3), F0), subtract(center(extract(o_g(I, R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, I)))), center(extract(o_g(mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0), R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0)))))))), R3), F0), paint(I, shift(get_nth_f(o_g(mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0), R3), F0), subtract(center(extract(o_g(I, R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, I)))), center(extract(o_g(mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0), R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0))))))))), R2), R3), F0), subtract(center(extract(o_g(I, R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, I)))), center(extract(o_g(mir_rot_t(subgrid(get_nth_f(o_g(paint(I, shift(get_nth_f(o_g(mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0), R3), F0), subtract(center(extract(o_g(I, R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, I)))), center(extract(o_g(mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0), R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0)))))))), R3), F0), paint(I, shift(get_nth_f(o_g(mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0), R3), F0), subtract(center(extract(o_g(I, R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, I)))), center(extract(o_g(mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0), R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, mir_rot_t(subgrid(get_nth_f(o_g(I, R3), F0), I), R0))))))))), R2), R7), matcher(color, color(extract(o_g(I, R7), compose(fork(equality, identity, rbind(mir_rot_t, R4)), rbind(subgrid, I))))))))))


def solve_4c5c2cf0(S, I):
    x1 = o_g(I, R3)
    x2 = get_nth_f(x1, F0)
    x3 = subgrid(x2, I)
    x4 = mir_rot_t(x3, R0)
    x5 = o_g(x4, R3)
    x6 = get_nth_f(x5, F0)
    x7 = o_g(I, R7)
    x8 = rbind(mir_rot_t, R4)
    x9 = fork(equality, identity, x8)
    x10 = rbind(subgrid, I)
    x11 = compose(x9, x10)
    x12 = extract(x7, x11)
    x13 = center(x12)
    x14 = o_g(x4, R7)
    x15 = rbind(subgrid, x4)
    x16 = compose(x9, x15)
    x17 = extract(x14, x16)
    x18 = center(x17)
    x19 = subtract(x13, x18)
    x20 = shift(x6, x19)
    x21 = paint(I, x20)
    x22 = o_g(x21, R3)
    x23 = get_nth_f(x22, F0)
    x24 = subgrid(x23, x21)
    x25 = mir_rot_t(x24, R2)
    x26 = o_g(x25, R3)
    x27 = get_nth_f(x26, F0)
    x28 = o_g(x25, R7)
    x29 = color(x12)
    x30 = matcher(color, x29)
    x31 = extract(x28, x30)
    x32 = center(x31)
    x33 = subtract(x13, x32)
    x34 = shift(x27, x33)
    O = paint(x21, x34)
    return O
