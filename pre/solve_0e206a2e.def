def solve_0e206a2e(S, I):
    return cover(paint(I, mapply(fork(mapply, compose(lbind(lbind, shift), normalize), fork(apply, chain(compose(lbind(rbind, subtract), rbind(corner, R0)), rbind(sfilter, compose(rbind(contained, remove(get_arg_rank_f(remove(ZERO, palette_t(I)), lbind(colorcount_t, I), F0), remove(ZERO, palette_t(I)))), rbind(get_nth_f, F0))), normalize), chain(lbind(occurrences, I), rbind(sfilter, compose(rbind(contained, remove(get_arg_rank_f(remove(ZERO, palette_t(I)), lbind(colorcount_t, I), F0), remove(ZERO, palette_t(I)))), rbind(get_nth_f, F0))), normalize))), mapply(lbind(rapply, combine(combine(astuple(rbind(mir_rot_f, R3), rbind(mir_rot_f, R1)), astuple(rbind(mir_rot_f, R0), rbind(mir_rot_f, R2))), totuple(apply(fork(compose, rbind(get_nth_f, F0), rbind(get_nth_f, L1)), product(combine(astuple(rbind(mir_rot_f, R3), rbind(mir_rot_f, R1)), astuple(rbind(mir_rot_f, R0), rbind(mir_rot_f, R2))), combine(astuple(rbind(mir_rot_f, R3), rbind(mir_rot_f, R1)), astuple(rbind(mir_rot_f, R0), rbind(mir_rot_f, R2)))))))), sfilter(o_g(I, R1), compose(rbind(greater, ONE), numcolors_f))))), merge_f(sfilter(o_g(I, R1), compose(rbind(greater, ONE), numcolors_f))))
