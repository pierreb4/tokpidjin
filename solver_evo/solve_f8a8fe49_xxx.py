def solve_f8a8fe49_one(S, I):
    return paint(paint(replace(I, GRAY, BLACK), shift(shift(get_nth_t(apply(compose(normalize, asobject), branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), hsplit, vsplit)(branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), rbind(mir_rot_t, R2), rbind(mir_rot_t, R0))(trim(subgrid(f_ofcolor(I, RED), I))), TWO)), L1), increment(corner(f_ofcolor(I, RED), R0))), invert(compose(branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), tojvec, toivec), increment)(branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), width_f, height_f)(get_nth_t(apply(compose(normalize, asobject), branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), hsplit, vsplit)(branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), rbind(mir_rot_t, R2), rbind(mir_rot_t, R0))(trim(subgrid(f_ofcolor(I, RED), I))), TWO)), L1)))))), shift(shift(get_nth_f(apply(compose(normalize, asobject), branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), hsplit, vsplit)(branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), rbind(mir_rot_t, R2), rbind(mir_rot_t, R0))(trim(subgrid(f_ofcolor(I, RED), I))), TWO)), F0), increment(corner(f_ofcolor(I, RED), R0))), compose(branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), tojvec, toivec), increment)(double(branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), width_f, height_f)(get_nth_t(apply(compose(normalize, asobject), branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), hsplit, vsplit)(branch(portrait_f(get_nth_f(colorfilter(o_g(I, R5), RED), F0)), rbind(mir_rot_t, R2), rbind(mir_rot_t, R0))(trim(subgrid(f_ofcolor(I, RED), I))), TWO)), L1))))))


def solve_f8a8fe49(S, I):
    x1 = replace(I, GRAY, BLACK)
    x2 = compose(normalize, asobject)
    x3 = o_g(I, R5)
    x4 = colorfilter(x3, RED)
    x5 = get_nth_f(x4, F0)
    x6 = portrait_f(x5)
    x7 = branch(x6, hsplit, vsplit)
    x8 = rbind(mir_rot_t, R2)
    x9 = rbind(mir_rot_t, R0)
    x10 = branch(x6, x8, x9)
    x11 = f_ofcolor(I, RED)
    x12 = subgrid(x11, I)
    x13 = trim(x12)
    x14 = x10(x13)
    x15 = x7(x14, TWO)
    x16 = apply(x2, x15)
    x17 = get_nth_t(x16, L1)
    x18 = corner(x11, R0)
    x19 = increment(x18)
    x20 = shift(x17, x19)
    x21 = branch(x6, tojvec, toivec)
    x22 = compose(x21, increment)
    x23 = branch(x6, width_f, height_f)
    x24 = x23(x17)
    x25 = x22(x24)
    x26 = invert(x25)
    x27 = shift(x20, x26)
    x28 = paint(x1, x27)
    x29 = get_nth_f(x16, F0)
    x30 = shift(x29, x19)
    x31 = double(x24)
    x32 = x22(x31)
    x33 = shift(x30, x32)
    O = paint(x28, x33)
    return O
